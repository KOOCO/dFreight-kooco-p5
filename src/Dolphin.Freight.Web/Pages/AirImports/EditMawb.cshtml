@page
@using Dolphin.Freight.Web.CommonService;
@using Dolphin.Freight.Web.Pages.Shared.Memos;
@using Volo.Abp.Users
@using Dolphin.Freight.AirExports
@using Dolphin.Freight.AirImports
@using Dolphin.Freight.Localization
@using Dolphin.Freight.Web.Pages.Components
@using Microsoft.Extensions.Localization
@model Dolphin.Freight.Web.Pages.AirImports.EditMawbModel
@inject IStringLocalizer<FreightResource> L
@inject IDropdownService _dropdownService
@inject ICurrentUser CurrentUser
@section styles
    {
    @*<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" rel="stylesheet">*@
    <style>
        #ejo .btn-primary {
            color: #fff;
            background-color: rgb(0 123 255 / 52%);
            border-color: #007bff;
        }
        .redStar::before {
            content: "*";
            color: red;
        }

        a.disabled {
            pointer-events: none;
            cursor: default;
            color: gray;
        }
    </style>
}
@section scripts
    {
    <script src="https://cdn.jsdelivr.net/npm/jquery-templates@1.0.0/jquery.tmpl.min.js"></script>
    <abp-script src="/Pages/AirImports/EditMawb.js" />
    <script type="text/javascript">
        var l = abp.localization.getResource('Freight');
        var isLocked;
        $(document).ready(function () {

            var l = abp.localization.getResource('Freight');
            var showMsg = '@Model.ShowMsg';
            var HAWBNO = 0;
            if (showMsg === null || showMsg.trim() === "") {

            } else {
                abp.message.success('Successfully saved.');
            }
              var url = new URL(window.location.href);
    var result = url.searchParams.get('copyHawbMessage');
    if (result == 'True') {
        var id = '@Model.ResultedMawbId';
        createModal.open({
            id,

        });

    }
             isLocked = '@Model.MawbModel.IsLocked';
         
            const isDirectMasterChecked = document.querySelector('#isDirectMaster');
            if (isDirectMasterChecked.checked == true) {
                $("#shipperId").removeAttr("disabled");
                $("#consigneeId").removeAttr("disabled");
                $("#notifyId").removeAttr("disabled");
                $("#customerId").removeAttr("disabled");
                $("#billToId").removeAttr("disabled");
                $("#salesId").removeAttr("disabled");
            }

            // Awb Cancel Area
            $("#isDirectMaster").change(function () {
                if (this.checked) {
                    $("#shipperId").removeAttr("disabled");
                    $("#consigneeId").removeAttr("disabled");
                    $("#notifyId").removeAttr("disabled");
                    $("#customerId").removeAttr("disabled");
                    $("#billToId").removeAttr("disabled");
                    $("#salesId").removeAttr("disabled");
                } else {
                    $("#shipperId").attr("disabled", "disabled");
                    $("#consigneeId").attr("disabled", "disabled");
                    $("#notifyId").attr("disabled", "disabled");
                    $("#customerId").attr("disabled", "disabled");
                    $("#billToId").attr("disabled", "disabled");
                    $("#salesId").attr("disabled", "disabled");
                }
            });

            // Calculate Weight Kg to Lb
            $("#GrossWeightKg").on('keyup', function () {
                $("#GrossWeightLb").val(Math.round($("#GrossWeightKg").val() * 2.2046226218 * 100) / 100);
            });
            $("#ChargeableWeightKg").on('keyup', function () {
                $("#ChargeableWeightLb").val(Math.round($("#ChargeableWeightKg").val() * 2.2046226218 * 100) / 100);
            });

            // Calculate Weight Lb to Kg
            $("#GrossWeightLb").on('keyup', function () {
                $("#GrossWeightKg").val(Math.round($("#GrossWeightLb").val() * 0.45359237 * 100) / 100);
            });
            $("#ChargeableWeightLb").on('keyup', function () {
                $("#ChargeableWeightKg").val(Math.round($("#ChargeableWeightLb").val() * 0.45359237 * 100) / 100);
            });

            $('#addHBtn').on('click', function () {
                if ($('#mawbDiv')[0].classList.contains('show')) {
                    $('#btnMawbCollapse').click();
                }

                if ($('#btnHawbCardCollapse_0').length) {
                    showAlert(alertConfirmation2, 'Store');
                }
                else {

                    let hawbcard = createHawbCard();

                    let index = $('.hbl_sm_area').find('.card').length;
                    hawbcard = setHawbCardValues(hawbcard, '00000000-0000-0000-0000-000000000000', '0', index);

                    $('#hblCards').append(hawbcard);

                    setTimeout(() => {
                        $('.hblCardTitle')[index].click();
                    }, 500);
                }
            })
        });
            var createMemoModal = new abp.ModalManager({
                viewUrl: '/AirImports/CopyMawbModal',
            });
        $('#editForm').on('abp-ajax-success', function (result, rs) {
            console.log("enter here");
            event.preventDefault();
            abp.message.success('Successfully Saved').then(function () {
                location.href = "/AirImports/Index";
            });
            //location.href = '/AirImports/EditMawb/' + rs.responseText.id + '/show';
        });

        $('#hblMainCard').append('#mawbCard');

        function onHawbCardClick(e, hawbId) {
            debugger;
            var element = e.currentTarget || e.target || e.srcElement;
            var hawbNo = element.id.split('_')[1];

            if ($('#btnHawbCardCollapse_0').length && hawbNo != 0) {
                HAWBNO = hawbNo;
                showAlert(alertConfirmation, 'Continue');
            }
            else {

                var color = getComputedStyle(element.parentElement.parentElement).backgroundColor;

                if (!$('#btnHawbCardCollapse_' + hawbNo).attr('class').includes('collapsed')) {
                    $('.hblCardHawbNo').addClass('d-none');
                    $('#hblCard_' + hawbNo).removeClass('d-none');
                }
                else {

                    var ajaxParams = undefined;

                    Swal.fire({
                        title: 'Loading...',
                        didOpen: () => {
                            Swal.showLoading()
                        }
                    })

                    abp.ajax($.extend(true, {
                        url: abp.appPath + 'api/ImportExport/AirImportBasicHawb?Id=' + hawbId,
                        type: 'GET',
                        dataType: "html",
                    }, ajaxParams)).done(function (partial) {
                        $('#partialContainer').html('');
                        $('#partialContainer').html(partial);

                        setFilteredDropdown();

                        onSetCommodity();
                        onSetSubHawbs();
                        Swal.clickCancel();
                        if (isLocked == 'True') abp.message.warn(l("Message:LockMessage"));
                        $('#hblCard').find('.card-header').attr('style', 'background:' + color + ';color:white')

                        $('#chkFrtRelease').on('change', function () {
                            if (this.checked) {
                                $('#HawbModel_FrtRelease').removeAttr('disabled');
                                $('#HawbModel_ReleasedBy').val('@(CurrentUser.Name + " " + CurrentUser.SurName)');
                            }
                            else {
                                $('#HawbModel_FrtRelease').val('');
                                $('#HawbModel_ReleasedBy').val('');
                                $('#HawbModel_FrtRelease').attr('disabled', 'disabled');
                            }
                        })

                        $('#chkFrtRelease').prop('checked', ($('#HawbModel_ReleasedBy').val() != ''));
                    })

                    $('.btnHawbCardCollapse').each(function (i, e) {
                        let tempHawbNo = e.id.split('_')[1];
                        if (tempHawbNo == hawbNo) {
                            $('#btnHawbCardCollapse_' + hawbNo).click();
                        }
                        else {
                            $('#btnHawbCardCollapse_' + tempHawbNo).addClass('collapsed');
                            $('#btnHawbCardCollapse_' + tempHawbNo).attr('aria-expanded', 'false');
                            $('#hawbCard_' + i).removeClass('show');
                        }
                    })

                    //let isExpanded = $('.btnHawbCardCollapse').filter(function(f, e){ return $(e).attr('aria-expanded') == 'true' }).length;

                    //if (isExpanded) {
                    //    $('.btnHawbCardCollapse').click();
                    //}
                    //else{
                    //    $('#btnHawbCardCollapse_'+hawbNo).click();
                    //}
                }
            }
        }

    function cancelButton() {
        window.location.href = window.location.href;
    }


        function createHawbCard() {
            let abpCard = '<div class="{{divClass}}"><div class="card-header pointer"><h5 class="card-title text-light hblCardTitle" id="title_{{hawbNo}}"' +
                ' onclick="onHawbCardClick(event,{{hblCardId}})">{{hawbNo}}</h5>' +
                ' <button type="button" class="btn d-none btn-collapse collapsed btnHawbCardCollapse" data-val="{{index}}" data-bs-toggle="collapse" id="btnHawbCardCollapse_{{hawbNo}}" data-bs-target="#{{cardBodyId}}" aria-expanded="false" aria-controls="mawbDiv">' +
                ' <i class="fa fa-caret-down" style="color:#FFFFFF;"></i></button > </div><div class="card-body collapse customForm" id="{{cardBodyId}}" style="min-height:150px !important"></div>';
            return abpCard;
        }

        function setHawbCardValues(abpcard, cardId, hawbNo, index) {
            let apbCardClass = 'card board-item hbl-sm-' + index;
            let cardBodyId = 'hawbCard_' + index;
            cardId = "'" + cardId + "'";

            abpcard = abpcard.replaceAll("{{divClass}}", apbCardClass);
            abpcard = abpcard.replaceAll("{{hawbNo}}", hawbNo);
            abpcard = abpcard.replaceAll("{{hblCardId}}", cardId);
            abpcard = abpcard.replaceAll("{{index}}", index);
            abpcard = abpcard.replaceAll("{{cardBodyId}}", cardBodyId);

            return abpcard;
        }

        function showAlert(funName, buttonName) {
            Swal.fire({
                icon: 'error',
                text: 'The data has not been saved, are you sure you want to ' + buttonName.toLowerCase() + '?',
                showCancelButton: true,
                confirmButtonText: buttonName,
            }).then(funName)
        }

        function alertConfirmation(result) {
            if (result.isConfirmed) {
                let indx = $('.hbl_sm_area').find('.card').length;
                $('#btnHawbCardCollapse_0').parent().parent().remove();
                if (HAWBNO) {
                    $('#title_' + HAWBNO).click()
                }
                else {
                    $('#hawbCard_' + (indx - 2)).parent().find('.card-title').click();
                }
            }
        }

        function alertConfirmation2() {
            $('#saveBtn').click();
        }
        function editMawbAirImport(prevMawbId, hawbId) {
            debugger;
            $.ajax({
                url: abp.appPath + 'Docs/AirImportPartialView',
                type: 'GET',
                data: { prevMawbId: prevMawbId, hawbId: hawbId },
                dataType: "html",
                success: function (res) {
                    $('.modal-content').html(res);
                    $('.modal').modal('show');
                }
            });
        }
        function deleteHawbAirImport() {
            islockedCheck = $('#HawbModel_IsLocked').val();
            debugger;
            islockedCheck = islockedCheck === "True";
            if (islockedCheck) {
                abp.message.error(l('Delete Error Data Is Locked'))
            }
            else {
                abp.message.confirm(l('DeletionConfirmationMessage'))
                    .then(function (confirmed) {
                        if (confirmed) {
                            dolphin.freight.importExport.airImports.airImportHawb
                                .delete($('#HawbModel_Id').val())
                                .then(function () {
                                    abp.message.success(l('SuccessfullyDeleted'));
                                    $('#hblCard').remove();
                                    $('#hblCards').find('.card-body.show').closest('.card.board-item').remove()
                                });
                        }
                    });
            }
        }
              var createModal = new abp.ModalManager({
        viewUrl: '/AirImports/CopyHawbResultModal',
    });
        function deleteMawbAirImport() {
            if (isLocked) { 
             abp.message.error(l('Delete Error Data Is Locked'))
            }
            else {
                var url = new URL(window.location.href);
                var mawbId = url.searchParams.get('Id');
                abp.message.confirm(l('DeletionConfirmationMessage'))
                    .then(function (confirmed) {
                        if (confirmed) {
                            dolphin.freight.importExport.airImports.airImportMawb
                                .delete(mawbId)
                                .then(function () {
                                    abp.message.success(l('SuccessfullyDeleted')).done(function () {
                                        location.href = '/AirImports/Index';
                                    });
                                });
                        }
                    })
            }
            }

        function OpenInTrackTrace() {
            var MawbNo = $('#MawbModel_MawbNo').val();
            myWindow = window.open('https://www.track-trace.com/bol#' + MawbNo, '_blank', 'width=1200,height=1000');
            myWindow.focus();
        }

        var chkIndex = 0;
        function onAddCommodity() {
            var newRowData = {
                chkIndex: chkIndex
            };

            var newRow = $('#commodityTemplate').tmpl(newRowData);

            $('#commodityBody').append(newRow);

            chkIndex += 1;

            resetIndex('commodityBody');
        }

        function onRemoveCommodity() {
            $('[name="chk_commodity"]:checked').each(function (i, elem) {
                $(elem).closest('tr').remove();
            });

            resetIndex('commodityBody');
        }

        function onSetCommodity() {

            var extraProperties = $('#HawbModel_ExtraProperties').val();

            if (extraProperties && extraProperties != 'null') {
                var commodities = JSON.parse(extraProperties).Commodities;

                if (commodities && commodities.length) {
                    var commodityIndex = 0;
                    commodities.forEach(function (commodity) {
                        commodity.chkIndex = commodityIndex;

                        var newRow = $('#commodityTemplate').tmpl(commodity);
                        $('#commodityBody').append(newRow);

                        commodityIndex += 1;
                    })
                }
            }
        }

        var subHawbIndex = 0;
        function onAddSubHawb() {

            var newRowData = { index: subHawbIndex };

            var newRow = $('#subHawbTemplate').tmpl(newRowData);

            $('#subHAWBBody').append(newRow);

            subHawbIndex += 1;

            resetIndex('subHAWBBody');
        }

        function onRemoveSubHawbs() {
            $('[name="chk_SubHawb"]:checked').each(function (i, elem) {
                $(elem).closest('tr').remove();
            });

            resetIndex('subHAWBBody');
        }

        function onSetSubHawbs() {

            var extraProperties = $('#HawbModel_ExtraProperties').val();

            if (extraProperties && extraProperties != 'null') {
                var subHawbs = JSON.parse(extraProperties).SubHawbs;

                if (subHawbs && subHawbs.length) {
                    var Index = 0;
                    subHawbs.forEach(function (subHawb) {
                        subHawb.index = Index;

                        var newRow = $('#subHawbTemplate').tmpl(subHawb);
                        $('#subHAWBBody').append(newRow);

                        Index += 1;
                    })
                }
            }
        }

        function resetIndex(tableName) {
            $('#' + tableName + '> tr').each(function (e, elem) {
                $(elem).find('td').each(function (a, aelem) {
                    var attrName = $(aelem).find('input').attr('name').replace(/[0-9]/, e);

                    $(aelem).find('input').attr('name', attrName);
                    if ($(aelem).hasClass('d-none')) {
                        var aelemVal = $(aelem).find('input').val();
                        $(aelem).find('input').val(aelemVal.replace(/[0-9]/, e));
                    }
                })
            })
        }

        function getConsolidatedArrivalNotice() {

            var url = new URL(window.location.href);
            var mawbId = url.searchParams.get('Id');

            if (mawbId == null) {
                var url = window.location.href;
                var mawbId = url.split('/')[url.split('/').length - 1];
            }

            dolphin.freight.importExport.airImports.airImportHawb.getHawbCardsByMawbId(mawbId)
                .done(function (res) {
                    var consignee = [];
                    var duplicates = new Set();
                    var seen = new Set();
                    for (let i = 0; i < res.length; i++) {
                        let id = res[i].consigneeId;
                        consignee.push(id);
                        if (seen.has(id)) {
                            duplicates.add(id);
                        }
                        seen.add(id);
                    }
                    var duplicateArray = Array.from(duplicates);
                    var duplicateString = duplicateArray.join(', ');

                    $.ajax({
                        url: abp.appPath + 'Docs/ConsolidatedArrivalNoticePartialView?mawbId=' + '@Model.MawbModel.Id' + '&conId=' + duplicateString,
                        type: 'GET',
                        dataType: "html",
                        success: function (res) {
                            $('.modal-content').html(res);
                            $('.modal').modal('show');
                        }
                    });

                });
        }

        document.addEventListener('DOMContentLoaded', function () {
            var url = new URL(window.location.href);
            var mawbId = url.searchParams.get('Id');

            if (mawbId == null) {
                var url = window.location.href;
                var mawbId = url.split('/')[url.split('/').length - 1];
            }

            dolphin.freight.importExport.airImports.airImportHawb.getHawbCardsByMawbId(mawbId)
                .done(function (res) {
                    var consignee = [];
                    for (let i = 0; i < res.length; i++) {
                        consignee.push(res[i].consigneeId);
                    }
                    checkForDuplicates(consignee);
                });
        });

        function checkForDuplicates(array) {
            let counts = {};

            for (let i = 0; i < array.length; i++) {
                if (counts[array[i]]) {
                    counts[array[i]] += 1;
                } else {
                    counts[array[i]] = 1;
                }
            }

            for (let prop in counts) {
                if (counts[prop] > 1) {
                    $(".dropdown-item").removeClass("disabled");
                }
            }
        }

        function getBatchPrintingPopup() {
            var url = new URL(window.location.href);
            var mawbId = url.searchParams.get('Id');

            if (mawbId == null) {
                var url = window.location.href;
                var mawbId = url.split('/')[url.split('/').length - 1];
            }

            dolphin.freight.importExport.airImports.airImportHawb.getHawbCardById($('#Id').val())
                .then(function (res) {                    
                    var hawbId = res.id;

                    $.ajax({
                        url: abp.appPath + 'Docs/BatchPrintingPartialView?hawbId=' + hawbId + '&mawbId=' + mawbId,
                        type: 'GET',
                        dataType: "html",
                        success: function (res) {
                            $('.modal-content').html(res);
                            $('.modal').modal('show');
                            $(document).on('show.bs.modal', '#batchPrintingModel', function () {
                                $('.modal-dialog').addClass('modal-lg');

                                $('#checkAll').on('click', function () {
                                    $('.childCheckbox').prop('checked', $(this).prop('checked'));
                                });

                                $('.childCheckbox').on('click', function () {
                                    if ($('.childCheckbox:not(:checked)').length === 0) {
                                        $('#checkAll').prop('checked', true);
                                    } else {
                                        $('#checkAll').prop('checked', false);
                                    }
                                });
                            })
                        }
                    });
                });
        }
           function setMawbLockUnlock(isLockedCheck) {
            var id = $('#MawbModel_Id').val();
            
            isLockedCheck = isLockedCheck === "True";
            if(isLockedCheck){
                
            abp.message.confirm(l('UnlockConfirmationMessage'))
                .then(function (confirmed) {
                    if (confirmed) {
                        dolphin.freight.importExport.airImports.airImportMawb
                            .lockedOrUnLockedAirImportMawb(id)
                            .then(function () {
                                   abp.message.success(l('SuccessfullyUnlocked'));
                                window.location.reload();
                            });
                    }
                });
            } else{
                abp.message.confirm(l('LockConfirmationMessage'))
                .then(function (confirmed) {
                    if (confirmed) {
                      dolphin.freight.importExport.airImports.airImportMawb
                            .lockedOrUnLockedAirImportMawb(id)
                            .then(function () {
                           
                                abp.message.success(l('SuccessfullyLocked'));
                                window.location.reload();
                            
                            });
                    }
                });
            }
        }
             function onCopyMawbClick(){
            var id = '@Model.MawbModel.Id';
                createMemoModal.open({
                    id,
                   
                });
          
        
        
        }
   
  
    </script>

    <script id="commodityTemplate" type="text/x-jQuery-tmpl">
        <tr>
          <td>
              <input type="checkbox" name="chk_commodity" id="chk_Commodity_${chkIndex}" />
          </td>
          <td><input type="text" name="HawbModel.Commodities[${chkIndex}].Description" value="${Description}" /></td>
          <td><input type="text" name="HawbModel.Commodities[${chkIndex}].HTSCode" value="${HTSCode}" /></td>
          <td><input type="text" name="HawbModel.Commodities[${chkIndex}].PONumber" value="${PoNumber}" disabled /></td>
        </tr>
    </script>

    <script id="subHawbTemplate" type="text/x-jQuery-tmpl">
        <tr>
          <td>
              <input type="checkbox" name="chk_SubHawb" id="chk_SubHawb_${index}" />
          </td>
          <td><input type="text" name="HawbModel.SubHawbs[${index}].SubHAWB" value="${SubHAWB}" /></td>
          <td><input type="text" name="HawbModel.SubHawbs[${index}].DescriptionITNo" value="${DescriptionITNo}" /></td>
          <td><input type="text" name="HawbModel.SubHawbs[${index}].PCS" value="${PCS}" /></td>
          <td><input type="text" name="HawbModel.SubHawbs[${index}].PKGUnit" value="${PKGUnit}" /></td>
          <td><input type="text" name="HawbModel.SubHawbs[${index}].Amount" value="${Amount}" /></td>
        </tr>
    </script>

}

<div class="page-header">
    <abp-breadcrumb>
        <abp-breadcrumb-item href="#" title=@L["Menu:Home"] />
        <abp-breadcrumb-item title=@L["Menu:AirImport"] />
        <abp-breadcrumb-item title=@L["Menu:AirImport.CreateMawb"] />
    </abp-breadcrumb>
    <nav class="submenu">
        <ol>
            <li class="menu-item active">
                <a href="javascript:void(0)">@L["Tab:Basic"]</a>
            </li>
            <li class="menu-item">
                <a href="/AirImports/EditModal3?Id=@Model.Id">@L["Tab:Accounting"]</a>
            </li>
            <li class="menu-item">
                <a href="/AirImports/DocCenter/@Model.Id">@L["Tab:Doc"]</a>
            </li>
        </ol>
    </nav>
</div>

<div class="page-content-area">
    <div class="board-wrap">

        <form submit-button="true" data-ajaxForm="true" id="editForm" data-check-form-on-close="true">
            <abp-row>
                <abp-column size-md="_9" id="parentCard">
                    <!-- MBL Card-->
                    <abp-card class="card board-item" id="mawbCard">
                        <!-- 標題區域 -->
                        <abp-card-header style="background:#555555;color:#FFFFFF;">
                            <abp-card-title>
                                @L["MAWBInformation"] @Model.MawbModel.MawbNo
                                <input asp-for="@Model.MawbModel.Id" hidden />
                            </abp-card-title>

                            <div id="myModal" class="modal" tabindex="-1" role="dialog">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                    </div>
                                </div>
                            </div>

                            <div class="btn-group dropdown">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="ActionDrop" data-bs-toggle="dropdown">
                                         @if(@Model.MawbModel.IsLocked)
                                        {
                                            <i class="fa fa-lock"></i>
                                        }
                                        else
                                        {
                                            <i class="fa fa-lock-open"></i>
                                        }
                                    @L["Display:Function"]
                                </button>
                                <div class="dropdown-menu " aria-labelledby="dropdownMenuButton1" id="ActionDrop">
                                   <a class='dropdown-item' href='javascript:void(0)' onclick="setMawbLockUnlock('@Model.MawbModel.IsLocked')">
                                        @if(@Model.MawbModel.IsLocked)
                                        {
                                            <i class="fa fa-lock-open"></i> @L["Btn:UnLock"]
                                        }
                                        else
                                        {
                                            <i class="fa fa-lock"></i> @L["Btn:Lock"]
                                        }
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="onCopyMawbClick()">
                                        <i class="fa fa-files-o"></i> @L["Btn:Copy"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="deleteMawbAirImport()">
                                        <i class="fa fa-trash"></i> @L["Btn:Delete"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="getBatchPrintingPopup()">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Batch Printing"]
                                    </a>
                                    <p class="dropdown-divider"></p>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("ManifestAirImport", "Docs", new { id = Model.MawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIMBL })')">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Manifest"]
                                    </a>
                                    <a class='dropdown-item disabled' href='javascript:void(0)' onclick="if(!$(this).hasClass('disabled')) { getConsolidatedArrivalNotice() }" title="This function is only available when two or more hawb have same consignee">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Consolidated Arrival Notice"]
                                    </a>
                                    <p class="dropdown-divider"></p>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("AirImportProfitReport", "Docs", new { id = Model.MawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIMBL, reportType = "Summary" })')">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Profit Report - Summary"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("AirImportProfitReport", "Docs", new { id = Model.MawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIMBL, reportType = "Detailed" })')">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Profit Report - Detailed"]
                                    </a>
                                    <p class="dropdown-divider"></p>
                                    <a class='dropdown-item' href='#'>
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Electronic Customs Declaration Status"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' style="color: #4B77BE; font-weight: 500;" onclick="OpenInTrackTrace()">
                                        <i class="fa fa-cube"></i> @L["Btn:Open in Track-Trace"]
                                    </a>
                                </div>
                            </div>

                            <button type="button" class="btn btn-collapse" data-bs-toggle="collapse" id="btnMawbCollapse" data-bs-target="#mawbDiv" aria-expanded="true" aria-controls="mawbDiv">
                            </button>
                        </abp-card-header>
                        <!-- Mawb資訊欄 -->
                        <abp-card-body class="Mawb collapse show customForm" id="mawbDiv">
                            <!--第1列-->
                            <abp-row>
                                <abp-input asp-for="MawbModel.Id" type="hidden" />
                                <abp-column size-md="_3">
                                    <abp-input asp-for="MawbModel.FilingNo" readonly="true" size="Small" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label asp-for="MawbModel.MawbNo" class="redStar form-label">@L["Display:Air:MawbNo"]</label>
                                    <input asp-for="MawbModel.MawbNo" class="form-control form-control-sm" size="Small" />
                                    <span asp-validation-for="MawbModel.MawbNo" class="text-danger"></span>
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label asp-for="MawbModel.OfficeId" class="redStar form-label">@L["Office"]</label>
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.OfficeId", AspItems = _dropdownService.SubstationLookupList, Selected = Model.MawbModel.OfficeId, IsShowLabel = true, FieldName = "", ShowFiledContentValue = Convert.ToString(Model.MawbModel.OfficeId) })
                                    <span asp-validation-for="MawbModel.OfficeId" class="text-danger"></span>
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-select asp-for="MawbModel.AwbType" class="form-control form-control-sm" size="Small" />
                                </abp-column>
                            </abp-row>
                            <!--第2列-->
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="MawbModel.PostDate" size="Small" readonly="true" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-select asp-for="MawbModel.OverseaAgentId" class="form-control form-control-sm pr-4" size="Small">
                                        <option value='' selected> @L["Display:Dropdownlist:Option:Select"] </option>
                                    </abp-select>
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.CarrierId", AspItems = Model.TradePartnerLookupList, Selected = Model.MawbModel.CarrierId, IsShowLabel = true, FieldName = @L["Carrier"] })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.AwbAcctCarrierId", AspItems = Model.TradePartnerLookupList, Selected = Model.MawbModel.AwbAcctCarrierId, IsShowLabel = true, FieldName = @L["AwbAcctCarrierId"] })
                                </abp-column>
                            </abp-row>
                            <!--第3列-->
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.CoLoaderId", AspItems = Model.TradePartnerLookupList, Selected = Model.MawbModel.CoLoaderId, IsShowLabel = true, FieldName = @L["CoLoaderId"] })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-select asp-for="MawbModel.OPId" class="form-control form-control-sm" size="Small" disabled="true">
                                        <option value='@CurrentUser.Id' selected> @(CurrentUser.Name + " " + CurrentUser.SurName) </option>
                                    </abp-select>
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.ShipperId", AspItems = Model.TradePartnerLookupList, Selected = Model.MawbModel.ShipperId, IsShowLabel = true, FieldName = @L["CoShipper"] })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.ConsigneeId", AspItems = Model.TradePartnerLookupList, Selected = Model.MawbModel.ConsigneeId, IsShowLabel = true, FieldName = @L["ConsigneeId"] })
                                </abp-column>
                            </abp-row>
                            <!--第4列-->
                            <abp-row>
                                <abp-column size-md="_3" class="expandCheck">
                                    <abp-input asp-for="MawbModel.IsDirectMaster" id="isDirectMaster" />
                                </abp-column>

                            </abp-row>
                            <!--第5列-->
                           
                            <!--第6列-->
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.DepatureId", AspItems = _dropdownService.PortsManagementLookupList, ShowFiledContentValue = Model.MawbModel.DepatureId, IsShowLabel = true, FieldName = "Depature" })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="MawbModel.DepatureDate" size="Small" id="AIMDepatureDate" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="MawbModel.FlightNo" size="Small" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <a class="btn btn-primary btn-sm" data-bs-toggle="collapse" href="#collapseRoute" role="button" aria-expanded="false" aria-controls="collapseRoute" style="margin-top:2em;">
                                        <i class="fa fa-plane" aria-hidden="true"></i>
                                        @L["AddConnectingFlight"]
                                    </a>
                                </abp-column>
                            </abp-row>
                            <!--第7列-->
                            <abp-row>
                                <abp-column size-md="_3" class="destination">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.DestinationId", AspItems = _dropdownService.PortsManagementLookupList, ShowFiledContentValue = Model.MawbModel.DestinationId, IsShowLabel = true, FieldName = "Destination" })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label asp-for="MawbModel.ArrivalDate" class="redStar form-label">@L["Display:Air:ArrivalDate"]</label>
                                    <input asp-for="MawbModel.ArrivalDate" class="form-control form-control-sm" />
                                    <span asp-validation-for="MawbModel.ArrivalDate" class="text-danger"></span>
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-select asp-for="MawbModel.FreightLocationId" class="form-control form-control-sm pr-4" size="Small">
                                        <option value='' selected> @L["Display:Dropdownlist:Option:Select"] </option>
                                    </abp-select>
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="MawbModel.StorageStartDate" size="Small" />
                                </abp-column>
                            </abp-row>
                            
                            <!--Route區塊-->
                             <abp-row>
                                <div class="collapse" id="collapseRoute">
                                    <div class="card card-body table-responsive">
                                        <h3>Route</h3>
                                        <abp-table class="nowrap" class="table table-bordered">
                                          <thead>
                                                <tr>
                                                    <th></th>
                                                    <th>Airport</th>
                                                    <th>Arrival Date/Time</th>
                                                    <th>Depature Date/Time</th>
                                                    <th>Flight No.</th>
                                                    <th>Carrier</th>
                                                </tr>
                                            </thead>

                                            <tbody>
                                           <tr>
                                                    <th>Trans1</th>
                                                    <td>
                                                          @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.RouteTrans1Id", AspItems = _dropdownService.AirportLookupList,Selected=Model.MawbModel.RouteTrans1Id, IsShowLabel = false, FieldName = "RouteTrans1Id", SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.MawbModel.RouteTrans1Id) })
                                                   
                                                    </td>
                                                    <td>
                                                        <input asp-for="MawbModel.RouteTrans1ArrivalDate" size="Small" />
                                                    </td>
                                                    <td>
                                                        <input asp-for="MawbModel.RouteTrans1DepatureDate" size="Small" />
                                                    </td>
                                                    <td>
                                                        <input asp-for="MawbModel.RouteTrans1FlightNo" size="Small" />
                                                    </td>
                                                    <td class="carrierTrans1">
                                                        @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.RouteTrans1CarrierId", AspItems = Model.TradePartnerLookupList, Selected = Model.MawbModel.RouteTrans1CarrierId })
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>Trans2</th>
                                                    <td>
                                                       @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.RouteTrans2Id", AspItems = _dropdownService.AirportLookupList,Selected=Model.MawbModel.RouteTrans2Id, IsShowLabel = false, FieldName = "RouteTrans2Id", SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.MawbModel.RouteTrans2Id) })
                                                   
                                                    </td>
                                                    <td>
                                                        <input asp-for="MawbModel.RouteTrans2ArrivalDate" size="Small" />
                                                    </td>
                                                    <td>
                                                        <input asp-for="MawbModel.RouteTrans2DepatureDate" size="Small" />
                                                    </td>
                                                    <td>
                                                        <input asp-for="MawbModel.RouteTrans2FlightNo" size="Small" />
                                                    </td>
                                                    <td>
                                                        @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.RouteTrans2CarrierId", AspItems = Model.TradePartnerLookupList, Selected = Model.MawbModel.RouteTrans2CarrierId })
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>Trans3</th>
                                                    <td>
                                                     @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.RouteTrans3Id", AspItems = _dropdownService.AirportLookupList,Selected=Model.MawbModel.RouteTrans3Id, IsShowLabel = false, FieldName = "RouteTrans3Id", SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.MawbModel.RouteTrans3Id) })
                                                   
                                                    </td>
                                                    <td>
                                                        <input asp-for="MawbModel.RouteTrans3ArrivalDate" size="Small" />
                                                    </td>
                                                    <td>
                                                        <input asp-for="MawbModel.RouteTrans3DepatureDate" size="Small" />
                                                    </td>
                                                    <td>
                                                        <input asp-for="MawbModel.RouteTrans3FlightNo" size="Small" />
                                                    </td>
                                                    <td>
                                                        @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.RouteTrans3CarrierId", AspItems = Model.TradePartnerLookupList, Selected = Model.MawbModel.RouteTrans3CarrierId })
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </abp-table>
                                    </div>
                                </div>
                            </abp-row>
                        @*    <abp-row class="mt-0">
                                <div class="collapse" id="collapseRoute">
                                    <div class="card card-body">
                                        <h3>Route</h3>
                                        <table class="table table-sm table-bordered table-responsive">
                                                                                       <tbody>
                                               
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </abp-row>*@
                            
                            <!--第八列 Package, Weight Settings Area-->
                            <hr />
                            <abp-row class="mt-0">
                                <div class="container">
                                    <div class="row">
                                        <div class="col">
                                            <table class="table table-sm table-borderless mb-0">
                                                <thead>
                                                    <tr>
                                                        <td>&nbsp;</td>
                                                        <td>&nbsp;</td>
                                                        <td>&nbsp;</td>
                                                        <td>&nbsp;</td>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr>
                                                        <td class="packageTable">@L["Package"]</td>
                                                        <td><input asp-for="MawbModel.Package" class="form-control form-control-sm" /></td>
                                                        <td colspan="3">
                                                            <select asp-for="MawbModel.MawbPackageUnitId" class="form-select form-control form-control-sm">
                                                                <option value='' selected> @L["Display:Dropdownlist:Option:Select"] </option>
                                                                @foreach (var packageUnit in Model.PackageUnitLookupList)
                                                                {
                                                                    <option value=@packageUnit.Value>@packageUnit.Text</option>
                                                                }
                                                            </select>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="packageTable">@L["VolumeWeight"]</td>
                                                        <td><input asp-for="MawbModel.VolumeWeightKg" class="form-control form-control-sm" /></td>
                                                        <td>@L["KG"]</td>
                                                        <td>
                                                            <input asp-for="MawbModel.VolumeWeightCbm" class="form-control form-control-sm" />
                                                        </td>
                                                        <td>CBM</td>
                                                    </tr>
                                                    <tr>
                                                        <td></td>
                                                        <td colspan="4"><abp-button size="Small" button-type="Primary" text="@L["SetDimensions"]" disabled="true" icon="pencil-square" /></td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="col">
                                            <table class="table table-sm table-borderless mb-0">
                                                <thead>
                                                    <tr>
                                                        <td></td>
                                                        <td>@L["KG"]</td>
                                                        <td>@L["LB"]</td>sa
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr>
                                                        <td class="packageTable">@L["GrossWeight"]</td>
                                                        <td><input asp-for="MawbModel.GrossWeightKg" class="form-control form-control-sm" id="GrossWeightKg" /></td>
                                                        <td><input asp-for="MawbModel.GrossWeightLb" class="form-control form-control-sm" id="GrossWeightLb" /></td>
                                                    </tr>
                                                    <tr>
                                                        <td class="packageTable">@L["ChargeableWeight"]</td>
                                                        <td><input asp-for="MawbModel.ChargeableWeightKg" class="form-control form-control-sm" id="ChargeableWeightKg" /></td>
                                                        <td><input asp-for="MawbModel.ChargeableWeightLb" class="form-control form-control-sm" id="ChargeableWeightLb" /></td>
                                                    </tr>
                                                    <tr>
                                                        <td></td>
                                                        <td colspan="3"><abp-button size="Small" button-type="Primary" text="@L["SumPackage&Weight"]" disabled="true" icon="pencil-square" /></td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </abp-row>
                            <!--第9列-->
                            <hr />
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.FreightType", AspItems = Html.GetEnumSelectList(typeof(FreightType)).ToList(), IsShowLabel = true, FieldName ="Freight", ShowFiledContentValue = Convert.ToString(Model.MawbModel.FreightType) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.IncotermsType", AspItems = Html.GetEnumSelectList(typeof(IncotermsType)).ToList(), IsShowLabel = true, FieldName = "Incoterms", ShowFiledContentValue = Convert.ToString(Model.MawbModel.IncotermsType) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.ServiceTermTypeFrom", AspItems = Html.GetEnumSelectList(typeof(ServiceTermType)).ToList(), IsShowLabel = true, FieldName = "ServiceTermFrom", ShowFiledContentValue = Convert.ToString(((int)Model.MawbModel.ServiceTermTypeFrom)) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.ServiceTermTypeTo", AspItems = Html.GetEnumSelectList(typeof(ServiceTermType)).ToList(), IsShowLabel = true, FieldName = "ServiceTermTo", ShowFiledContentValue = Convert.ToString(((int)Model.MawbModel.ServiceTermTypeTo)) })
                                </abp-column>
                            </abp-row>
                            <!--第10列 Awb取消Checkbox, IsEcom-->
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.BusinessReferredId", AspItems = _dropdownService.TradePartnerLookupList, IsShowLabel = true, FieldName = "BusinessReferredBy", ShowFiledContentValue = Convert.ToString(Model.MawbModel.BusinessReferredId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "MawbModel.DisplayUnit", AspItems = Html.GetEnumSelectList(typeof(DisplayUnitType)).ToList(), IsShowLabel = true, FieldName = "DisplayUnit", ShowFiledContentValue = Convert.ToString(((int)Model.MawbModel.DisplayUnit)) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="MawbModel.IsECom" />
                                </abp-column>
                                <abp-column size-md="_3">
                                </abp-column>
                            </abp-row>

                            <abp-row class="mt-4">
                                <abp-column>
                                    <abp-card-header style="background:#cccccc;color:#FFFFFF;">
                                        @L["Title:Memo"]
                                    </abp-card-header>
                                    <abp-card>
                                        <abp-card-body>
                                            <partial name="Memos/_Memo" model="new _MemoModel(Model.HawbModel.Id, Dolphin.Freight.Common.FreightPageType.AIHBL)" />
                                        </abp-card-body>
                                    </abp-card>
                                </abp-column>
                            </abp-row>
                        </abp-card-body>
                    </abp-card>

                    <!-- HBL Card-->
                    <div id="partialContainer">
                    </div>
                </abp-column>
                <abp-column size-md="_3">
                    <div class="card-wrap">
                        <button class="btn btn-block btn-add" type="button" id="addHBtn">
                            <i class="fa-solid fa-plus"></i>Add HAWB
                        </button>
                        <div id="hblCards" class="hbl_sm_area">
                        </div>
                    </div>
                </abp-column>
            </abp-row>

            <!-- 下方Save按鈕 -->
            <abp-row class="mt-3" id="ejo">
                <abp-column>
                    <div style="position: fixed; bottom: 55px; left: 0; right: 0; text-align:center;">
                        <abp-button class="btn btn-primary me-md-2" type="submit" id="saveBtn">@L["Create"]</abp-button>
                    </div>
                </abp-column>
            </abp-row>
            <abp-row>
                <abp-column>
                    &nbsp;
                </abp-column>
            </abp-row>

        </form>
    </div>
</div>

