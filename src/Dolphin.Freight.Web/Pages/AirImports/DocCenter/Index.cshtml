@page "{id:Guid}/{handler?}"
@using Dolphin.Freight.Accounting;
@using Dolphin.Freight.ImportExport.Attachments;
@using Dolphin.Freight.Localization
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<FreightResource> L
@model Dolphin.Freight.Web.Pages.AirImports.DocCenter.IndexModel
@{
}
@section styles {
    <style>
        .hideForm {
            display: none
        }

        .file-list {
            margin-top: 15px;
        }
    </style>
}
@section scripts
    {
    @*<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>*@
    <script src="https://cdn.jsdelivr.net/npm/jquery-templates@1.0.0/jquery.tmpl.min.js"></script>
    <abp-script src="/Pages/AirImports/DocCenter/DocCenter.js" />
    <script type="text/javascript">
        const l = abp.localization.getResource('Freight');
          var isLocked;
           $('#cardSettingArea').hide();
        $(function () {
            $(document).on('click', '.button-download', function () {
                const filename = $(this).data('filename');
                $('#form-download [name="filename"]').val(filename);
                $('#form-download').submit();
            });
            $(document).on('click', '.button-delete', function () {
                const filename = $(this).data('filename');
                $('#form-delete [name="filename"]').val(filename);
                const id = $(this).data('id');
                $('#form-delete [name="fileId"]').val(id);
                $('#form-delete').submit();
            });
            $(document).on('click', '#add-file', function () {
                $('#form-uploader [type="file"]').click();
            });
            $(document).on('change', '#form-uploader [type="file"]', function () {
                $('#form-uploader').submit();
            });
               isLocked = '@Model.AirImportMawbDto.IsLocked';
        });

        var cardIndex = 0;
          $("#addHBtn").click(function () {
                var url = "/AirImports/EditMawb?Id=@Model.Id&from=NewHawb";
                location.href = url;
            })
        //$('#addHBtn').on('click', function () {
        //    debugger;
        //    if ($('#mawbDiv')[0].classList.contains('show')) {
        //        $('#btnMawbCollapse').click();
        //    }

        //    if ($('#btnHawbCardCollapse_0').length) {
        //        showAlert(alertConfirmation2, 'Store');
        //    }
        //    else {

        //        let hawbcard = createHawbCard();

        //        let index = $('.hbl_sm_area').find('.card').length;
        //        hawbcard = setHawbCardValues(hawbcard, '00000000-0000-0000-0000-000000000000', '0', index);

        //        $('#hblCards').append(hawbcard);

        //        setTimeout(() => {
        //            $('.hblCardTitle')[index].click();
        //        }, 500);
        //    }
        //})

        $('#editForm').on('abp-ajax-success', function (result, rs) {
            console.log("enter here");
            event.preventDefault();
            abp.message.success('Successfully Saved').then(function () {
                location.href = "/AirImports/Index";
            });
            //location.href = '/AirImports/EditMawb/' + rs.responseText.id + '/show';
        });

        $('#hblMainCard').append('#mawbCard');

        function onHawbCardClick(e, hawbId) {
            var element = e.currentTarget || e.target || e.srcElement;
            var hblNo = element.id.split('_')[1];

            if ($('#btnHawbCardCollapse_0').length && hblNo != 0) {
                HAWBNO = hblNo;
                showAlert(alertConfirmation, 'Continue');
            }
            else {

                var color = getComputedStyle(element.parentElement.parentElement).backgroundColor;

                if (!$('#btnHawbCardCollapse_' + hblNo).attr('class').includes('collapsed')) {
                    $('.hblCardHawbNo').addClass('d-none');
                    $('#hblCard_' + hblNo).removeClass('d-none');
                }
                else {

                    var ajaxParams = undefined;

                    Swal.fire({
                        title: 'Loading...',
                        didOpen: () => {
                            Swal.showLoading()
                        }
                    })

                    abp.ajax($.extend(true, {
                        url: abp.appPath + 'api/ImportExport/AirImportDocCenterHawb?Id=' + hawbId,
                        type: 'GET',
                        dataType: "html",
                    }, ajaxParams)).done(function (partial) {
                        $('#partialContainer').html('');
                        $('#partialContainer').html(partial);
                        $('#hblCard').find('.card-header').attr('style', 'background:' + color + ';color:white')
                        Swal.clickCancel();
                         if (isLocked == 'True') abp.message.warn(l("Message:LockMessage"));
                    })

                    $('.btnHawbCardCollapse').each(function (i, e) {
                        let tempHawbNo = e.id.split('_')[1];
                        if (tempHawbNo == hblNo) {
                            $('#btnHawbCardCollapse_' + hblNo).click();
                        }
                        else {
                            $('#btnHawbCardCollapse_' + tempHawbNo).addClass('collapsed');
                            $('#btnHawbCardCollapse_' + tempHawbNo).attr('aria-expanded', 'false');
                            $('#hawbCard_' + i).removeClass('show');
                        }
                    })

                    //let isExpanded = $('.btnHawbCardCollapse').filter(function(f, e){ return $(e).attr('aria-expanded') == 'true' }).length;

                    //if (isExpanded) {
                    //    $('.btnHawbCardCollapse').click();
                    //}
                    //else{
                    //    $('#btnHawbCardCollapse_'+hawbNo).click();
                    //}
                }
            }
        }

      

        function showAlert(funName, buttonName) {
            Swal.fire({
                icon: 'error',
                text: 'The data has not been saved, are you sure you want to ' + buttonName.toLowerCase() + '?',
                showCancelButton: true,
                confirmButtonText: buttonName,
            }).then(funName)
        }

        function alertConfirmation(result) {
            if (result.isConfirmed) {
                let indx = $('.hbl_sm_area').find('.card').length;
                $('#btnHawbCardCollapse_0').parent().parent().remove();
                if (HAWBNO) {
                    $('#title_' + HAWBNO).click()
                }
                else {
                    $('#hawbCard_' + (indx - 2)).parent().find('.card-title').click();
                }
            }
        }

        function alertConfirmation2() {
            $('#saveBtn').click();
        }

        function onHawbFileClick() {
            $('#form-hawb-uploader [type = "file"]').click();
        }

        function OpenInTrackTrace() {
            var url = window.location.href;
            var urlPath = url.split('/');
            var mawbId = urlPath[urlPath.length - 1];
            dolphin.freight.importExport.airImports.airImportMawb.get(mawbId).done(function (res) {
                myWindow = window.open('https://www.track-trace.com/aircargo#' + res.mawbNo, '_blank', 'width=1200,height=1000');
                myWindow.focus();
            });
        }

        function getConsolidatedArrivalNotice() {

            var url = new URL(window.location.href);
            var mawbId = url.searchParams.get('Id');

            if (mawbId == null) {
                var url = window.location.href;
                var mawbId = url.split('/')[url.split('/').length - 1];
            }

            dolphin.freight.importExport.airImports.airImportHawb.getHawbCardsByMawbId(mawbId)
                .done(function (res) {
                    var consignee = [];
                    var duplicates = new Set();
                    var seen = new Set();
                    for (let i = 0; i < res.length; i++) {
                        let id = res[i].consigneeId;
                        consignee.push(id);
                        if (seen.has(id)) {
                            duplicates.add(id);
                        }
                        seen.add(id);
                    }
                    var duplicateArray = Array.from(duplicates);
                    var duplicateString = duplicateArray.join(', ');

                    $.ajax({
                        url: abp.appPath + 'Docs/ConsolidatedArrivalNoticePartialView?mawbId=' + '@Model.AirImportMawbDto.Id' + '&conId=' + duplicateString,
                        type: 'GET',
                        dataType: "html",
                        success: function (res) {
                            $('.modal-content').html(res);
                            $('.modal').modal('show');
                        }
                    });

                });
        }

        document.addEventListener('DOMContentLoaded', function () {
            var url = new URL(window.location.href);
            var mawbId = url.searchParams.get('Id');

            if (mawbId == null) {
                var url = window.location.href;
                var mawbId = url.split('/')[url.split('/').length - 1];
            }

            dolphin.freight.importExport.airImports.airImportHawb.getHawbCardsByMawbId(mawbId)
                .done(function (res) {
                    var consignee = [];
                    for (let i = 0; i < res.length; i++) {
                        consignee.push(res[i].consigneeId);
                    }
                    checkForDuplicates(consignee);
                });
        });

        function checkForDuplicates(array) {
            let counts = {};

            for (let i = 0; i < array.length; i++) {
                if (counts[array[i]]) {
                    counts[array[i]] += 1;
                } else {
                    counts[array[i]] = 1;
                }
            }

            for (let prop in counts) {
                if (counts[prop] > 1) {
                    $(".dropdown-item").removeClass("disabled");
                }
            }
        }

        function getBatchPrintingPopup() {
            debugger;
            var url = new URL(window.location.href);
            var mawbId = url.searchParams.get('Id');

            if (mawbId == null) {
                var url = window.location.href;
                var mawbId = url.split('/')[url.split('/').length - 1];
            }

            dolphin.freight.importExport.airImports.airImportHawb.getHawbCardById($('#AirImportHawbDto_Id').val())
                .then(function (res) {
                    var hawbId = res.id;

                    $.ajax({
                        url: abp.appPath + 'Docs/BatchPrintingPartialView?hawbId=' + hawbId + '&mawbId=' + mawbId,
                        type: 'GET',
                        dataType: "html",
                        success: function (res) {
                            $('.modal-content').html(res);
                            $('.modal').modal('show');
                            $(document).on('show.bs.modal', '#batchPrintingModel', function () {
                                $('.modal-dialog').addClass('modal-lg');

                                $('#checkAll').on('click', function () {
                                    $('.childCheckbox').prop('checked', $(this).prop('checked'));
                                });

                                $('.childCheckbox').on('click', function () {
                                    if ($('.childCheckbox:not(:checked)').length === 0) {
                                        $('#checkAll').prop('checked', true);
                                    } else {
                                        $('#checkAll').prop('checked', false);
                                    }
                                });
                            })
                        }
                    });
                });
        }
          function setMawbLockUnlock(isLockedCheck) {
            var id ='@Model.AirImportMawbDto.Id';
          
            isLockedCheck = isLockedCheck === "True";
            if(isLockedCheck){
                
            abp.message.confirm(l('UnlockConfirmationMessage'))
                .then(function (confirmed) {
                    if (confirmed) {
                        dolphin.freight.importExport.airImports.airImportMawb
                            .lockedOrUnLockedAirImportMawb(id)
                            .then(function () {
                                   abp.message.success(l('SuccessfullyUnlocked'));
                                window.location.reload();
                            });
                    }
                });
            } else{
                abp.message.confirm(l('LockConfirmationMessage'))
                .then(function (confirmed) {
                    if (confirmed) {
                      dolphin.freight.importExport.airImports.airImportMawb
                            .lockedOrUnLockedAirImportMawb(id)
                            .then(function () {
                           
                                abp.message.success(l('SuccessfullyLocked'));
                                window.location.reload();
                          
                            });
                    }
                });
            }
        }
         function createHawbCard() {
             $('#cardSettingArea').show();
            var check='False';
           
            debugger;
            if ($('#cardCheck').prop('checked')) {
                check = 'True';
            
            }
           let abpCard = '<div class="{{divClass}}"><div class="card-header pointer"><h6 class="card-title hblCardTitle" id="title_{{hblNo}}"' +
    ' onclick="onHawbCardClick(event,{{hblCardId}})">';

  // Check the condition and add the <i> tag if check is true
            if (check=="False") {
                abpCard += '<i class="fa fa-info-circle" data-toggle="tooltip" data-placement="top" data-html="true" title="{{hblCosigneeName}} {{hblShipperName}}"></i>';
                abpCard += '{{hblNo}}</h6>' +
                    ' <button type="button" class="btn d-none btn-collapse collapsed btnHawbCardCollapse" data-val="{{index}}" data-bs-toggle="collapse" id="btnHawbCardCollapse_{{hblNo}}" data-bs-target="#{{cardBodyId}}" aria-expanded="false" aria-controls="mawbDiv">' +
                    ' <i class="fa fa-caret-down" style="color:#FFFFFF;"></i></button > </div><div class="card-body collapse" id="{{cardBodyId}}" style="min-height:150px !important"></div>';

            }
            else {
                // Add the rest of the card content
                abpCard += '{{hblNo}}<br>{{hblCosigneeName}}<br>{{hblShipperName}}</h6>' +
                
                    ' <button type="button" class="btn d-none btn-collapse collapsed btnHawbCardCollapse" data-val="{{index}}" data-bs-toggle="collapse" id="btnHawbCardCollapse_{{hblNo}}" data-bs-target="#{{cardBodyId}}" aria-expanded="false" aria-controls="mawbDiv">' +
                    ' <i class="fa fa-caret-down" style="color:#FFFFFF;"></i></button > </div><div class="card-body collapse" id="{{cardBodyId}}" style="min-height:150px !important"></div>';
            }
            abpCard += '<div class="card-footer"><div class="row"><div class="col-6 hblCardTitle" style="border-bottom: solid;border-top: solid;border-right: solid;border-width: thin;">PKG: {{hblPackage}}</div><div class="col-6 hblCardTitle" style="border-bottom: solid;border-top: solid;border-width: thin;">Weight: {{hblWeight}}</div><div class="col-12 hblCardTitle">Measurement: {{hblMeasurement}}</div></div></div>';
  return abpCard;
        }

        function setHawbCardValues(abpcard, cardId, hblNo, index,hblCosigneeName,hblShipperName,weight,measurement,packagetype) {
            debugger
            let apbCardClass = 'card board-item hbl-sm-' + index;
            let cardBodyId = 'hawbCard_' + index;
            cardId = "'" + cardId + "'";

            abpcard = abpcard.replaceAll("{{divClass}}", apbCardClass);
            abpcard = abpcard.replaceAll("{{hblNo}}", hblNo);
            abpcard = abpcard.replaceAll("{{hblCardId}}", cardId);
            abpcard = abpcard.replaceAll("{{index}}", index);
            abpcard = abpcard.replaceAll("{{cardBodyId}}", cardBodyId);
            abpcard = abpcard.replaceAll("{{hblPackage}}", packagetype);
            abpcard = abpcard.replaceAll("{{hblWeight}}", weight);
            abpcard = abpcard.replaceAll("{{hblMeasurement}}", measurement);
             if (hblCosigneeName !== null) {
    abpcard = abpcard.replaceAll("{{hblCosigneeName}}", hblCosigneeName);
  } else {
    abpcard = abpcard.replaceAll("{{hblCosigneeName}}", "");
  }

  if (hblShipperName !== null) {
    abpcard = abpcard.replaceAll("{{hblShipperName}}", hblShipperName);
  } else {
    abpcard = abpcard.replaceAll("{{hblShipperName}}", "");
  }

            return abpcard;
        }
          function cardSettingClick() {
           
            $("#checkModal").modal("show");  
        }
        const toggleLink = document.getElementById("toggleLink");

        // Set an initial state
        let isAsc = true;
        let selectedValue = 1;
        
        // Add a click event listener to the anchor
        toggleLink.addEventListener("click", function (e) {
            e.preventDefault(); // Prevent the default link behavior

            // Toggle between "Asc" and "Desc"
            if (isAsc) {
                toggleLink.innerHTML = '<i class="fa fa-sort-down"></i> Desc';
            } else {
                toggleLink.innerHTML = '<i class="fa fa-sort-up"></i> Asc';
            }

            // Invert the state
            isAsc = !isAsc;
            SortHblCard();
        });
        function changeSetting() { 
        $("#checkModal").modal("hide");
           
            if ($('#cardCheck').prop('checked')) {
                dolphin.freight.importExport.airImports.airImportMawb.setCardSetting(true).done(function (response) {
                    SortHblCard();
                });

            }
            else {
                dolphin.freight.importExport.airImports.airImportMawb.setCardSetting(false).done(function (response) {
                    SortHblCard();
                })
            }
        
        }
        function SortHblCard(){
        selectedValue = $('#sortType').val();

           var urlPath = window.location.href;
    var id = urlPath.substring(urlPath.lastIndexOf("/") + 1, urlPath.length);
            var selectedHblNo;

           dolphin.freight.importExport.airImports.airImportHawb.getDocCenterCardsById(id, isAsc,selectedValue)
                .done(function (hblCards) {
                    if (hblCards && hblCards.length) {
                        $('#hblCards').empty();
                        hblCards.forEach(function (hblCard, index) {

                            let abpcard = createHawbCard();
                            
                            abpcard = setHawbCardValues(abpcard, hblCard.id, hblCard.hawbNo, index,hblCard.consigneeName,hblCard.shipperName,hblCard.grossWeightKG, hblCard.volumeWeightCBM, hblCard.package);

                            $('#hblCards').append(abpcard);

                          

                        })
                        setTimeout(() => {
                            if (selectedHblNo) {
                                $('#title_' + selectedHblNo).click();
                            }
                            else { $('.hblCardTitle')[0].click(); }

                        }, 500);
                    }
                })
        
        
        
        
        
        
        
        
        }
    </script>
}

<div class="page-header">
    <div class="breadcrumb-wrapper">
        <abp-breadcrumb>
            <abp-breadcrumb-item title=@L["Menu:Home"] />
            <abp-breadcrumb-item title=@L["Menu:AirImport"] />
            <abp-breadcrumb-item title=@L["Tab:Doc"] href="#" />
        </abp-breadcrumb>
    </div>
    <nav class="submenu">
        <ol>
            <li class="menu-item ">
                <a href="/AirImports/EditMawb?Id=@Model.Id">@L["Tab:Basic"]</a>
            </li>
            <li class="menu-item ">
                <a href="/AirImports/EditModal3?Id=@Model.Id">@L["Tab:Accounting"]</a>
            </li>
            <li class="menu-item active">
                <a href="javascript:void(0)">@L["Tab:Doc"]</a>
            </li>
        </ol>
    </nav>
</div>
<div class="page-content-area">
    <div class="board-wrap">
   <abp-row>
                <abp-column size-md="_9" id="parentCard">
                    <abp-card class="card board-item" id="mawbCard">
                        <abp-card-header style="background:#555555;color:#FFFFFF;">
                            <abp-card-title>
                                MAWB
                                <span id="title0">@Model.AirImportMawbDto.MawbNo </span>
                            </abp-card-title>

                            <div id="myModal" class="modal" tabindex="-1" role="dialog">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                    </div>
                                </div>
                            </div>

                            <div class="btn-group dropdown">
                              
                                     <button class="btn btn-secondary dropdown-toggle" type="button" id="ActionDrop" data-bs-toggle="dropdown">
                                         @if(@Model.AirImportMawbDto.IsLocked)
                                        {
                                            <i class="fa fa-lock"></i>
                                        }
                                        else
                                        {
                                            <i class="fa fa-lock-open"></i>
                                        }
                                    @L["Display:Function"]
                                </button>

                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                                     <a class='dropdown-item' href='javascript:void(0)' onclick="setMawbLockUnlock('@Model.AirImportMawbDto.IsLocked')">
                                        @if(@Model.AirImportMawbDto.IsLocked)
                                        {
                                            <i class="fa fa-lock-open"></i> @L["Btn:UnLock"]
                                        }
                                        else
                                        {
                                            <i class="fa fa-lock"></i> @L["Btn:Lock"]
                                        }
                                <a class='dropdown-item' href='javascript:void(0)' onclick="getBatchPrintingPopup()">
                                    <i class="fa fa-file-text-o"></i> @L["Btn:Batch Printing"]
                                </a>
                            <li class="dropdown-divider"></li>
                            <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("ManifestAirImport", "Docs", new { id = Model.AirImportMawbDto.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIMBL })')">
                                <i class="fa fa-file-text-o"></i> @L["Btn:Manifest"]
                            </a>
                        <a class='dropdown-item disabled' href='javascript:void(0)' onclick="if(!$(this).hasClass('disabled')) { getConsolidatedArrivalNotice() }" title="This function is only available when two or more hawb have same consignee">
                            <i class="fa fa-file-text-o"></i> @L["Btn:Consolidated Arrival Notice"]
                        </a>
                            <li class="dropdown-divider"></li>
                        <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("AirImportProfitReport", "Docs", new { id = Model.AirImportMawbDto.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIMBL, reportType = "Summary" })')">
                                <i class="fa fa-file-text-o"></i> @L["Btn:Profit Report - Summary"]
                            </a>
                        <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("AirImportProfitReport", "Docs", new { id = Model.AirImportMawbDto.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIMBL, reportType = "Detailed" })')">
                                <i class="fa fa-file-text-o"></i> @L["Btn:Profit Report - Detailed"]
                            </a>
                            <li class="dropdown-divider"></li>
                            <a class='dropdown-item' href='#'>
                                <i class="fa fa-file-text-o"></i> @L["Btn:Electronic Customs Declaration Status"]
                            </a>
                            <a class='dropdown-item' href='javascript:void(0)' style="color: #4B77BE; font-weight: 500;" onclick="OpenInTrackTrace()">
                                <i class="fa fa-location-arrow"></i> @L["Btn:Open in Track-Trace"]
                            </a>



    </div>
</div>



<button type="button" class="btn btn-collapse" data-bs-toggle="collapse" data-bs-target="#mawbcard" aria-expanded="false" aria-controls="mawbcard">
</button>
                    </abp-card-header>
<abp-card-body class="collapse show" id="mawbcard">
    <abp-row>
        <abp-column>
            <abp-button id="add-file"
                        text=@L["Display:Button:New"]
                        icon="plus"
                        button-type="Outline_Secondary" />
        </abp-column>
    </abp-row>
    <abp-row class="default-freight-block">
        <abp-column>
            <table class="table file-list">
                <thead class="thead-dark">
                    <tr>
                        <th scope="Column">@L["Actions"]</th>
                        <th scope="Column">@L["Display:TradePartner:Document:THead:AttachmentName"]</th>
                        <th scope="Column">@L["Display:TradePartner:Document:THead:AttachmentUploadDate"]</th>
                        <th scope="Column">@L["Display:TradePartner:Document:THead:AttachmentSize"]</th>
                    </tr>
                </thead>
                <tbody>
                                            @foreach (AttachmentDto dto in Model.FileList)
                                            {
                        <tr>
                            <th scope="Row">
                                <div class="btn-group dropdown">
                                    <button class="btn btn-secondary dropdown-toggle" type="button" id="ActionDrop_0" data-bs-toggle="dropdown">
                                                                @L["Actions"]
                                    </button>
                                    <div class="dropdown-menu" id="ActionDrop_div_0">
                                        <a class="dropdown-item button-download" href="javascript:void(0)" data-filename="@dto.FileName">
                                            <i class="fa fa-file"></i>下載
                                        </a>
                                        <a class="dropdown-item button-delete" href="javascript:void(0)" data-id="@dto.Id" data-filename="@dto.FileName">
                                            <i class="fa fa-trash"></i> 刪除
                                        </a>
                                    </div>
                                </div>
                            </th>
                            <td>@dto.FileName</td>
                            <td>@dto.CreationTime</td>
                            <td>@Model.GetFileSize(dto.FileName)</td>
                        </tr>
                                            }
                </tbody>
            </table>
        </abp-column>
    </abp-row>
</abp-card-body>
                </abp-card>

                <div id="partialContainer">
                </div>
            </abp-column>
            <abp-column size-md="_3">
                <div class="card-wrap">

                    <button class="btn btn-block btn-add" type="button" id="addHBtn">
                        <i class="fa-solid fa-plus"></i>Add HAWB
                    </button>

                    <div id="cardSettingArea">     
                            <div class="d-flex flex-row">
                        <div class="p-2"><label>Sort By</label>
                        <select id="sortType">
                            <option selected value="1">HB/L No</option>
                             <option value="2">Created Date</option>
                        </select>    
                        </div>
                        <div class="p-2">
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </div>
                        <div class="p-2">
                            <a href="#" id="toggleLink"><i class="fa fa-sort-up"></i> Asc</a>
                        </div>
                            </div>
                            <div class="d-flex flex-row">
                        <div class="p-2" ><a href='javascript:void(0)' class="text-muted" onclick="cardSettingClick()"><i class="fa fa-cogs"></i> Card Setting</a>
                            </div>
                            </div>
                            </div>
                        <div id="hblCards" class="hbl_sm_area">
                        </div>
                </div>
            </abp-column>
        </abp-row>
        <div id="checkModal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Card Setting</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeModal()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
        <div class="pull-left w-80per _pd-sm">
            <div class="_text-blue-steel _font-15 bold _mg-bottom-10">Collapsed Card View</div>
            <div class="_font-13 _mg-bottom-xs">Show Shipper and Consignee</div>
            <div class="_font-11 text-muted">Show Shipper and Consignee name without hovering on the <i class="fa fa-info-circle _font-11"></i> icon when the cards are collapsed</div>
        </div>
        <div class="pull-left w-20per _mg-top-50">
    <abp-input asp-for="@Model.ISToolTipShow" id="cardCheck" suppress-label />
        </div><!---->
    </div>
                    
                    
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="changeSetting()">@L["Btn:Ok"]</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeModal()">@L["Btn:Cancel"]</button>
                </div>
            </div>
        </div>
    </div>
    </div>
</div>

<form method="get" asp-page-handler="download" class="hideForm" id="form-download" target="_blank">
    <input type="text" name="id" value="@Model.Id" />
    <input type="text" name="filename" />
    <button>Send</button>
</form>
<form method="post" asp-page-handler="delete" class="hideForm" id="form-delete">
    <input type="text" name="id" value="@Model.Id" />
    <input type="text" name="fileId" value="" />
    <input type="text" name="filename" />
    <button>Send</button>
</form>
<form method="post" asp-page-handler="uploader" class="hideForm" enctype="multipart/form-data" id="form-uploader">
    <input type="text" name="id" value="@Model.Id" />
    <input type="file" name="formFile" />
    <button>Send</button>
</form>