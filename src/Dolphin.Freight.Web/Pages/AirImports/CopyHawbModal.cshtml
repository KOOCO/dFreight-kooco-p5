@page
@using Dolphin.Freight.Localization
@using Dolphin.Freight.Web.CommonService;
@using Dolphin.Freight.Web.Pages.Components;
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal
@model Dolphin.Freight.Web.Pages.AirImports.CopyHawbModal
@inject IDropdownService _dropdown;
@inject IStringLocalizer<FreightResource> L
@{
    Layout = null;
}
<script>
    var MawbId = "";
   
    $(document).ready(function () {
        // Get references to the checkboxes
        var accountingCheckbox = $('#accountingCheckbox');
        var apCheckbox = $('#apCheckbox');
        var arCheckbox = $('#arCheckbox');
        var dcCheckbox = $('#dcCheckbox');

        // Disable "A/P", "A/R", and "D/C" checkboxes initially
        apCheckbox.prop('disabled', false);
        arCheckbox.prop('disabled', false);
        dcCheckbox.prop('disabled', false);

        // Function to update the state of the "Accounting Information" checkbox
        function updateAccountingCheckboxState() {
            var apChecked = apCheckbox.is(':checked');
            var arChecked = arCheckbox.is(':checked');
            var dcChecked = dcCheckbox.is(':checked');

            // Update the state of "Accounting Information" checkbox based on the state of "A/P", "A/R", and "D/C" checkboxes
            accountingCheckbox.prop('checked', apChecked || arChecked || dcChecked);

            // Enable or disable "A/P", "A/R", and "D/C" checkboxes based on the state of "Accounting Information" checkbox
            apCheckbox.prop('disabled', !accountingCheckbox.is(':checked'));
            arCheckbox.prop('disabled', !accountingCheckbox.is(':checked'));
            dcCheckbox.prop('disabled', !accountingCheckbox.is(':checked'));
        }

        // When the "Accounting Information" checkbox is changed
        accountingCheckbox.change(function () {
            var isChecked = accountingCheckbox.is(':checked');

            // Update the state of "A/P", "A/R", and "D/C" checkboxes based on the "Accounting Information" checkbox
            apCheckbox.prop('checked', isChecked);
            arCheckbox.prop('checked', isChecked);
            dcCheckbox.prop('checked', isChecked);

            // Enable or disable "A/P", "A/R", and "D/C" checkboxes based on the "Accounting Information" checkbox
            apCheckbox.prop('disabled', !isChecked);
            arCheckbox.prop('disabled', !isChecked);
            dcCheckbox.prop('disabled', !isChecked);
        });

        // When any of "A/P", "A/R", or "D/C" checkboxes are changed
        apCheckbox.change(function () {
            updateAccountingCheckboxState();
        });
        arCheckbox.change(function () {
            updateAccountingCheckboxState();
        });
        dcCheckbox.change(function () {
            updateAccountingCheckboxState();
        });
    });
    // $("#copyForm").submit(function (event) {
    //     // event.preventDefault(); // Prevent default form submission
    //     var id = $('#Id').val();
    //     var isFlightInfo = $('#IsCopyFlightInfo').val();
    //     var copyHawb = $('#CopyHawb').val();
    //     var isCopyCommodity = $('#CopyCommodity').val();
    //     var isAccountingInformation = $('#accountingCheckbox').val();
    //     var apCheckbox = $('#apCheckbox').val();
    //     var arCheckbox = $('#arCheckbox').val();
    //     var dcCheckbox = $('#dcCheckbox').val();
    //     // Serialize form values as a query string
    //     var formData = $(this).serialize();
    //     debugger;
        
    //     // You can now use the formData for your custom actions or AJAX request
    // });
    $('#copyForm').on('abp-ajax-success', function (result, rs) {


        var url = new URL(window.location.href);
        // Show the div with id "message"
        location.href = url + '&ResultedMawbId=' + rs.responseText.MawbId + '&copyHawbMessage=True';
    
    });
  

</script>
<form abp-model="CopyModel" id="copyForm" method="post" action="@Url.Page("/AirImports/CopyHawbModal")">
    <abp-modal size="Large">
 
        @if (Model.isOceanExportHbl)
        {
            <abp-modal-header title="Copy HBL"></abp-modal-header>
        } else
        {
            <abp-modal-header title="@L["CopyHawb"]"></abp-modal-header>
        }
      
        <abp-modal-body>
         
            <abp-input type="hidden" asp-for="@Model.Id" />
            <abp-input type="hidden" asp-for="@Model.isOceanExportHbl" />
            <abp-column size="_12">
                <p>Please select which MB/L you want to copy HB/L to?</p>
            </abp-column>
            
            <abp-column size="_12">
                @if (Model.isOceanExportHbl)
                {
                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "CopyModel.MawbId", AspItems = _dropdown.OceanExportMblLookupList,Selected=Model.CopyModel.MawbId.ToString(),IsRequired=true, IsShowLabel = false, FieldName = "", SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.CopyModel.MawbId) })
                } else
                {
                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "CopyModel.MawbId", AspItems = _dropdown.AirImportMawbLookupList,Selected=Model.CopyModel.MawbId.ToString(),IsRequired=true, IsShowLabel = false, FieldName = "", SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.CopyModel.MawbId) })
                }

            </abp-column>
   @*          <abp-column size="_12">
                
            <p>Please select how would you like to copy HAWB under this MAWB?</p>
        </abp-column>
        <abp-column size="_12">

                <abp-radio  asp-for="@Model.CopyModel.CopyHawb" asp-items="@Model.HblOptions" inline="true" />
          
            
                
           
           

            
                    
           </abp-column>
                 <abp-column size="_12">
                <input type="checkbox" suppress-label asp-for="@Model.CopyModel.CopyCommodity" />
            <label class="form-label">@L["Display:Copycommodity"]</label>
           </abp-column>
            *@
                <abp-column size="_12">
                <input type="checkbox" suppress-label asp-for="@Model.CopyModel.CopyAccountingInformation" id="accountingCheckbox" />
            <label class="form-label">@L["Display:CopyAccountingInformation"]</label>
           </abp-column>
           
                <abp-column size="_12">
                <input type="checkbox" suppress-label asp-for="@Model.CopyModel.AP" id="apCheckbox" />
            <label class="form-label">@L["Display:A/P"]</label>


                <input type="checkbox" suppress-label asp-for="@Model.CopyModel.AR" id="arCheckbox" />
            <label class="form-label">@L["Display:A/R"]</label>


                <input type="checkbox" suppress-label asp-for="@Model.CopyModel.DC" id="dcCheckbox" />
            <label class="form-label">@L["Display:D/C"]</label>
            </abp-column>
         
      
        </abp-modal-body>
        <abp-modal-footer buttons="@(AbpModalButtons.Cancel|AbpModalButtons.Save)"></abp-modal-footer>
    </abp-modal>
</form>