@using Dolphin.Freight.AirExports;
@using Dolphin.Freight.AirImports;
@using Dolphin.Freight.Web.Pages.Components;
@using Dolphin.Freight.Web.Pages.Shared.Memos;
@using Microsoft.AspNetCore.Mvc.Localization;
@using Microsoft.Extensions.Localization;
@using Dolphin.Freight.Localization
@using Volo.Abp.Users
@using Dolphin.Freight.Web.CommonService;
@inject ICurrentUser _currentUser
@inject IDropdownService _dropdown

@inject IStringLocalizer<FreightResource> L

@model Dolphin.Freight.Web.ViewModels.ImportExport.HawbHblViewModel

<script>

      $(document).ready(function () {
        if ($('#HawbCancelledDate').val() == '0001-01-01T00:00') {
            $('#HawbCancelledDate').val('');
        }
           if ($('#HawbModel_FrtRelease').val() == '0001-01-01T00:00') {
            $('#HawbModel_FrtRelease').val('');
        }
    });
  
    function OpenInTrackTrace() {
        var url = new URL(window.location.href);
        var mawbId = url.searchParams.get('Id');
        dolphin.freight.importExport.airImports.airImportMawb.get(mawbId).done(function (res) {
            myWindow = window.open('https://www.track-trace.com/bol#' + res.mawbNo, '_blank', 'width=1200,height=1000');
            myWindow.focus();
        });
    }
    const createHawbCopyModal = new abp.ModalManager({
                viewUrl: '/AirImports/CopyHawbModal',
            });
    function gotoReport(rindex) {
        var url = "";
        var pname = "";
        switch (rindex) {
            default:
                url = '@Url.Action("Car", "Docs")';
                pname = "Car";
                break;
            case 2:
                url = '@Url.Action("Cargo", "Docs")';
                pname = "Cargo";
                break;
            case 3:
                url = '@Url.Action("Box", "Docs")';
                pname = "Box";
                break;
            case 4:
                url = '@Url.Action("HawbProfitReport", "Docs", new { hawbId = Model.HawbModel.Id })';
                pname = "ProfitSummary";
                break;
            case 5:
                url = '@Url.Action("ProfitDetail", "Docs", new { oceanExportMblId = Model.Id })';
                pname = "ProfitDetail";
                break;
            case 6:
                var idNo = $('#OceanExportHbl_Id').val();
                url = '@Url.Action("Shipment", "Docs")' + "?id=" + idNo;
                pname = "Shipment";
                break;
            case 7:
                var idNo = $('#OceanExportHbl_Id').val();
                url = '@Url.Action("OBL", "Docs")' + "?id=" + idNo;
                pname = "OBL";
                break;
        }
        myWindow = window.open(url, pname, 'width=1200,height=800')
        myWindow.focus()
    }
      function setHawbLockUnlock(isLockedCheck) {
            var id = '@Model.HawbModel.Id';
            isLockedCheck = isLockedCheck === "True";
            if(isLockedCheck){
                
            abp.message.confirm(l('UnlockConfirmationMessage'))
                .then(function (confirmed) {
                    if (confirmed) {
                        dolphin.freight.importExport.airImports.airImportHawb
                            .lockedOrUnLockedAirImportHawb(id)
                            .then(function () {
                                abp.message.success(l('SuccessfullyUnlocked'));
                                window.location.reload();
                            });
                    }
                });
            } else{
                abp.message.confirm(l('LockConfirmationMessage'))
                .then(function (confirmed) {
                    if (confirmed) {
                      dolphin.freight.importExport.airImports.airImportHawb
                            .lockedOrUnLockedAirImportHawb(id)
                            .then(function () {
                                abp.message.success(l('SuccessfullyLocked'));
                                window.location.reload();
                            });
                    }
                });
            }
        }
            function onCopyToHawbClick(){
            var id = '@Model.HawbModel.Id';
                createHawbCopyModal.open({
                    id,
                   
                });
          
        
        
        }
</script>
<!-- HABL Card -->
<abp-card class="card board-item" id="hblCard">
    <!-- 標題區域 -->
    <abp-card-header style="background:#555555;color:#FFFFFF;">
        <abp-card-title>
            @{
                Model.Title = string.IsNullOrEmpty(Model.HawbModel.HawbNo) ? (_currentUser.Name + " " + _currentUser.SurName) : Model.HawbModel.HawbNo;
            }
            HAWB Information - @Model.Title
        </abp-card-title>

        @if(Model.HawbModel.Id != Guid.Empty)
        {
            <div class="btn-group dropdown">
            <button class="btn btn-secondary dropdown-toggle" style="position: relative;" type="button" id="ActionDrop" data-bs-toggle="dropdown">
                  @if(@Model.HawbModel.IsLocked)
                         {
                           <i class="fa fa-lock"></i>
                                        }
                           else
                       {
                           <i class="fa fa-lock-open"></i>
                                        }
                @L["Display:Function"]
            </button>
            <input asp-for="@Model.HawbModel.IsLocked" type="hidden"/>
            <div class="dropdown-menu " aria-labelledby="dropdownMenuButton1" id="ActionDrop">
                  <a class='dropdown-item' href='javascript:void(0)' onclick="setHawbLockUnlock('@Model.HawbModel.IsLocked')">
                                        @if(@Model.HawbModel.IsLocked)
                                        {
                                            <i class="fa fa-lock-open"></i> @L["Btn:UnLock"]
                                        }
                                        else
                                        {
                                            <i class="fa fa-lock"></i> @L["Btn:Lock"]
                                        }
                                    </a>
                <a class='dropdown-item' href='#'>
                    <i class="fa fa-copy"></i> @L["Btn:Copy"]
                </a>
                <a class='dropdown-item' href='javascript:void(0)' onclick="deleteHawbAirImport()">
                    <i class="fa fa-trash"></i> @L["Btn:Delete"]
                </a>
                <a class='dropdown-item' href='javascript:void(0)' onclick="onCopyToHawbClick()">
                    <i class="fa fa-copy"></i> @L["Btn:CopyTo"]
                </a>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="editMawbAirImport('@Model.HawbModel.MawbId' ,'@Model.HawbModel.Id')">
                    <i class="fa fa-share"></i> @L["Btn:Move"]
                </a>
                <p class="dropdown-divider"></p>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("ArrivalNoticeAirImportHawb", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Arrival Notice"]
                </a>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("HawbAuthority", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL, reportType = "Summary" })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Authority (ATME)"]
                </a>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("DeliveryOrderAirImportHawb", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Delivery Order"]
                </a>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("ITTE", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL})')">
                    <i class="fa fa-file-text-o"></i> @L["I.T/T.E"]
                </a>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("ReleaseOrderAirImportHawb", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Release Order"]
                </a>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("PreliminaryClaimAirImportHawb", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Preliminary Claim"]
                </a>
                    <a class='dropdown-item' href='javascript:void()' onclick="OpenWindow('@Url.Action("CarrierCertificateAirImportHawb", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Carrier Certificate"]
                </a>
                <p class="dropdown-divider"></p>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("AirImportProfitReport", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL, reportType = "Summary" })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Profit Report"]
                </a>
                <p class="dropdown-divider"></p>
                <a class='dropdown-item' href='javascript:void(0)' style="color: #4B77BE; font-weight: 500;" onclick="OpenInTrackTrace()">
                    <i class="fa fa-location-arrow"></i> @L["Btn:Open in Track-Trace"]
                </a>
            </div>
        </div>
        }
        
        <button type="button" id="btnHawbCollapse" class="btn btn-collapse" data-bs-toggle="collapse" data-bs-target="#hawbDiv" aria-expanded="true" aria-controls="hawbDiv">
        </button>
    </abp-card-header>
    <!-- Mawb資訊欄 -->
    <abp-card-body id="hawbDiv" class="card-body collapse show customForm">
        <!--第一列-->
        <abp-row>
            <abp-input asp-for="@Model.Id" type="hidden" />
            <abp-input asp-for="@Model.HawbModel.Id" type="hidden" />
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.HawbNo" required size="Small" />
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.QuotationId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["QuotationId"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.QuotationId) })
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.Hsn" size="Small" type="text" abp-data-datepicker="false" />
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.ShipperId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["ShipperId"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.ShipperId) })
            </abp-column>
        </abp-row>
        <!--第二列-->
        <abp-row>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.ConsigneeId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["ConsigneeId"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.ConsigneeId) })
            </abp-column>

            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.Notify", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["Notify"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.Notify) })
            </abp-column>
            <abp-column size-md="_3">

                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.Customer", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["HAWBCustomer"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.Customer) })
            </abp-column>
            <abp-column size-md="_3">

                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.BillToId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["MblBillToId"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.BillToId) })

            </abp-column>
        </abp-row>
        <!--第三列-->
        <abp-row>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.CustomsBroker", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["CustomsBroker"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.CustomsBroker) })

            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.SalesId" size="Small" />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="HawbModel.OPId" size="Small" readonly="true" value="@(Model.HawbModel.OP?.Name + " " + Model.HawbModel.OP?.Surname)" />
            </abp-column>
        </abp-row>
        <hr />
        <!--第四列-->
        <abp-row>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.FreightLocation", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["FreightLocation"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.FreightLocation) })
                @*<abp-input asp-for="@Model.HawbModel.FreightLocation" />*@
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.FinalDestination", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["FinalDestination"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.FinalDestination) })
                @*<abp-input asp-for="@Model.HawbModel.FinalDestination" />*@
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.FinalETA" />
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.DeliveryLocation", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["DeliveryLocation"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.DeliveryLocation) })
                @*<abp-input asp-for="@Model.HawbModel.DeliveryLocation" />*@
            </abp-column>
        </abp-row>
        
        <!--第四列-->
        <abp-row>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.Trucker", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["Trucker"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.Trucker) })
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.LastFreeDay" size="Small"  />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.StorageStartDate" size="Small" />
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.Freight", AspItems = _dropdown.FreightTermLookupList, IsShowLabel = true, FieldName = "Freight", SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.HawbModel.Freight) })
            </abp-column>
        </abp-row>
        <!--第五列-->
        <abp-row>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.SalesType", AspItems = _dropdown.SalesTypeLookupList, IsShowLabel = true, FieldName = "SalesType", SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.HawbModel.SalesType) })
            </abp-column>
        </abp-row>
        <hr />

        <!--第六列-->
        <abp-row>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.Package" size="Small" />
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.PackageUnit", AspItems = _dropdown.PackageUnitLookupList, FieldName = "PackageUnit", IsShowLabel = true, SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.HawbModel.PackageUnit) })

            </abp-column>
        </abp-row>
        <!--第七列-->
        <abp-row>
            <abp-column size-md="_2">
                <abp-input asp-for="@Model.HawbModel.GrossWeightKG" size="Small" />
            </abp-column>
            <abp-column size-md="_2">
                <abp-input asp-for="@Model.HawbModel.GrossWeightLB" size="Small" />
            </abp-column>
            <abp-column size-md="_2">
                <abp-input asp-for="@Model.HawbModel.ChargeableWeightKG" size="Small" />
            </abp-column>
            <abp-column size-md="_2">
                <abp-input asp-for="@Model.HawbModel.ChargeableWeightLB" size="Small" />
            </abp-column>

        </abp-row>
        <abp-row>
            <abp-column size-md="_2">
                <abp-input asp-for="@Model.HawbModel.VolumeWeightKG" size="Small" />
            </abp-column>
            <abp-column size-md="_2">
                <abp-input asp-for="@Model.HawbModel.VolumeWeightCBM" size="Small" />
            </abp-column>
        </abp-row>
        <!--第八列-->
        <abp-row>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.ITNo" size="Small" />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.ClassOfEntry" size="Small"  />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.ITDate" size="Small"  />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.ITIssuedLocation" size="Small"  />
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column size-md="_1" class="align-self-center">
                <input type="checkbox" id="chkFrtRelease" />
            </abp-column>
            <abp-column size-md="_2">
                <abp-input asp-for="HawbModel.FrtRelease" size="Small" disabled />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="HawbModel.ReleasedBy" size="Small" readonly="true" />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.CargoReleasedto" size="Small" />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.CReleasedDate" size="Small" />
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.DoorDelivered" size="Small" />
            </abp-column>
        </abp-row>
        <hr />
        <!--第10列-->
        <abp-row>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.ShipType" size="Small" />
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.Incoterms", AspItems = _dropdown.IncotermsLookupList, IsShowLabel = true, IsRequired = true, FieldName = @L["Incoterms"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.Incoterms) })
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.ServiceTermStart", AspItems = _dropdown.SvgTermLookupList, IsShowLabel = true, IsRequired = true, FieldName = @L["ServiceTermStart"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.ServiceTermStart) })
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.ServiceTermTo", AspItems = _dropdown.SvgTermLookupList, IsShowLabel = true, IsRequired = true, FieldName = @L["ServiceTermTo"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.ServiceTermTo) })
            </abp-column>
        </abp-row>
        <!-- SUB HAWB -->
        <abp-row class="mt-4">
            <abp-column size-md="_2">
                <h3>@L["SubHAWB"]</h3>
            </abp-column>
            <abp-column size-md="_1">
                <button class="btn btn-success me-md-2" type="button" id="addSubHAWBBtn" onclick="onAddSubHawb()" data-busy-text="Processing...">+</button>
            </abp-column>
            <abp-column size-md="_1">
                <button class="btn btn-danger me-md-2" type="button" id="deleteSubHAWBBtn" onclick="onRemoveSubHawbs()">-</button>
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column size-md="_12">
                <div class="table-responsive">
                    <abp-table class="nowrap" border="1" class="w-100">
                        <thead border="1">
                        <th></th>
                        <th>@L["SubHAWB"]</th>
                        <th>@L["DescriptionITNo"]</th>
                        <th>@L["PCS"]</th>
                        <th>@L["PKGUnit"]</th>
                        <th>@L["Amount"]</th>
                        </thead>
                        <tbody id="subHAWBBody">
                        </tbody>
                    </abp-table>
                </div>
            </abp-column>
        </abp-row>
        <!-- P.O. No. -->
        <abp-row>
            <abp-column size-md="_12">
                <abp-input asp-for="@Model.HawbModel.PONo" id="AwbCancelledOpId" size="Small" />
            </abp-column>
        </abp-row>
        <!-- Commodity -->
        <abp-row class="mt-4">
            <abp-column size-md="_2" class="d-flex">
                <h3>@L["Commodity"]</h3>
            </abp-column>
            <abp-column size-md="_1">
                <button class="btn btn-success me-md-2" type="button" id="addCommodityBtn" onclick="onAddCommodity()" data-busy-text="Processing...">+</button>
            </abp-column>
            <abp-column size-md="_1">
                <button class="btn btn-danger me-md-2" type="button" id="deleteCommodityBtn" onclick="onRemoveCommodity()">-</button>
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column size-md="_12">
                <abp-table class="nowrap" border="1" class="w-100">
                    <thead border="1">
                        <th></th>
                        <th>@L["CommodityDescription"]</th>
                        <th>@L["HTSCode"]</th>
                        <th>@L["PoNo"]</th>
                    </thead>
                    <tbody id="commodityBody">
                    </tbody>
                </abp-table>
            </abp-column>
        </abp-row>
        <!-- War house -->
        <abp-row>
            <abp-column size-md="_12">
                <div class="table-responsive">
                    <abp-table class="nowrap" border="1" class="w-100">
                        <thead border="1">
                        <th><input type="checkbox" /></th>
                        <th>@L["ReceiptNo"]</th>
                        <th>@L["Length"]</th>
                        <th>@L["Width"]</th>
                        <th>@L["Height"]</th>
                        <th>@L["Dimention"]</th>
                        <th>@L["TOTALPCS"]</th>
                        <th>@L["AvailablePCS"]</th>
                        <th>@L["AllocatedPCS"]</th>
                        <th>@L["Unit"]</th>
                        <th>@L["GrossWeight"]</th>
                        <th>@L["Volume"]</th>
                        <th>@L["Measurement"]</th>
 
                        </thead>
                        <tbody id="warhouseBody">
                            <tr>
                                <td><button>@L["LoadFromWarhouse"] </button></td>
                                <td><input type="checkbox" />@L["ASPWM"]</td>
                                <td><input type="checkbox" />@L["AutoSyncdimentions"]</td>
                            </tr>
                        </tbody>
                    </abp-table>
                </div>

            </abp-column>
        </abp-row>
        <abp-row class="mt-4">
            <abp-column size-md="_6">
  
                <abp-input asp-for="@Model.HawbModel.Mark" size="Small" />
            </abp-column>
            <abp-column size-md="_6">

                <abp-input asp-for="@Model.HawbModel.Description" size="Small" />
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column size-md="_12">

                <abp-input asp-for="@Model.HawbModel.Remark" size="Small" />
            </abp-column>
        </abp-row>
        <abp-row class="d-none">
            <abp-column size="_12">
                <abp-input asp-for="@Model.Id" type="hidden" />
                <abp-input asp-for="HawbModel.ExtraProperties" value="@Json.Serialize(Model.HawbModel.ExtraProperties)" type="hidden" />
                <abp-input asp-for="@Model.HawbModel.Id" type="hidden" />
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column>
                <abp-card-header style="background:#cccccc;color:#FFFFFF;">
                    @L["Title:Memo"]
                </abp-card-header>
                <abp-card>
                    <abp-card-body>
                        <partial name="Memos/_Memo" model="new _MemoModel(Model.HawbModel.Id, Dolphin.Freight.Common.FreightPageType.AIMBL)" />
                    </abp-card-body>
                </abp-card>
            </abp-column>
        </abp-row>
    </abp-card-body>
</abp-card>