@using Dolphin.Freight.AirExports;
@using Dolphin.Freight.AirImports;
@using Dolphin.Freight.Web.Pages.Components;
@using Dolphin.Freight.Web.Pages.Shared.Memos;
@using Microsoft.AspNetCore.Mvc.Localization;
@using Microsoft.Extensions.Localization;
@using Dolphin.Freight.Localization
@using Volo.Abp.Users
@using Dolphin.Freight.Web.CommonService;
@inject ICurrentUser _currentUser
@inject IDropdownService _dropdown

@inject IStringLocalizer<FreightResource> L

@model Dolphin.Freight.Web.ViewModels.ImportExport.HawbHblViewModel
<abp-script src="/Pages/AirImports/AirImportHawb.js" />
<script>
    const createHawbCopyModal = new abp.ModalManager({
                viewUrl: '/AirImports/CopyHawbModal',
            });
    function gotoReport(rindex) {
        var url = "";
        var pname = "";
        switch (rindex) {
            default:
                url = '@Url.Action("Car", "Docs")';
                pname = "Car";
                break;
            case 2:
                url = '@Url.Action("Cargo", "Docs")';
                pname = "Cargo";
                break;
            case 3:
                url = '@Url.Action("Box", "Docs")';
                pname = "Box";
                break;
            case 4:
                url = '@Url.Action("HawbProfitReport", "Docs", new { hawbId = Model.HawbModel.Id })';
                pname = "ProfitSummary";
                break;
            case 5:
                url = '@Url.Action("ProfitDetail", "Docs", new { oceanExportMblId = Model.Id })';
                pname = "ProfitDetail";
                break;
            case 6:
                var idNo = $('#OceanExportHbl_Id').val();
                url = '@Url.Action("Shipment", "Docs")' + "?id=" + idNo;
                pname = "Shipment";
                break;
            case 7:
                var idNo = $('#OceanExportHbl_Id').val();
                url = '@Url.Action("OBL", "Docs")' + "?id=" + idNo;
                pname = "OBL";
                break;
        }
        myWindow = window.open(url, pname, 'width=1200,height=800')
        myWindow.focus()
    }
</script>
<!-- HABL Card -->
<abp-card class="card board-item" id="hblCard">
    <!-- 標題區域 -->
    <abp-card-header style="background:#555555;color:#FFFFFF;">
        <abp-card-title>
            @{
                Model.Title = string.IsNullOrEmpty(Model.HawbModel.HawbNo) ? (_currentUser.Name + " " + _currentUser.SurName) : Model.HawbModel.HawbNo;
            }
            HAWB Information - @Model.Title
        </abp-card-title>

        @if(Model.HawbModel.Id != Guid.Empty)
        {
            <div class="btn-group dropdown">
            <button class="btn btn-secondary dropdown-toggle" style="position: relative;" type="button" id="ActionDrop" data-bs-toggle="dropdown">
                  @if(@Model.HawbModel.IsLocked)
                         {
                           <i class="fa fa-lock"></i>
                                        }
                           else
                       {
                           <i class="fa fa-lock-open"></i>
                                        }
                @L["Display:Function"]
            </button>
            <input asp-for="@Model.HawbModel.IsLocked" type="hidden"/>
            <div class="dropdown-menu " aria-labelledby="dropdownMenuButton1" id="ActionDrop">
                  <a class='dropdown-item' href='javascript:void(0)' onclick="AirImportHawb.setHawbLockUnlock('@Model.HawbModel.IsLocked')">
                                        @if(@Model.HawbModel.IsLocked)
                                        {
                                            <i class="fa fa-lock-open"></i> @L["Btn:UnLock"]
                                        }
                                        else
                                        {
                                            <i class="fa fa-lock"></i> @L["Btn:Lock"]
                                        }
                                    </a>
                <a class='dropdown-item' href='#'>
                    <i class="fa fa-copy"></i> @L["Btn:Copy"]
                </a>
                <a class='dropdown-item' href='javascript:void(0)' onclick="deleteHawbAirImport()">
                    <i class="fa fa-trash"></i> @L["Btn:Delete"]
                </a>
                <a class='dropdown-item' href='javascript:void(0)' onclick="AirImportHawb.onCopyToHawbClick()">
                    <i class="fa fa-copy"></i> @L["Btn:CopyTo"]
                </a>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="editMawbAirImport('@Model.HawbModel.MawbId' ,'@Model.HawbModel.Id')">
                    <i class="fa fa-share"></i> @L["Btn:Move"]
                </a>
                <p class="dropdown-divider"></p>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("ArrivalNoticeAirImportHawb", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Arrival Notice"]
                </a>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("HawbAuthority", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL, reportType = "Summary" })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Authority (ATME)"]
                </a>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("DeliveryOrderAirImportHawb", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Delivery Order"]
                </a>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("ITTE", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL})')">
                    <i class="fa fa-file-text-o"></i> @L["I.T/T.E"]
                </a>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("ReleaseOrderAirImportHawb", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Release Order"]
                </a>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("PreliminaryClaimAirImportHawb", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Preliminary Claim"]
                </a>
                    <a class='dropdown-item' href='javascript:void()' onclick="OpenWindow('@Url.Action("CarrierCertificateAirImportHawb", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Carrier Certificate"]
                </a>
                <p class="dropdown-divider"></p>
                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("AirImportProfitReport", "Docs", new { id = Model.HawbModel.Id, pageType = Dolphin.Freight.Common.FreightPageType.AIHBL, reportType = "Summary" })')">
                    <i class="fa fa-file-text-o"></i> @L["Btn:Profit Report"]
                </a>
                <p class="dropdown-divider"></p>
                <a class='dropdown-item' href='javascript:void(0)' style="color: #4B77BE; font-weight: 500;" onclick="AirImportHawb.OpenInTrackTrace()">
                    <i class="fa fa-location-arrow"></i> @L["Btn:Open in Track-Trace"]
                </a>
            </div>
        </div>
        }
        
        <button type="button" id="btnHawbCollapse" class="btn btn-collapse" data-bs-toggle="collapse" data-bs-target="#hawbDiv" aria-expanded="true" aria-controls="hawbDiv">
        </button>
    </abp-card-header>
    <!-- Mawb資訊欄 -->
    <abp-card-body id="hawbDiv" class="card-body collapse show customForm">
        <!--第一列-->
        <abp-row>
            <abp-input asp-for="@Model.Id" type="hidden" />
            <abp-input asp-for="@Model.HawbModel.Id" type="hidden" />
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.HawbNo" required size="Small" />
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.QuotationId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["QuotationId"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.QuotationId) })
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.Hsn" size="Small" type="text" abp-data-datepicker="false" />
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.ShipperId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["ShipperId"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.ShipperId) })
            </abp-column>
        </abp-row>
        <!--第二列-->
        <abp-row>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.ConsigneeId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["ConsigneeId"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.ConsigneeId) })
            </abp-column>

            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.Notify", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["Notify"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.Notify) })
            </abp-column>
            <abp-column size-md="_3">

                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.Customer", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["HAWBCustomer"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.Customer) })
            </abp-column>
            <abp-column size-md="_3">

                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.BillToId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["MblBillToId"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.BillToId) })

            </abp-column>
        </abp-row>
        <!--第三列-->
        <abp-row>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.CustomsBroker", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["CustomsBroker"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.CustomsBroker) })

            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.SalesId" size="Small" />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="HawbModel.OPId" size="Small" readonly="true" value="@(Model.HawbModel.OP?.Name + " " + Model.HawbModel.OP?.Surname)" />
            </abp-column>
        </abp-row>
        <hr />
        <!--第四列-->
        <abp-row>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.FreightLocation", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["FreightLocation"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.FreightLocation) })
                @*<abp-input asp-for="@Model.HawbModel.FreightLocation" />*@
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.FinalDestination", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["FinalDestination"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.FinalDestination) })
                @*<abp-input asp-for="@Model.HawbModel.FinalDestination" />*@
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.FinalETA" abp-data-datepicker="false" />
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.DeliveryLocation", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["DeliveryLocation"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.DeliveryLocation) })
                @*<abp-input asp-for="@Model.HawbModel.DeliveryLocation" />*@
            </abp-column>
        </abp-row>
        
        <!--第四列-->
        <abp-row>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.Trucker", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["Trucker"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.Trucker) })
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.LastFreeDay" size="Small" abp-data-datepicker="false" />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.StorageStartDate" size="Small" abp-data-datepicker="false" />
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.Freight", AspItems = _dropdown.FreightTermLookupList, IsShowLabel = true, FieldName = "Freight", SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.HawbModel.Freight) })
            </abp-column>
        </abp-row>
        <!--第五列-->
        <abp-row>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.SalesType", AspItems = _dropdown.SalesTypeLookupList, IsShowLabel = true, FieldName = "SalesType", SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.HawbModel.SalesType) })
            </abp-column>
        </abp-row>
        <hr />

        <!--第六列-->
        <abp-row>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.Package" size="Small" />
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.PackageUnit", AspItems = _dropdown.PackageUnitLookupList, FieldName = "PackageUnit", IsShowLabel = true, SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.HawbModel.PackageUnit) })

            </abp-column>
        </abp-row>
        <!--第七列-->
        <abp-row>
            <abp-column size-md="_2">
                <abp-input asp-for="@Model.HawbModel.GrossWeightKG" onkeyup="AirImportHawb.KgToLbConversion(event, 'KG')" size="Small" />
            </abp-column>
            <abp-column size-md="_2">
                <abp-input asp-for="@Model.HawbModel.GrossWeightLB" onkeyup="AirImportHawb.KgToLbConversion(event, 'LB')" size="Small" />
            </abp-column>
            <abp-column size-md="_2">
                <abp-input asp-for="@Model.HawbModel.ChargeableWeightKG" onkeyup="AirImportHawb.KgToLbConversion(event, 'KG')" size="Small" />
            </abp-column>
            <abp-column size-md="_2">
                <abp-input asp-for="@Model.HawbModel.ChargeableWeightLB" onkeyup="AirImportHawb.KgToLbConversion(event, 'LB')" size="Small" />
            </abp-column>
            <abp-column size-md="_2">
                <abp-input asp-for="@Model.HawbModel.VolumeWeightKG" onkeyup="AirImportHawb.KgToLbConversion(event, 'VolKG')" size="Small" />
            </abp-column>
            <abp-column size-md="_2">
                <abp-input asp-for="@Model.HawbModel.VolumeWeightCBM" onkeyup="AirImportHawb.KgToLbConversion(event, 'CBM')" size="Small" />
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column>
                <abp-button size="Small" button-type="Primary" text="@L["SetDimensions"]" onclick="checkforId()" icon="pencil-square" />
            </abp-column>
        </abp-row>
      
        <!--第八列-->
        <abp-row>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.ITNo" size="Small" />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.ClassOfEntry" size="Small"  />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.ITDate" size="Small" abp-data-datepicker="false" />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.ITIssuedLocation" size="Small"  />
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column size-md="_1" class="align-self-center">
                <input type="checkbox" id="chkFrtRelease" />
            </abp-column>

            <abp-column size-md="_2">

                <abp-input asp-for="HawbModel.FrtRelease" size="Small" abp-data-datepicker="false" disabled />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="HawbModel.ReleasedBy" size="Small" readonly="true" />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.CargoReleasedto" size="Small" />
            </abp-column>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.CReleasedDate" size="Small" abp-data-datepicker="false" />
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column size-md="_3">
                <abp-input asp-for="@Model.HawbModel.DoorDelivered" size="Small" abp-data-datepicker="false" />
            </abp-column>
        </abp-row>
        <hr />
        <!--第10列-->
        <abp-row>
            <abp-column size-md="_3">
                <label class="form-label" for="@Model.HawbModel.ShipType">@L["ShipType"]</label>
                <select asp-for="@Model.HawbModel.ShipType" class="form-select form-control cursor-pointer">
                    <option></option>
                    @foreach (SelectListItem item in Html.GetEnumSelectList(typeof(ShipType)))
                    {
                        @if (item.Value == @Model.HawbModel.ShipType)
                        {
                            <option value="@item.Value" selected>@item.Text</option>
                        } else if (item.Value == Convert.ToString(1))
                        {
                            <option value="@item.Value" selected>@item.Text</option>
                        } else
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    }
                </select>
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.Incoterms", AspItems = _dropdown.IncotermsLookupList, IsShowLabel = true, FieldName = @L["Incoterms"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.Incoterms) })
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.ServiceTermStart", AspItems = _dropdown.SvgTermLookupList, IsShowLabel = true, FieldName = @L["ServiceTermStart"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.ServiceTermStart) })
            </abp-column>
            <abp-column size-md="_3">
                @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "HawbModel.ServiceTermTo", AspItems = _dropdown.SvgTermLookupList, IsShowLabel = true, FieldName = @L["ServiceTermTo"], ShowFiledContentValue = Convert.ToString(Model.HawbModel.ServiceTermTo) })
            </abp-column>
        </abp-row>
        <!-- SUB HAWB -->
        <abp-row class="mt-4">
            <abp-column size-md="_2">
                <h3>@L["SubHAWB"]</h3>
            </abp-column>
            <abp-column size-md="_1">
                <button class="btn btn-success me-md-2" type="button" id="addSubHAWBBtn" onclick="onAddSubHawb()" data-busy-text="Processing...">+</button>
            </abp-column>
            <abp-column size-md="_1">
                <button class="btn btn-danger me-md-2" type="button" id="deleteSubHAWBBtn" onclick="onRemoveSubHawbs()">-</button>
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column size-md="_12">
                <div class="table-responsive">
                    <abp-table class="nowrap" border="1" class="w-100">
                        <thead border="1">
                        <th></th>
                        <th>@L["SubHAWB"]</th>
                        <th>@L["DescriptionITNo"]</th>
                        <th>@L["PCS"]</th>
                        <th>@L["PKGUnit"]</th>
                        <th>@L["Amount"]</th>
                        </thead>
                        <tbody id="subHAWBBody">
                        </tbody>
                    </abp-table>
                </div>
            </abp-column>
        </abp-row>
        <!-- P.O. No. -->
        <abp-row>
            <abp-column size-md="_12">
                <abp-input asp-for="@Model.HawbModel.PONo" id="AwbCancelledOpId" size="Small" />
            </abp-column>
        </abp-row>
        <!-- Commodity -->
        <abp-row class="mt-4">
            <abp-column size-md="_2" class="d-flex">
                <h3>@L["Commodity"]</h3>
            </abp-column>
            <abp-column size-md="_1">
                <button class="btn btn-success me-md-2" type="button" id="addCommodityBtn" onclick="onAddCommodity()" data-busy-text="Processing...">+</button>
            </abp-column>
            <abp-column size-md="_1">
                <button class="btn btn-danger me-md-2" type="button" id="deleteCommodityBtn" onclick="onRemoveCommodity()">-</button>
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column size-md="_12">
                <abp-table class="nowrap" border="1" class="w-100">
                    <thead border="1">
                        <th></th>
                        <th>@L["CommodityDescription"]</th>
                        <th>@L["HTSCode"]</th>
                        <th>@L["PoNo"]</th>
                    </thead>
                    <tbody id="commodityBody">
                    </tbody>
                </abp-table>
            </abp-column>
        </abp-row>
        <!-- War house -->
        <abp-row>
            <abp-column size-md="_12">
                <div class="table-responsive">
                    <abp-table class="nowrap" border="1" class="w-100">
                        <thead border="1">
                        <th><input type="checkbox" /></th>
                        <th>@L["ReceiptNo"]</th>
                        <th>@L["Length"]</th>
                        <th>@L["Width"]</th>
                        <th>@L["Height"]</th>
                        <th>@L["Dimention"]</th>
                        <th>@L["TOTALPCS"]</th>
                        <th>@L["AvailablePCS"]</th>
                        <th>@L["AllocatedPCS"]</th>
                        <th>@L["Unit"]</th>
                        <th>@L["GrossWeight"]</th>
                        <th>@L["Volume"]</th>
                        <th>@L["Measurement"]</th>
 
                        </thead>
                        <tbody id="warhouseBody">
                            <tr>
                                <td><button>@L["LoadFromWarhouse"] </button></td>
                                <td><input type="checkbox" />@L["ASPWM"]</td>
                                <td><input type="checkbox" />@L["AutoSyncdimentions"]</td>
                            </tr>
                        </tbody>
                    </abp-table>
                </div>

            </abp-column>
        </abp-row>
        <abp-row class="mt-4">
            <abp-column size-md="_6">
                <label class="form-label">@L["Mark"]</label>
   <textarea  asp-for="HawbModel.Mark" id="HawbModel_Mark" name="HawbModel.Mark" class="form-control">@Model.HawbModel.Mark</textarea>
              @*   <abp-input asp-for="@Model.HawbModel.Mark" size="Small" /> *@
            </abp-column>
            <abp-column size-md="_6">
                  <label class="form-label">@L["Description"]</label>
   <textarea  asp-for="HawbModel.Description" id="HawbModel_Description" name="HawbModel.Description" class="form-control">@Model.HawbModel.Description</textarea>
              @*   <abp-input asp-for="@Model.HawbModel.Description" size="Small" /> *@
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column size-md="_12">
                 <label class="form-label">@L["Description"]</label>
                 <textarea  asp-for="HawbModel.Remark" id="HawbModel_Remark" name="HawbModel.Remark" class="form-control">@Model.HawbModel.Remark</textarea>
               @*  <abp-input asp-for="@Model.HawbModel.Remark" size="Small" /> *@
            </abp-column>
        </abp-row>
        <abp-row class="d-none">
            <abp-column size="_12">
                <abp-input asp-for="@Model.Id" type="hidden" />
                <abp-input asp-for="HawbModel.ExtraProperties" value="@Json.Serialize(Model.HawbModel.ExtraProperties)" type="hidden" />
                <abp-input asp-for="@Model.HawbModel.Id" type="hidden" />
                <abp-input asp-for="@Model.HawbModel.HawbDimensionsJSON" type="hidden" value="@Convert.ToString(Model.HawbModel?.ExtraProperties?.GetValueOrDefault("Dimensions"))" />
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column>
                <abp-card-header style="background:#cccccc;color:#FFFFFF;">
                    @L["Title:Memo"]
                </abp-card-header>
                <abp-card>
                    <abp-card-body>
                        <partial name="Memos/_Memo" model="new _MemoModel(Model.HawbModel.Id, Dolphin.Freight.Common.FreightPageType.AIMBL)" />
                    </abp-card-body>
                </abp-card>
            </abp-column>
        </abp-row>
    </abp-card-body>
</abp-card>

<div class="modal fade" id="HCreateModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Item</h5>
                <button type="button" class="close" onclick="$('#HCreateModal').modal('hide')" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="portlet-tool">
                    <div class="btn-group" role="group" aria-label="Basic outlined example" style="cursor: no-drop;">
                        <button type="button" class="btn btn-outline-success fa fa-plus" onclick="AirImportHawb.createNewDimension()" id="newDimensionBtn"></button>
                        <button type="button" class="btn btn-outline-danger fa fa-trash" onclick="AirImportHawb.deleteDimension()" id="HdeleteDimensionBtn" disabled></button>
                    </div>
                </div>

                <table class="table-responsive" width="100%" border="1" style="border-block-color:#333333;padding-left:10px;margin:4px;">
                    <tr border="1" style="border-block-color:#333333;padding-left:10px;margin-left:4px;">
                        <th width="5%" style="background: #888888; color: #fff"><input type="checkbox" name="dimensionCheckbox" /></th>
                        <th width="20%" style="background: #888888; color: #fff">@L["Length"]</th>
                        <th width="15%" style="background: #888888; color: #fff">@L["Width"]</th>
                        <th width="15%" style="background: #888888; color: #fff">@L["Height"]</th>
                        <th width="15%" style="background: #888888; color: #fff">@L["PCS"]</th>
                        <th colspan="2" width="20%" style="text-align: center; background: #888888; color: #fff">@L["Volume"]</th>
                        <th colspan="2" width="20%" style="text-align: center; background: #888888; color: #fff">@L["Measurement"]</th>
                    </tr>
                    <tr border="1" style="border-block-color:#333333;padding-left:10px;margin-left:4px;">
                        <th rowspan="2"></th>
                        <th rowspan="2"></th>
                        <th rowspan="2"></th>
                        <th rowspan="2"></th>
                        <th rowspan="2"></th>
                        <th width="10%">@L["KG"]</th>
                        <th width="10%">@L["LB"]</th>
                        <th width="10%">@L["CBM"]</th>
                        <th width="10%">@L["CFT"]</th>
                    </tr>
                    <tbody id="Hpopuptrtbody">
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="4" align="right"><strong>Total:</strong></td>
                            <td id="HtotalPCS">0</td>
                            <td id="HtotalKG">0.00</td>
                            <td id="HtotalLB">0.00</td>
                            <td id="HtotalCBM">0.00</td>
                            <td id="HtotalCFT">0.00</td>
                        </tr>
                    </tfoot>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="$('#HCreateModal').modal('hide')" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="HapplyDimensions">Apply</button>
            </div>
        </div>
    </div>
</div>