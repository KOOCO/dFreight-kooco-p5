@page
@using Dolphin.Freight.Localization
@using Dolphin.Freight.Permissions
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Dolphin.Freight.Web.Pages.Components

@using Dolphin.Freight.Web.CommonService
@model Dolphin.Freight.Web.Pages.Accounting.Invoices.GAListModel
@inject IStringLocalizer<FreightResource> L
@inject IDropdownService _dropdown;
@section scripts
    {
    <script type="text/javascript">
        var cardIndex = 0;
        var dataTable;
        $(document).ready(function () {

            var l = abp.localization.getResource('Freight');
            var queryAction = function () {
                return {
                    QueryInvoiceType: 2,
                     search: $("#Keyword").val(),
       
        officeId: $("#VesselSchedule_OfficeId").val() == '' ? null : $("#VesselSchedule_OfficeId").val(),
        invoiceType:$("#TypeId").val() == '' ? null :parseInt($("#TypeId").val()),
        postDate: $("#PostDate").val() == '' || $("#PostDate").val() == null ? null : new Date($("#PostDate").val()),
         invoiceDate: $("#InvoiceDate").val() == '' || $("#InvoiceDate").val() == null? null : new Date($("#InvoiceDate").val()),
        dueDate: $("#DueDate").val() == '' || $("#DueDate").val() == null ? null : new Date($("#DueDate").val()),
        eta: $("#ETA").val() == '' || $("#ETA").val() == null? null : new Date($("#ETA").val()),
        etd: $("#ETD").val() == '' || $("#ETD").val() == null ? null : new Date($("#ETD").val()),
         lastDate: $("#LastDate").val() == '' || $("#LastDate").val() == null ? null : new Date($("#LastDate").val()),
       
        invoiceNo: $("#InvoiceNo").val(),
                };
            };
        var columns=[    {
                            className: 'dtr-control',
                            orderable: false,
                            "defaultContent": ""
                        },
                        {
                            title: l('Actions'),
                            rowAction: {
                                items:
                                    [
                                        {
                                            text: l('Edit'),
                                            visible: abp.auth.isGranted('Settings.ItNoRanges.Edit'), //CHECK for the PERMISSION
                                            action: function (data) {
                                                if (data.record.isLocked) {

                                                }
                                                location.href = 'EditModal?Id=' + data.record.id;

                                            }
                                        },

                                        {
                                            text: l('Delete'),
                                            visible: function (data) {

                                                return !data.isLocked && abp.auth.isGranted('Settings.ItNoRanges.Delete')
                                            },

                                            action: function (data) {
                                                if (!data.record.isLocked) {
                                                    abp.message.confirm(l('DeletionConfirmationMessage'))
                                                        .then(function (confirmed) {
                                                            if (confirmed) {
                                                                dolphin.freight.importExport.oceanExports.oceanExportMbl
                                                                    .delete(data.record.id)
                                                                    .then(function () {
                                                                        abp.message.success(l('SuccessfullyDeleted'));
                                                                        dataTable.ajax.reload();
                                                                    });
                                                            }
                                                        });

                                                } else {
                                                    abp.message.warn("鎖定不能刪除")
                                                }

                                                /*
                                                if (!data.record.isLocked) {
                                                    dolphin.freight.importExport.oceanExports.oceanExportMbl
                                                        .delete(data.record.id)
                                                        .then(function () {
                                                            abp.message.success(l('SuccessfullyDeleted'));
                                                            dataTable.ajax.reload();
                                                        });
                                                } else {
                                                    abp.message.warn("鎖定不能刪除")
                                                }*/

                                            }
                                        }
                                    ]
                            }
                        },
                        ]
            $(function () {
                dolphin.freight.web.controllers.configuration.getJsonConfig('Q&AInvoiceList').done(function (data) {
                    data.forEach(function (item) {

                        if (!item.lock && item.checkable) {
                            var column;

                            if (item.text.toLowerCase().includes('invoiceno')) {
                                column = {
                                    //是否鎖定
                                    data: null, title: l('InvoiceNo'),
                                    render: function (data, type, row) {
                                        var hid = row.hblId;
                                        if (hid == null || hid == "null") hid = "";
                                        return '<a href="/Accounting/Invoice?MethodType=2&InvoiceType=' + row.invoiceType + '&Mid=' + row.mblId + '&Hid=' + hid + '&InvoiceId=' + row.id + '" >' + row.invoiceNo + '</a> ';
                                    }
                                }
                            }
                            else if (item.text.toLowerCase().includes('type')) {
                                column = {
                                    data: null, title: l('Type'),
                                    render: function (data, type, row) {
                                        switch (row.invoiceType) {
                                            default:
                                                return "";
                                            case 0:
                                                return "應收";
                                            case 1:
                                                return "應收/應付";
                                            case 2:
                                                return "應付";

                                        }
                                    }
                                }

                            }
                            else {
                                column = {
                                    title: l(item.text),
                                    data: item.name
                                };
                            }
                            columns.push(column);
                        }
                    });

                    var col = (columns.length > 2) ? [[2, 'asc']] : [[0, 'asc']];
                     dataTable = $('#ListTable').DataTable(
                        abp.libs.datatables.normalizeConfiguration({
                            serverSide: true,
                            paging: true,
                            order:col,
                            searching: false,
                            scrollX: true,
                            processing: true,
                            responsive: {
                                details: {
                                    type: 'column'
                                }
                            },
                            autoWidth: false,
                            ajax: abp.libs.datatables.createAjax(dolphin.freight.accounting.invoices.invoice.queryList, queryAction),
                            columnDefs: columns
                        })
                    );
                });
                  $('#btnConfiguration').click(function (e) {
        var _configurationModal = new abp.ModalManager({
            viewUrl: abp.appPath + 'Configuration',
            modalClass: 'ConfigurationViewModel'
        });

        _configurationModal.open({
            src: 'Q&AInvoiceList'
        });
    })
          $('#Search').click(function (e) {
        dataTable.ajax.reload();
    });
    $('#CancelFilter').click(function (e) {
        $("#Keyword").val(null);
       
        // $("#VesselSchedule_OfficeId").val(null);
        $("select[name='VesselSchedule_OfficeId']").val(null);
        
        $("#Type").val(null).trigger("change");
        $("#PostDate").val(null);
        $("#ETA").val(null);
        $("#ETD").val(null);
        $("#InvoiceDate").val(null);
        $("#DueDate").val(null);
        $("#LastDate").val(null);
        $("#InvoiceNo").val(null);
        dataTable.ajax.reload();
    });
            });

        });

    </script>
}
<div class="page-header">
    <div class="breadcrumb-wrapper">
        <abp-breadcrumb>
            <abp-breadcrumb-item title=@L["Menu:Accounting"] />
            <abp-breadcrumb-item title=@L["Menu:Invoice"] />
            <abp-breadcrumb-item title=@L["Menu:Invoice.GAList"] href="#" />
        </abp-breadcrumb>
    </div>
</div>
<div class="page-content-area">
    <abp-card>
        <abp-card-header>
          
         <abp-row class="w-100">
                <abp-column size-md="_6">
                   <abp-card-title>@L["Menu:Invoice.GAList"]</abp-card-title>
                </abp-column>
                <abp-column size-md="_6" class="text-end p-0">
                    <abp-button id="FilterGlCodeButton"
                            text="@L["Filter"].Value"
                            icon="filter"
                            button-type="Primary"
                            data-bs-toggle="collapse" data-bs-target="#mblDiv" aria-expanded="true" aria-controls="mblDiv" />
                    <abp-button id="btnConfiguration"
                                text="@L["Configuration"].Value"
                                icon="gear"
                                button-type="Primary" />
                </abp-column>
            </abp-row>
    </abp-card-header>
    <abp-card-body class="collapse hide" id="mblDiv">
            <abp-row class="mb-3">
                <abp-column size-md="_1">
                    <label>@L["Keyword"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input class="form-control" id="Keyword" />
                </abp-column>
                 <abp-column size-md="_1">
                    <label>@L["InvoiceNo"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input class="form-control" id="InvoiceNo" />
                </abp-column>
                     <abp-column size-md="_1">
                    <label>@L["Office"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                  @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.OfficeId", AspItems =  _dropdown.SubstationLookupList, IsShowLabel = false, FieldName = "OfficeId", SelectType = 0,  })
            </abp-column>
                    <abp-column size-md="_1">
                    <label>@L["Type"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
               <select id="TypeId" class="form-select" />
                <option value=""></option>
                   <option value="0">應收</option>
                    <option value="1">應收/應付</option>
                    <option value="2">應付</option>
               </select>
                
                </abp-column>
            </abp-row>
         
            <abp-row class="mb-3">
               

            </abp-row>
            <abp-row class="mb-3">
                <abp-column size-md="_1">
                    <label>@L["PostDate"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input class="form-control" type="date" id="PostDate" />
                </abp-column>
               <abp-column size-md="_1">
                    <label>@L["InvoiceDate"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input class="form-control" type="date" id="InvoiceDate" />
                </abp-column>
               
               
                <abp-column size-md="_1">
                    <label>@L["ETD"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input type="date" class="form-control" id="ETD" />
                </abp-column>
                <abp-column size-md="_1">
                    <label>@L["ETA"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input type="date" class="form-control" id="ETA" />
                </abp-column>
            </abp-row>
            <abp-row class="mb-3">
                <abp-column size-md="_1">
                    <label>@L["DueDate"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input type="date" class="form-control" id="DueDate" />
                </abp-column>
                <abp-column size-md="_1">
                    <label>@L["LastPaidDate"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input type="date" class="form-control" id="LastDate" />
                </abp-column>
                          </abp-row>
            
            <abp-row>
                <abp-abp-column class="text-center">
               
                    <abp-button type="button" id="CancelFilter" text="@L["Cancel"]" button-type="Danger" />

                    <abp-button type="button" id="Search" text="@L["Search"]" button-type="Primary" />
               
                </abp-abp-column>
            </abp-row>
            </abp-card-body>
    <abp-card-body>
            <abp-table class="nowrap" striped-rows="true" id="ListTable" style="width:2000px;"></abp-table>
    </abp-card-body>
</abp-card>