@page "{id:Guid?}"
@using Dolphin.Freight.Localization
@using Dolphin.Freight.TradePartners.TradeParties;
@using Dolphin.Freight.Web.Pages.Shared;
@using Microsoft.Extensions.Localization
@using Dolphin.Freight.TradePartner
@model Dolphin.Freight.Web.Pages.Sales.TradePartner.EditTradePartnerInfoModel
@inject IStringLocalizer<FreightResource> L
@inject Dolphin.Freight.Web.CommonService.IDropdownService _dropdownService;
@section styles{
    <style>
        #ejo .btn-primary {
            color: #fff;
            background-color: rgb(0 123 255 / 52%);
            border-color: #007bff;
        }
        .redStar::before {
            content: "*";
            color: red;
        }
        .memo-focus {
            background-color: #fff9e5;
        }
        .text-center {
            text-align: center;
        }
        .memo-highlight {
            color: #dfba49;
            -moz-animation: blink normal 1s infinite ease-in-out;
            -webkit-animation: blink normal 1s infinite ease-in-out;
            -ms-animation: blink normal 1s infinite ease-in-out;
            animation: blink normal 1s infinite ease-in-out;
        }
        .title {
            font-weight: bold;
            font-size: 15px;
            margin-right: 10px;
        }

        .trade-party-block:not(:last-of-type) {
            margin-top: 15px;
            margin-bottom: 25px;
        }

        .flex-alignitems-center {
            display: flex;
        }
        @@-moz-keyframes blink {
            0% {
                opacity: 1;
            }
            50% {
                opacity: 0.5;
            }
            100% {
                opacity: 1;
            }
        } /* Firefox */
        @@-webkit-keyframes blink {
            0% {
                opacity: 1;
            }
            50% {
                opacity: 0.5;
            }
            100% {
                opacity: 1;
            }
        } /* Webkit */
        @@-ms-keyframes blink {
            0% {
                opacity: 1;
            }
            50% {
                opacity: 0.5;
            }
            100% {
                opacity: 1;
            }
        } /* IE */
        @@keyframes blink {
            0% {
                opacity: 1;
            }
            50% {
                opacity: 0.5;
            }
            100% {
                opacity: 1;
            }
        }
    </style>
}
@section scripts{
    <abp-script src="/Pages/Sales/TradePartner/EditTradePartnerInfo.js" />
    <script>

        var contactIndex = 0;
        function onCreateNewContactPersonInformation() {
            var newRowData = {
                contactIndex: contactIndex
            };

            var newRow = $('#contactPersonInfomationTemplate').tmpl(newRowData);
            $('#contactPersonInformationBody').append(newRow);
            contactIndex += 1;
        }

        function onRemoveContactPerson() {
            $('[name="chk_ContactPerson"]:checked').each(function (i, elem) {
                let nextTr = $(elem).closest('tr').next();
                $(elem).closest('tr').remove();
                if (nextTr.attr('id').includes('trUserMore')) {
                    nextTr.remove();
                }
            });
        }

        var childrenIndex = 0;
        function onCreateNewContactPersonChildren(e, contactIndex) {
            e && e.preventDefault();

            var newRowData = {
                contactIndex: contactIndex,
                childrenIndex: childrenIndex
            };

            var newRow = $('#contactInfoChildrenTemplate').tmpl(newRowData);
            $('#contactInfoChildrenBody_' + contactIndex).append(newRow);
            childrenIndex += 1;
        }

        //function onRemoveContactPersonChildren() {
        //    $('[name="chk_ContactPersonChildren"]:checked').each(function (i, elem) {
        //        let nextTr = $(elem).closest('tr').next();
        //        $(elem).closest('tr').remove();
        //    });
        //}

        function onOpenMoreUserInfo(contactIndex) {
            if ($('#btnOpenMoreUserInfo_' + contactIndex).html() == '+') {
                $('#trUserMoreInfo_' + contactIndex).show();
                $('#btnOpenMoreUserInfo_' + contactIndex).html('-');
            }
            else {
                $('#trUserMoreInfo_' + contactIndex).hide();
                $('#btnOpenMoreUserInfo_' + contactIndex).html('+');
            }
            //$('#trUserMoreInfo_'+contactIndex).toggle('show');
        }
        
        var companyList = [];

        function getCompanies(){
             companyList =  @Html.Raw(Json.Serialize(_dropdownService.TradePartnerLookupList));
         }

        getCompanies();

        // check city, state, post, country, tel and fax
        function getAddressValue() {
            var addSelections = new Array(4);
            addSelections[0] = $("#tpCityCode").val();
            addSelections[1] = $("#tpStateCode").val();
            addSelections[2] = $("#tpPostCode").val();
            addSelections[3] = $("#tpCountryCode option:selected").val();
            var j = 0, result;
            for (let i = 0; i < addSelections.length; i++) {
                if ((addSelections[i] !== 'undefined') && (addSelections[i] != '') && (addSelections[i] != '- 請選擇 -') && (addSelections[i] != '- Select -')) {
                    if (j == 0) {
                        if (i == 3) {
                            result = $("#tpCountryCode option:selected").text();
                        } else {
                            result = addSelections[i];
                        }
                    } else {
                        if (i == 3) {
                            result += "," + $("#tpCountryCode option:selected").text();
                        } else {
                            result += "," + addSelections[i];
                        }
                    }
                    j++;
                }
            }
            if (($("#tpTelephone").val() !== 'undefined') && ($("#tpTelephone").val() != '')) {
                result += "\n" + "TEL:" + $("#tpTelephone").val();
                if (($("#tpFax").val() !== 'undefined') && ($("#tpFax").val() != '')) {
                    result += " " + "FAX:" + $("#tpFax").val();
                }
            } else {
                if (($("#tpFax").val() !== 'undefined') && ($("#tpFax").val() != '')) {
                    result += "\n" + "FAX:" + $("#tpFax").val();
                }
            }
            return result;
        }

        $(document).ready(function () {

            

            onSetTradeParties();

            $("#tpNameInput").on('keyup', function () {
                $("#tpNamePrintInput").val($(this).val());
                $("#tpNameLocalInput").val($(this).val());
                if ($("#checkboxName").is(":checked")) {
                    $("#tpPrintAddress").val($(this).val());
                }
            });


            $("#tpLocalAddress").on('keyup', function () {
                if ($("#checkboxAddress").is(":checked")) {
                    if ($("#tpLocalAddress").val() != '') {
                        if ($("#checkboxName").is(":checked")) {
                            if (($("#tpCityCode").val() == '') && ($("#tpStateCode").val() == '') && ($("#tpPostCode").val() == '')) {
                                $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val());
                            } else {
                                $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val() + "\n" + getAddressValue());
                            }
                        } else {
                            if (typeof (getAddressValue()) == "undefined") {
                                $("#tpPrintAddress").val($("#tpLocalAddress").val());
                            } else {
                                $("#tpPrintAddress").val($("#tpLocalAddress").val() + "\n" + getAddressValue());
                            }
                        }
                    } else {
                        if ($("#checkboxName").is(":checked")) {
                            $("#tpPrintAddress").val($("#tpNameInput").val());
                        } else {
                            $("#tpPrintAddress").val();
                        }
                    }
                }
            });

            $("#tpCityCode").on('keyup', function () {
                if ($("#checkboxAddress").is(":checked")) {
                    if ($("#tpLocalAddress").val() != '') {
                        if ($("#checkboxName").is(":checked")) {
                            $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val() + "\n" + getAddressValue());
                        } else {
                            $("#tpPrintAddress").val($("#tpLocalAddress").val() + "\n" + getAddressValue());
                        }
                    }
                }
            });

            $("#tpStateCode").on('keyup', function () {
                if ($("#checkboxAddress").is(":checked")) {
                    if ($("#tpLocalAddress").val() != '') {
                        if ($("#checkboxName").is(":checked")) {
                            if ($("#checkboxName").is(":checked")) {
                                $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val() + "\n" + getAddressValue());
                            } else {
                                $("#tpPrintAddress").val($("#tpLocalAddress").val() + "\n" + getAddressValue());
                            }
                        }
                    }
                }
            });

            $("#tpPostCode").on('keyup', function () {
                if ($("#checkboxAddress").is(":checked")) {
                    if ($("#tpLocalAddress").val() != '') {
                        if ($("#checkboxName").is(":checked")) {
                            $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val() + "\n" + getAddressValue());
                        } else {
                            $("#tpPrintAddress").val($("#tpLocalAddress").val() + "\n" + getAddressValue());
                        }
                    }
                }
            });

            $("#tpCountryCode").change(function () {
                if ($("#checkboxAddress").is(":checked")) {
                    if ($("#tpLocalAddress").val() != '') {
                        if ($("#checkboxName").is(":checked")) {
                            $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val() + "\n" + getAddressValue());
                        } else {
                            $("#tpPrintAddress").val($("#tpLocalAddress").val() + "\n" + getAddressValue());
                        }
                    }
                }
            });

            $("#tpTelephone").change(function () {
                if ($("#checkboxAddress").is(":checked")) {
                    if ($("#tpLocalAddress").val() != '') {
                        if ($("#checkboxName").is(":checked")) {
                            $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val() + "\n" + getAddressValue());
                        } else {
                            $("#tpPrintAddress").val($("#tpLocalAddress").val() + "\n" + getAddressValue());
                        }
                    }
                }
            });

            $("#tpFax").change(function () {
                if ($("#checkboxAddress").is(":checked")) {
                    if ($("#tpLocalAddress").val() != '') {
                        if ($("#checkboxName").is(":checked")) {
                            $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val() + "\n" + getAddressValue());
                        } else {
                            $("#tpPrintAddress").val($("#tpLocalAddress").val() + "\n" + getAddressValue());
                        }
                    }
                }
            });

            $("#checkboxName").change(function () {
                if (this.checked) {
                    if ($("#checkboxAddress").is(":checked")) {
                        if ($("#tpLocalAddress").val() != '') {
                            if (typeof (getAddressValue()) == "undefined") {
                                $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val());
                            } else {
                                $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val() + "\n" + getAddressValue());
                            }
                        }
                    } else {
                        $("#tpPrintAddress").val($("#tpNameInput").val());
                    }
                } else {
                    if ($("#checkboxAddress").is(":checked")) {
                        if ($("#tpLocalAddress").val() != '') {
                            if (typeof (getAddressValue()) == "undefined") {
                                $("#tpPrintAddress").val($("#tpLocalAddress").val());
                            } else {
                                $("#tpPrintAddress").val($("#tpLocalAddress").val() + "\n" + getAddressValue());
                            }
                        }
                    }
                }
            });

            $("#checkboxAddress").change(function () {
                if (this.checked) {
                    if ($("#checkboxName").is(":checked")) {
                        if ($("#tpLocalAddress").val() != '') {
                            if (typeof (getAddressValue()) == "undefined") {
                                $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val());
                            } else {
                                $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val() + "\n" + getAddressValue());
                            }
                        }
                    } else {
                        if ($("#tpLocalAddress").val() != '') {
                            if (typeof (getAddressValue()) == "undefined") {
                                $("#tpPrintAddress").val($("#tpLocalAddress").val());
                            } else {
                                $("#tpPrintAddress").val($("#tpLocalAddress").val() + "\n" + getAddressValue());
                            }
                        }
                    }
                } else {
                    if ($("#checkboxName").is(":checked")) {
                        $("#tpPrintAddress").val($("#tpNameInput").val());
                    } else {
                        $("#tpPrintAddress").val('');
                    }
                }
            });

            $("#tpCopyFromLocalAddress").click(function () {
                $("#tpAccountAddress").mousemove();
                var originalAccountAddressValue = $("#tpAccountAddress").val();
                if (typeof ("#tpAccountAddress") == 'undefined') {
                    originalAccountAddressValue = '';
                }
                if ($("#tpLocalAddress").val() != '') {
                    if (typeof (getAddressValue()) == "undefined") {
                        $("#tpAccountAddress").val($("#tpLocalAddress").val() + "\n" + originalAccountAddressValue);
                    } else {
                        $("#tpAccountAddress").val($("#tpLocalAddress").val() + "\n" + getAddressValue() + "\n" + originalAccountAddressValue);
                    }
                }
            });

            $("#tpNamePrintInput").on('keyup', function () {
                $("#tpNameLocalInput").val($(this).val())
            });

            $("#taxIdInput").on("change", function () {
                var txt = $('#taxIdInput');
                if (txt.val() != null && txt.val() != '') {
                    $("#trackPaymentInput").removeAttr("disabled");
                } else {
                    $("#trackPaymentInput").attr("disabled", "disabled");
                }
            });

            $("#tpCreditLimitGroupName").on("change", function () {
                var txt = $('#tpCreditLimitGroupName');
                if (txt.val() != "- Select -") {
                    $("#tpCreditTermType").attr("disabled", "disabled");
                    $("#tpCreditTermDays").attr("disabled", "disabled");
                    $("#tpCreditLimit").attr("disabled", "disabled");
                    $("#tpPaymentType").attr("disabled", "disabled");
                } else {
                    $("#tpCreditTermType").removeAttr("disabled");
                    $("#tpCreditTermDays").removeAttr("disabled");
                    $("#tpCreditLimit").removeAttr("disabled");
                    $("#tpPaymentType").removeAttr("disabled");

                }
            });

            $("input[name='printAdd']").click(function () {
                if ($("#radioAlternate").is(":checked")) {
                    $("#tpPrintAddress").val('');
                    $("#tpPrintAddress").removeAttr("readonly");
                    $("#checkboxName").attr("disabled", "disabled");
                    $("#checkboxAddress").attr("disabled", "disabled");
                    $("#checkboxContactInfo").attr("disabled", "disabled");
                } else {
                    $("#tpPrintAddress").attr("readonly", "readonly");
                    if ($("#tpLocalAddress").val() != '') {
                        if (getAddressValue() == "undefined") {
                            $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val());
                        } else {
                            $("#tpPrintAddress").val($("#tpNameInput").val() + "\n" + $("#tpLocalAddress").val() + "\n" + getAddressValue());
                        }
                    } else {
                        $("#tpPrintAddress").val($("#tpNameInput").val());
                    }
                    $("#checkboxName").removeAttr("disabled");
                    $("#checkboxAddress").removeAttr("disabled");
                    $("#checkboxContactInfo").removeAttr("disabled");
                }
            });

            $('#TPEditForm').on('abp-ajax-success', function () {
                event.preventDefault();
                abp.message.success('Successfully saved.');
            });
        });
    </script>

    <script>
         var l = abp.localization.getResource('Freight');
         
         

        var chkIndex = $('.trade-party-block').find('tbody tr').length;
        function onAddTradeParty(tradeParty) {
            debugger;
            chkIndex = $('.trade-party-block').find('tbody tr').length;
            if(chkIndex < 0)
                chkIndex = 0;
            var newRowData = {
                chkIndex: chkIndex,
                tradeParty: tradeParty
            };

            var newRow = $('#tradePartyTemplate').tmpl(newRowData);

            $('#tradePartyBody_' + tradeParty).append(newRow);
            getDDLCompanyName(chkIndex);

            resetTradePartyIndex();

            chkIndex += 1;
        }

        var companyNames = [];
        function getDDLCompanyName(chkIndex, selectedId) {
            debugger;
            if(companyList){
                bindCompanyDropdown(companyList, selectedId, chkIndex);
            }
            else{
                dolphin.freight.tradePartners.tradePartner.getTradePartnersLookup({}).done(function (result) {
                    bindCompanyDropdown(result, selectedId, chkIndex);
                });
            }
        }

        function bindCompanyDropdown(result, selectedId, chkIndex){
            debugger;
            if (result.length > 0) {
                companyNames = result;
                
                var selectHtml = "<select id='companyName_" + chkIndex + "' onchange='getCompanyDetails(" + chkIndex + ")' name='TradeParties[" + chkIndex + "].TargetTradePartnerId' class='form-control select-search' ><option></option>";
                for (var i = 0; i < companyNames.length; i++) {
                    let id = companyNames[i].value;
                    let name = companyNames[i].text.split('/')[0].replace('\t', '');

                    var selected = (id == selectedId) ? "selected" : "";
                    selectHtml = selectHtml + "<option " + selected + " value='" + id + "' ";
                    selectHtml = selectHtml + ">" + name + "</option>"
                }
                selectHtml = selectHtml + "</select>";
                $('#ddlCompanyName_' + chkIndex).append(selectHtml).find('.select-search').select2({
                    placeholder: l("Dropdown:Select"),
                    allowClear: true,
                });

                if (selectedId) {
                    $('#tPAddressDiv_' + chkIndex).show();
                }
            }
        }

        function getCompanyDetails(index) {


            dolphin.freight.tradePartners.tradePartner.getList({}).done(function (res) {
                var countryRes = res.items.find(f => f.id == $('#companyName_' + index).val());
                if (countryRes) {
                    var address = countryRes.tpPrintAddress;
                    var city = countryRes.cityCode;
                    var state = countryRes.stateCode;
                    var postCode = countryRes.postCode;
                    var fax = countryRes.fax;
                    var telephone = countryRes.telephone;
                    var countryCode = countryRes.countryCode;

                    if (address != null) {
                        address = address.trimStart();
                        $('#tpAddress_' + index).val(address);
                    } else {
                        $('#tpAddress_' + index).val('');
                    }
                    if (city != null) {
                        $('#tpCity_' + index).val(city);
                    } else {
                        $('#tpCity_' + index).val('');
                    }
                    if (state != null) {
                        $('#tpState_' + index).val(state);
                    } else {
                        $('#tpState_' + index).val('');
                    }
                    if (postCode != null) {
                        $('#tpZIP_' + index).val(postCode);
                    } else {
                        $('#tpZIP_' + index).val('');
                    }
                    if (fax != null) {
                        $('#tpFax_' + index).val(fax);
                    } else {
                        $('#tpFax_' + index).val('');
                    }
                    if (fax != null) {
                        $('#tpTelephone_' + index).val(telephone);
                    } else {
                        $('#tpTelephone_' + index).val('');
                    }

                    getCountryDDL(countryCode, index);


                    $('#tPAddressDiv_' + index).show();
                }
                else {
                    $('#tPAddressDiv_' + index).find('input').each(function (i, e) { $(e).resetForm() });
                    $('#country_' + index).val(null).trigger('change');
                    $('#tPAddressDiv_' + index).hide();
                }
            });
        }

        function updateCheckboxValues(checkboxes) {
            checkboxes.each(function () {
                var checkboxId = $(this).attr("id");
                var isChecked = $(this).prop("checked");
                console.log(checkboxId);
                $("#" + checkboxId).val(isChecked ? 'true' : 'false');
            });
        }

        function getCountryDDL(countryCode, index) {
            dolphin.freight.settings.countries.country.getCountryLookup({}).done(function (countryRes) {

                var selectedCountry = countryRes.items.find(f => f.id == countryCode);
                var selectHtml = "<select id='country_" + index + "' onchange='getCompanyDetails(" + index + ")' name='TradeParties[" + index + "].TradePartyListDto.Country' class='form-control select-search' ><option></option>";

                for (var i = 0; i < countryRes.items.length; i++) {
                    var selected = (countryRes.items[i].id == countryCode) ? "selected" : "";
                    selectHtml = selectHtml + "<option " + selected + " value='" + countryRes.items[i].id + "' ";
                    selectHtml = selectHtml + ">" + countryRes.items[i].countryName + "</option>"
                }
                selectHtml = selectHtml + "</select>";
                $('#country_' + index).remove()
                $('#divCountry_' + index).append(selectHtml).find('.select-search').select2({
                    placeholder: l("Dropdown:Select"),
                    allowClear: true,
                });
            });
        }

        function resetTradePartyIndex() {
            var changed = '';
            $('.trade-party-block').find('tbody tr').each(function (e, elem) {
                $(elem).find('td').each(function (a, aelem) {
                    var inputs = $(aelem).find('input');

                    if(inputs && inputs.length){
                        if(inputs.length > 1){
                            inputs.each(function(i, inputElem){
                                changed = $(inputElem).attr('name').replace(/\d+/, e);
                                $(inputElem).attr('name', changed);
                            })
                            var select = $(aelem).find('select');
                            select.length && select.attr('name', select.attr('name').replace(/\d+/, e));
                        }
                        else{
                            changed = inputs.attr('name').replace(/\d+/, e);
                            inputs.attr('name', changed);
                        }
                    }
                    else{
                        inputs = $(aelem).find('select');
                        if(inputs && inputs.length){
                            inputs.attr('name', inputs.attr('name').replace(/\d+/, e));
                            parentTd = inputs.closest('td');
                            parentTd.attr('id', parentTd.attr('id').replace(/\d+/, e));
                        }
                    }
                    
                })
            })
        }
        
        function resetTradePartiesCount(){
            var url = new URL(window.location.href);
            var id = url.searchParams.get('id');
            if (checkGuid(id)){
                dolphin.freight.tradePartners.tradeParties.tradeParty.getListByTradePartnerId(id).then(function (res) {
                    if (res) {
                        chkIndex = res.length;
                    }
                });
            }
        }

        function onSetTradeParties() {
            var tradePartiesJSON = '@Html.Raw(Json.Serialize(Model.TradeParties))';

            if (tradePartiesJSON) {
                var tradeParties = JSON.parse(tradePartiesJSON);
                var tradeIndex = 0;
                tradeParties.forEach(function(tradeParty){
                    var extraProperties = tradeParty.extraProperties;
                    var tradePartyTemplateData = { 'IsDefault': tradeParty.isDefault, 'TradePartyDescription': tradeParty.tradePartyDescription, 'tradeParty':                                                      tradeParty.tradePartyType};
                        tradePartyTemplateData.DefaultValue = tradeParty.isDefault? "checked": "";
                    if (extraProperties && extraProperties != 'null' && extraProperties.TradePartyList) {
                        var tradePartyInfo = extraProperties.TradePartyList;

                        tradePartyTemplateData.Address = tradePartyInfo.Address;
                        tradePartyTemplateData.City = tradePartyInfo.City;
                        tradePartyTemplateData.State = tradePartyInfo.State;
                        tradePartyTemplateData.Country = tradePartyInfo.Country;
                        tradePartyTemplateData.ZipCode = tradePartyInfo.ZipCode;
                        tradePartyTemplateData.IsRep = tradePartyInfo.IsRep;
                        tradePartyTemplateData.Contact = tradePartyInfo.Contact;
                        tradePartyTemplateData.Tel = tradePartyInfo.Tel;
                        tradePartyTemplateData.Fax = tradePartyInfo.Fax;
                        tradePartyTemplateData.Email = tradePartyInfo.Email;
                        tradePartyTemplateData.chkIndex = tradeIndex;
                        tradePartyTemplateData.RepValue = tradePartyInfo.IsRep? "checked": "";
                        tradePartyTemplateData.Id = tradeParty.id;
                        

                        var newRow = $('#tradePartyTemplate').tmpl(tradePartyTemplateData);
                        $('#tradePartyBody_' + tradeParty.tradePartyType).append(newRow);

                        getDDLCompanyName(tradeIndex, tradeParty.targetTradePartnerId);

                        if(tradePartyInfo.Country){
                            getCountryDDL(tradePartyInfo.Country, tradeIndex);
                        }

                        tradeIndex += 1;
                    }
                })
            }
            resetTradePartiesCount();
        }

        function onRemoveTradePartner(index) {
            $('[id="chk_TradeParty_'+ index +'"]:checked').each(function (i, elem) {
                $(elem).closest('tr').remove();
            });

           $('#BtnChkAllChange_'+index).prop('checked','');

            resetTradePartyIndex();
        }

        function onChkAllChange(e, partyType) {
            var elem = e.currentTarget || e.srcElement || e.target;
            var checked = $(elem).prop('checked') ? "checked" : "";

            if (checked) {
                $('#tradePartyBody_' + partyType).find('[name="chk_TradeParty"]').prop('checked', 'checked');
            }
            else {
                $('#tradePartyBody_' + partyType).find('[name="chk_TradeParty"]').prop('checked', '');
            }
        }

        function onChkAllChange(e, partyType) {
            var elem = e.currentTarget || e.srcElement || e.target;
            var checked = $(elem).prop('checked') ? "checked" : "";

            if (checked) {
                $('#tradePartyBody_' + partyType).find('[name="chk_TradeParty"]').prop('checked', 'checked');
            }
            else {
                $('#tradePartyBody_' + partyType).find('[name="chk_TradeParty"]').prop('checked', '');
            }
        }

    </script>

    <script id="tradePartyTemplate" type="text/x-jQuery-tmpl">
        <tr>
          <td>
              <input type="checkbox" name="chk_TradeParty" id="chk_TradeParty_${tradeParty}" />
          </td>
          <td><input type="checkbox" name="TradeParties[${chkIndex}].IsDefault" id="IsDefault_${chkIndex}" ${DefaultValue} /></td>
          <td><input type="text" name="TradeParties[${chkIndex}].TradePartyDescription" value="${TradePartyDescription}" /></td>
        @*<td><input type="text" name="TradeParties[${chkIndex}].TradePartyListDto.CompanyName" /></td>*@
          <td id="ddlCompanyName_${chkIndex}" style="min-width:166px; padding:inherit"></td>
          <td class="form-group">
            <div id="tPAddressDiv_${chkIndex}" style="display: none;">
                <input type="text" class="w-100" id='tpAddress_${chkIndex}' name="TradeParties[${chkIndex}].TradePartyListDto.Address" value="${Address}" placeholder="Address">
                <div class="flex-alignitems-center">
                    <input type="text" placeholder="City" id='tpCity_${chkIndex}' name="TradeParties[${chkIndex}].TradePartyListDto.City" value="${City}">
                    <input type="text" placeholder="State" id='tpState_${chkIndex}' name="TradeParties[${chkIndex}].TradePartyListDto.State" value="${State}" ><br>
                </div>
                <div id="divCountry_${chkIndex}" class="flex-alignitems-center">
                    <input type="text" placeholder="Zip Code" id='tpZIP_${chkIndex}' name="TradeParties[${chkIndex}].TradePartyListDto.ZipCode" value="${ZipCode}" >
        @*<select class="w-100" id='tpCountry_${chkIndex}' name="TradeParties[${chkIndex}].TradePartyListDto.Country">
                    {{ getCountryDDL() }}
                </select>*@
                </div>
            </div>
          </td>
          <td><input type="checkbox" name="TradeParties[${chkIndex}].TradePartyListDto.IsRep" id="IsRep_${chkIndex}" ${RepValue} /></td>
          <td><input type="text" name="TradeParties[${chkIndex}].TradePartyListDto.Contact" value="${Contact}"  /></td>
          <td><input type="text" id='tpTelephone_${chkIndex}' name="TradeParties[${chkIndex}].TradePartyListDto.Tel" value="${Tel}" /></td>
          <td><input type="text" id='tpFax_${chkIndex}' name="TradeParties[${chkIndex}].TradePartyListDto.Fax" value="${Fax}"  /></td>
          <td><input type="text" name="TradeParties[${chkIndex}].TradePartyListDto.Email" value="${Email}" /></td>
          <td class="d-none"><input type="hidden" name="TradeParties[${chkIndex}].TradePartyType" value="${tradeParty}"/></td>
          <td class="d-none"><input type="hidden" name="TradeParties[${chkIndex}].Id" value="${Id}"/></td>
        </tr>
    </script>

    <script id="contactPersonInfomationTemplate" type="text/x-jQuery-tmpl">
        <tr>
            <td>
                <div class="checker"><span><input type="checkbox" name="chk_ContactPerson"></span></div>
            </td>
            <td>
                <div class="checker"><span><input type="checkbox" name="ContactPersonModel[${contactIndex}].IsRep" value="true"></span></div>
            </td>
            <td>
                <div class="checker"><span class="checked"><input type="checkbox" name="ContactPersonModel[${contactIndex}].IsEmailNotification" value="true"></span></div>
            </td>
            <td>
                <div class="form-group" show-errors="">
                    <input type="text" name="ContactPersonModel[${contactIndex}].ContactName">
                </div>
            </td>
            <td>
                <a href="javascript:void(0)" id="btnOpenMoreUserInfo_${contactIndex}" onclick="onOpenMoreUserInfo(${contactIndex})" style="cursor:pointer">+</a>
            </td>
            <td>
                <input type="text" name="ContactPersonModel[${contactIndex}].ContactTitle">
            </td>
            <td>
                <input type="text" name="ContactPersonModel[${contactIndex}].ContactDivision">
            </td>
            <td>
                <input type="text" name="ContactPersonModel[${contactIndex}].ContactCellPhone">
            </td>
            <td>
                <input type="text" name="ContactPersonModel[${contactIndex}].ContactPhone">
            </td>
            <td>
                <input type="text" name="ContactPersonModel[${contactIndex}].ContactFax">
            </td>
            <td>
                <input type="text" name="ContactPersonModel[${contactIndex}].ContactEmailAddress">
            </td>
            <td>
                <input type="text" name="ContactPersonModel[${contactIndex}].ContactRemark">
            </td>
        </tr>
        <tr id="trUserMoreInfo_${contactIndex}" style="display:none">
            <td colspan="3"></td>
            <td colspan="9">
                <table>
                    <colgroup>
                        <col class="td-50per">
                        <col class="td-50per">
                    </colgroup>
                    <tbody><tr>
                        <td class="_valign-top">
                            <table class="table">
                                <colgroup>
                                    <col class="w-50">
                                    <col class="w-50">
                                </colgroup>
                                <tbody><tr>
                                    <td>
                                        <div class="form-group form-sm">
                                            <label class="name-sm control-label ng-binding">Gender</label>
                                            <label class="radio-inline ng-binding">
                                                <span><input type="radio" name="ContactPersonModel[${contactIndex}].ContactGender" value="1"></span>Male
                                            </label>
                                            <label class="radio-inline ng-binding">
                                                <span><input type="radio" name="ContactPersonModel[${contactIndex}].ContactGender" value="2"></span>Female
                                            </label>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group form-sm">
                                            <label>Age</label>
                                            <input type="text" name="ContactPersonModel[${contactIndex}].ContactAge">
                                        </div>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <div class="form-group form-sm">
                                            <label>Marriage</label>
                                            <label>
                                                <span><input type="radio" name="ContactPersonModel[${contactIndex}].ContactMarriage" value="1"></span>Yes
                                            </label>
                                            <label class="radio-inline ng-binding">
                                                <span><input type="radio" name="ContactPersonModel[${contactIndex}].ContactMarriage" value="2"></span>No
                                            </label>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group form-sm">
                                            <label>Birthday</label>
                                            <input type="date" name="ContactPersonModel[${contactIndex}].ContactBirthday">
                                            <span class="input-group-addon right">
                                                <i class="fa fa-calendar"></i>
                                            </span>
                                        </div>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <div class="form-group form-sm">
                                            <label>Smoking</label>
                                            <label>
                                                <span><input type="radio" name="ContactPersonModel[${contactIndex}].ContactSmokes" value="1"></span>Yes
                                            </label>
                                            <label>
                                                <span><input type="radio" name="ContactPersonModel[${contactIndex}].ContactSmokes" value="2"></span>No
                                            </label>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group form-sm">
                                            <label>Clothing</label>
                                            <input type="text">
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <div class="form-group form-sm">
                                            <label>Drink</label>
                                            <label>
                                                <span><input type="radio" name="ContactPersonModel[${contactIndex}].ContactDrink" value="1"></span>Yes
                                            </label>
                                            <label>
                                                <span><input type="radio" name="ContactPersonModel[${contactIndex}].ContactDrink" value="2"></span>No
                                            </label>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group form-sm">
                                            <label>Hobby</label>
                                            <input type="text" name="ContactPersonModel[${contactIndex}].ContactHobby">
                                        </div>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <div class="form-group form-sm">
                                            <label>Constellation</label>
                                            <select name="ContactPersonModel[${contactIndex}].ContactConstellation">
                                                <option selected="selected"></option>
                                                <option label="Aries" value="1">Aries</option>
                                                <option label="Taurus" value="2">Taurus</option>
                                                <option label="Gemini" value="3">Gemini</option>
                                                <option label="Cancer" value="4">Cancer</option>
                                                <option label="Leo" value="5">Leo</option>
                                                <option label="Virgo" value="6">Virgo</option>
                                                <option label="Libra" value="7">Libra</option>
                                                <option label="Scorpio" value="8">Scorpio</option>
                                                <option label="Sagittarius" value="9">Sagittarius</option>
                                                <option label="Capricorn" value="10">Capricorn</option>
                                                <option label="Aquarius" value="11">Aquarius</option>
                                                <option label="Pisces" value="12">Pisces</option>
                                            </select>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group form-sm">
                                            <label>Interest</label>
                                            <input type="text" name="ContactPersonModel[${contactIndex}].ContactInterest">
                                        </div>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <div class="form-group form-sm">
                                            <label>Anniversary</label>
                                            <input type="date" name="ContactPersonModel[${contactIndex}].ContactMemorialDay">
                                            <span class="input-group-addon right">
                                                <i class="fa fa-calendar"></i>
                                            </span>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                            </table>
                        </td>
                        <td class="table-responsive">
                            <table>
                                <tbody><tr>
                                    <td>
                                        <div>
                                            <label>
                                                Home Address
                                            </label>
                                            <div>
                                                <input type="text" name="ContactPersonModel[${contactIndex}].ContactAddress">
                                                <input type="text" name="ContactPersonModel[${contactIndex}].ContactCityCode">
                                                <input type="text" name="ContactPersonModel[${contactIndex}].ContactStateCode"><br>
                                                <input type="text" name="ContactPersonModel[${contactIndex}].ContactPostCode">
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <div class="form-group form-full _mg-top-sm">
                                            <div>
                                                Children
                                            </div>
                                            <div class="inline-block td-83per">
                                                <div class="btn-group _mg-bottom-xs">
                                                    <button class="btn btn-xs green" onclick="onCreateNewContactPersonChildren(event, ${contactIndex})">
                                                        <i class="fa fa-plus"></i>
                                                    </button>
                                                    @*<button class="btn btn-xs green" onclick="onRemoveContactPersonChildren(event, ${contactIndex})">
                                                        <i class="fas fa-trash"></i>
                                                    </button>*@
                                                </div>
                                                <table class="table">
                                                    <colgroup>
                                                        <col class="td-5per">
                                                        <col class="td-22per">
                                                        <col class="td-9per">
                                                        <col class="td-25per">
                                                        <col class="td-39per">
                                                    </colgroup>
                                                    <thead>
                                                         <tr>
                                                            <th class="col-checkbox text-center">
                                                                <div class="checker"><span><input id="chkAllChildren_${contactIndex}" type="checkbox"></span></div>
                                                            </th>
                                                            <th>Name</th>
                                                            <th>Age</th>
                                                            <th>School</th>
                                                            <th>Remark</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="contactInfoChildrenBody_${contactIndex}">
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </td>
                                </tr>

                            </tbody>
                            </table>
                        </td>
                    </tr>
                </tbody>
                </table>
            </td>
        </tr>
    </script>

    <script id="contactInfoChildrenTemplate" type="text/x-jquery-tmpl">
        <tr>
            <td class="col-checkbox text-center">
                <div class="checker"><span><input id="chkChildren_${contactIndex}_${childrenIndex}" name="chk_ContactPersonChildren" type="checkbox"></span></div>
            </td>
            <td>
                <input type="text" name="ContactPersonChildren[${childrenIndex}].Name">
            </td>
            <td>
                <input type="text" name="ContactPersonChildren[${childrenIndex}].Age">
            </td>
            <td>
                <input type="text" name="ContactPersonChildren[${childrenIndex}].School">
            </td>
            <td>
                <input type="text" name="ContactPersonChildren[${childrenIndex}].Remark">
            </td>
        </tr>
    </script>
}
<div class="page-header">
    <abp-breadcrumb>
        <abp-breadcrumb-item href="#" title=@L["Menu:Home"] />
        <abp-breadcrumb-item title=@L["Menu:TradePartner"] />
        <abp-breadcrumb-item title=@L["Menu:TradePartner"]@Model.TPInfoModel.TPCode />
    </abp-breadcrumb>
        <nav class="submenu">
        <ol>
            <li class="menu-item">
                <a class="nav-link active" id="nav-basic-tab" href="#">@L["Display:TradePartner:NavTab:Basic"]</a>
            </li>
            <li class="menu-item">
                <a class="nav-link disabled" id="nav-accounting-tab" href="#">@L["Display:TradePartner:NavTab:AccountingSetting"]</a>
            </li>
            <li class="menu-item">
                <a class="nav-link active" id="nav-doc-tab" href="/Sales/TradePartner/DocCenter/@Model.Id">@L["Display:TradePartner:NavTab:DocCenter"]</a>
            </li>
            <li class="menu-item">
                <a class="nav-link disabled" id="nav-status-tab" href="#">@L["Display:TradePartner:NavTab:Status"]</a>
            </li>
        </ol>
        </nav>
        </div>
        <div class="page-content-area">
    <div class="board-wrap">
    <form abp-model="TPInfoModel" submit-button="true" data-ajaxForm="true" id="TPEditForm">
    
        <abp-card>
            <abp-card-header>
                <abp-row>
                    <abp-column style="width: 1100px;">
                        <abp-card-title>@L["Display:TradePartner:CardTitle:TradePartnerInformation"] / @Model.TPInfoModel.TPCode</abp-card-title>
                    </abp-column>
                    <abp-column size-md="_6" class="text-end">
                        @*<abp-button id="AddTradePartnerButton"
                    text="Copy"
                    icon="gear"
                    button-type="Outline_Secondary" />*@
                    </abp-column>
                </abp-row>
            </abp-card-header>
            <abp-card-body>
                <abp-input asp-for="TPInfoModel.Id" id="tpId" type="hidden" />
                <abp-row>
                    <abp-column>
                        <label asp-for="TPInfoModel.TPType" class="redStar form-label">@L["DisplayName:TPType"]</label>
                        <select asp-for="TPInfoModel.TPType" id="tpType" asp-items="Html.GetEnumSelectList(typeof(TPType))" class="form-select form-control">
                            <option value='' selected> @L["Display:Dropdownlist:Option:Select"] </option>
                        </select>
                        <span asp-validation-for="TPInfoModel.TPType" class="text-danger"></span>
                        @*<abp-select asp-for="TPInfoModel.TPType" id="tpType" />*@
                    </abp-column>
                    <abp-column>
                        <abp-input asp-for="TPInfoModel.TPCode" readonly="true" />
                    </abp-column>
                    <abp-column>
                        <abp-input asp-for="TPInfoModel.TPAliasName" />
                    </abp-column>
                    <abp-column>
                        <abp-select asp-for="TPInfoModel.AccountGroupId" id="tpAccountGroupName">
                            <option value='' selected> @L["Display:Dropdownlist:Option:Select"] </option>
                        </abp-select>
                    </abp-column>
                </abp-row>
                <abp-row>
                    <abp-column>
                        <label asp-for="TPInfoModel.TPName" class="redStar form-label">@L["DisplayName:TPName"]</label>
                        <input asp-for="TPInfoModel.TPName" class="form-control" id="tpNameInput" style="text-transform:uppercase" />
                        <span asp-validation-for="TPInfoModel.TPName" class="text-danger"></span>
                        @*<abp-input asp-for="TPInfoModel.TPName" id="tpNameInput" style="text-transform:uppercase" />*@
                    </abp-column>
                    <abp-column>
                        <label asp-for="TPInfoModel.TPNamePrint" class="redStar form-label">@L["DisplayName:TPNamePrint"]</label>
                        <input asp-for="TPInfoModel.TPNamePrint" class="form-control" id="tpNamePrintInput" style="text-transform:uppercase" />
                        <span asp-validation-for="TPInfoModel.TPNamePrint" class="text-danger"></span>
                        @*<abp-input asp-for="TPInfoModel.TPNamePrint" id="tpNamePrintInput" style="text-transform:uppercase" />*@
                    </abp-column>
                    <abp-column>
                        <abp-input asp-for="TPInfoModel.Ceo" />
                    </abp-column>
                    <abp-column>
                        <abp-select asp-for="TPInfoModel.CreditLimitGroupId" id="tpCreditLimitGroupName">
                            <option value='' selected> @L["Display:Dropdownlist:Option:Select"] </option>
                        </abp-select>
                    </abp-column>
                </abp-row>
                <abp-row>
                    <abp-column>
                        <label asp-for="TPInfoModel.TPNameLocal">@L["DisplayName:TPNameLocal"]</label>
                        <input asp-for="TPInfoModel.TPNameLocal" class="form-control" id="tpNameLocalInput" style="text-transform:uppercase" />
                        @*<abp-input asp-for="TPInfoModel.TPNameLocal" id="tpNameLocalInput" style="text-transform:uppercase" />*@
                    </abp-column>
                    <abp-column>
                    </abp-column>
                    <abp-column>
                        <abp-input asp-for="TPInfoModel.IataCode" />
                    </abp-column>
                    <abp-column>
                        <abp-input asp-for="TPInfoModel.CorpNo" />
                    </abp-column>
                </abp-row>
                <abp-row>
                    <abp-column size="_6">
                        <abp-input asp-for="TPInfoModel.TPLocalAddress" rows="5" id="tpLocalAddress" />
                    </abp-column>
                    <abp-column>
                        <abp-input asp-for="TPInfoModel.IataPrefix" />
                        <abp-input asp-for="TPInfoModel.ScacCode" />
                    </abp-column>
                    <abp-column>
                        <abp-input asp-for="TPInfoModel.CbsaCode" />
                        <abp-input asp-for="TPInfoModel.FirmsCode" />
                    </abp-column>
                </abp-row>
                <abp-row>
                    <abp-column>
                        <abp-input asp-for="TPInfoModel.CityCode" id="tpCityCode" />
                    </abp-column>
                    <abp-column>
                        <abp-input asp-for="TPInfoModel.StateCode" id="tpStateCode" />
                    </abp-column>
                    <abp-column>
                        <abp-input asp-for="TPInfoModel.DutyPaymentType" />
                    </abp-column>
                    <abp-column>
                        <abp-input asp-for="TPInfoModel.OpenHours" />
                    </abp-column>
                </abp-row>
                <abp-row>
                    <abp-column>
                        <abp-input asp-for="TPInfoModel.PostCode" id="tpPostCode" />
                    </abp-column>
                    <abp-column>
                        <label asp-for="TPInfoModel.CountryCode" class="redStar form-label"></label>
                        <span asp-validation-for="TPInfoModel.CountryCode" class="text-danger"></span>
                        @*<abp-select asp-for="TPInfoModel.CountryCode" id="tpCountryCode">*@
                        <select asp-for="TPInfoModel.CountryCode" id="tpCountryCode" class="form-select form-control">
                            <option value='' selected> @L["Display:Dropdownlist:Option:Select"] </option>
                        @foreach (var country in Model.CountryLookupList)
                        {
                            <option value=@country.Value>@country.Text</option>
                        }
                    </select>
                </abp-column>
                <abp-column>
                    <abp-select asp-for="TPInfoModel.BussinessStatusType" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.SalesOfficeCode" />
                </abp-column>
            </abp-row>
            <abp-row>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.Telephone" id="tpTelephone" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.Fax" id="tpFax" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.SalesCode" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.CsCode" />
                </abp-column>
            </abp-row>
            <abp-row>
                <abp-column size="_6">
                    <abp-input asp-for="TPInfoModel.Website" />
                </abp-column>
                <abp-column>
                </abp-column>
            </abp-row>
            <abp-row>
                <abp-column size="_6">
                    @*<label class="form-label">@L["DisplayName:TPPrintAddress"]</label>*@
                    <abp-input asp-for="TPInfoModel.TPPrintAddress" rows="5" id="tpPrintAddress" readonly="true" />
                    <input type="radio" id="radioDefault" name="printAdd" value="default" checked="checked">
                    <label for="radioDefault">Default</label>
                    &nbsp;&nbsp;
                    <input type="radio" id="radioAlternate" name="printAdd" value="alternate">
                    <label for="radioAlternate">Alternate</label>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <input type="checkbox" id="checkboxName" name="checkboxName" checked>
                    <label for="checkboxName">Name</label>
                    &nbsp;&nbsp;
                    <input type="checkbox" id="checkboxAddress" name="checkboxAddress" checked>
                    <label for="checkboxAddress">Address</label>
                    &nbsp;&nbsp;
                    <input type="checkbox" id="checkboxContactInfo" name="checkboxContactInfo" checked>
                    <label for="checkboxContactInfo">Contact Info</label>
                    @*<textarea asp-for="TPInfoModel.TPPrintAddress" disabled="true" class="form-control" rows="5" id="tpPrintAddress"></textarea>*@
                    @*<abp-input asp-for="TPInfoModel.TPPrintAddress" disabled = "true"/>*@
                    <br /><br />
                </abp-column>
                <abp-column size="_6">
                    <abp-input asp-for="TPInfoModel.Remark" rows="5" />
                </abp-column>
            </abp-row>
            <h4>@L["Display:TradePartner:H4:AccountingSetting"]</h4>
            <hr />
            <abp-row>
                <abp-column size="_6">
                    <abp-input asp-for="TPInfoModel.AccountAddress" id="tpAccountAddress" row="5" />
                    <a abp-button="Primary" href="#" size="Small" id="tpCopyFromLocalAddress">@L["Display:Button:CopyFromLocalAddress"]</a>
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.TaxId" id="taxIdInput" />
                    <abp-input asp-for="TPInfoModel.TrackPayment" id="trackPaymentInput" disabled="true" />
                </abp-column>
                <abp-column>
                    <abp-select asp-for="TPInfoModel.PaymentType" id="tpPaymentType" />
                    <abp-row>
                        <abp-column>
                            <abp-input asp-for="TPInfoModel.BillToAgentCode" />
                        </abp-column>
                        <abp-column>
                            <abp-input asp-for="TPInfoModel.Clm" />
                        </abp-column>
                    </abp-row>
                </abp-column>
            </abp-row>
            <abp-row>
                <abp-column>
                    <abp-select asp-for="TPInfoModel.CreditTermType" id="tpCreditTermType" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.CreditTermDays" id="tpCreditTermDays" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.CreditLimit" id="tpCreditLimit" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.AccountName" />
                </abp-column>
            </abp-row>
            <abp-row>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.BankName" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.AccountNo" />
                </abp-column>
                <abp-column>
                    <abp-select asp-for="TPInfoModel.AccountCurrencyCode" id="AccountCurrencyCode">
                        <option value='' selected> @L["Display:Dropdownlist:Option:Select"] </option>
                    </abp-select>
                </abp-column>
                <abp-column>

                </abp-column>
            </abp-row>
            <abp-row>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.BankName2" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.AccountNo2" />
                </abp-column>
                <abp-column>
                    <abp-select asp-for="TPInfoModel.AccountCurrencyCode2" id="AccountCurrencyCode2">
                        <option value='' selected> @L["Display:Dropdownlist:Option:Select"] </option>
                    </abp-select>
                </abp-column>
                <abp-column>

                </abp-column>
            </abp-row>
            <h4>@L["Display:TradePartner:H4:ISFSetting"]</h4>
            <hr />
            <abp-row>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.IsfSubmissionName" />
                </abp-column>
                <abp-column>
                    <abp-select asp-for="TPInfoModel.ImporterCodeType" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.ImporterNo" />
                </abp-column>
                <abp-column>
                    <br />
                    <abp-button button-type="Primary" disabled="true"> Check Bond Status </abp-button>
                </abp-column>
            </abp-row>
            <h4>@L["Display:TradePartner:H4:OtherSetting"]</h4>
            <hr />
            <abp-row>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.IsActive" />
                </abp-column>
                <abp-column>

                </abp-column>
                <abp-column>

                </abp-column>
                <abp-column>

                </abp-column>
            </abp-row>
            <h4>@L["Display:TradePartner:H4:Pop-upTips"]</h4>
            <hr />
            <abp-row>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.DoorToDoor" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.BadCustomer" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.ImportOnly" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.ExportOnly" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.CoLoader" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.CustomClear" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.Warehouse" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.ISFCharges" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.FreeHandCargo" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.Nomination" />
                </abp-column>
                <abp-column>
                    <abp-input asp-for="TPInfoModel.SeeMemoRemark" />
                </abp-column>
            </abp-row>
                    <div id="ejo" style="position: fixed; bottom: 55px; left: 0; right: 0; text-align:center;">
                        <abp-button class="btn btn-primary me-md-2" type="submit" id="saveBtn">@L["Save"]</abp-button>
                    </div>
        </abp-card-body>
    </abp-card>
    <br /><br />
    <abp-accordion>
        <abp-accordion-item title=@L["Display:TradePartner:AccordionItem:Memo"] active=@Model.HasHighlight>
            <abp-card>
                <abp-card-body>
                    <abp-row>
                        <abp-column>
                            <abp-button id="add-memo"
                                        text=@L["Display:Button:New"]
                                        icon="plus"
                                        button-type="Outline_Secondary" />
                        </abp-column>
                    </abp-row>
                    <abp-row>
                        <abp-column>
                            <abp-table class="nowrap" border-style="Bordered" id="memo-table"></abp-table>
                        </abp-column>
                        <abp-column size="_4">
                            <textarea rows="7" class="form-control" readonly id="memo-content"></textarea>
                        </abp-column>
                    </abp-row>
                </abp-card-body>
            </abp-card>
        </abp-accordion-item>
    </abp-accordion>
    <br /><br />
    <abp-accordion>
        <abp-accordion-item title="@L["Display:TradePartner:AccordionItem:ContactPersonInformation"]">
            <abp-card>
                <abp-card-body class="table-responsive">
                    <abp-row>
                        <abp-column>
                            <abp-button id="AddContactPersonButton"
                                        text=@L["Display:Button:New"]
                                        icon="plus"
                                        onclick="onCreateNewContactPersonInformation()"
                                        button-type="Outline_Secondary" />

                            <abp-button class="btn btn-outline-danger me-md-2"
                                        type="button"
                                        id="deleteContactPersonBtn"
                                        onclick="onRemoveContactPerson()">delete
                            </abp-button>
                        </abp-column>
                    </abp-row>
                    <table class="table">
                        <colgroup>
                            <col class="td-3per"><!--Checkbox-->
                            <col class="td-3per"><!--Rep.-->
                            <col class="td-3per"><!--Email-->
                            <col class="td-12per"><!--Name-->
                            <col class="td-3per"><!--Name-->
                            <col class="td-12per"><!--Title-->
                            <col class="td-12per"><!--Division-->
                            <col class="td-12per"><!--Cell Phone-->
                            <col class="td-12per"><!--Phone-->
                            <col class="td-12per"><!--FAX-->
                            <col class="td-14per"><!--Email Address-->
                            <col class="td-14per"><!--Remark-->
                        </colgroup>
                        <thead>
                            <tr>
                                <th class="text-center">
                                    <div class="checker"><span class=""><input type="checkbox"></span></div>
                                </th>
                                <th>Rep.</th>
                                <th>Email</th>
                                <th colspan="2">Name</th>
                                <th>Title</th>
                                <th>Division</th>
                                <th>Cell Phone</th>
                                <th>Phone</th>
                                <th>FAX</th>
                                <th>Email Address</th>
                                <th>Remark</th>
                            </tr>
                        </thead>
                        <tbody id="contactPersonInformationBody">
                        </tbody>
                    </table>
                </abp-card-body>
            </abp-card>
        </abp-accordion-item>
        <abp-accordion-item title=@L["Display:TradePartner:AccordionItem:TradeParty"]>
            @foreach (int row in Enum.GetValues(typeof(TradePartyType)))
            {
                <abp-row>
                    <abp-column>
                        <span class="title">@L["Display:TradeParty:THead:" + Enum.GetName(typeof(TradePartyType), row)]</span>
                        <abp-button class="add-trade-party"
                                text=@L["Display:Button:New"]
                                icon="plus"
                                onclick="onAddTradeParty('@row')"
                                button-type="Outline_Secondary"
                                data-party-type="@row" />
                                <abp-button class="btn btn-outline-danger me-md-2" type="button" id="deleteCommodityBtn" onclick="onRemoveTradePartner('@(row)')">delete</abp-button>
                    </abp-column>
                </abp-row>
                <abp-row class="mt-2">
                    <abp-column size-md="_12">
                        <div class="table-responsive trade-party-block">
                            <abp-table>
                                <colgroup>
                                    <col class="td-3per"><!--chk-->
                                    <col class="td-5per"><!--Default-->
                                    <col class="td-14per"><!--Description-->
                                    <col class="td-16per"><!--Company Name-->
                                    <col class="td-20per"><!--Address-->
                                    <col class="td-3per"><!--Rep.-->
                                    <col class="td-8per"><!--Contact-->
                                    <col class="td-9per"><!--Phone-->
                                    <col class="td-9per"><!--Fax-->
                                    <col class="td-12per"><!--Email-->
                                    <col class="td-3per"><!--btn-->
                                </colgroup>
                                <thead>
                                    <tr>
                                        <th class="text-center col-checkbox">
                                            <input type="checkbox" id="BtnChkAllChange_@row" onchange="onChkAllChange(event,@row)">
                                        </th>
                                        <th class="text-center">Default</th>
                                        <th>Description</th>
                                        <th>
                                            <span class="text-danger">*</span>
                                            Company Name
                                        </th>
                                        <th>Address</th>
                                        <th>Rep.</th>
                                        <th>Contact</th>
                                        <th>Phone</th>
                                        <th>Fax</th>
                                        <th>Email</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody id="tradePartyBody_@row">
                                </tbody>
                            </abp-table>
                        </div>
                    </abp-column>
                </abp-row>
            }
        </abp-accordion-item>
    </abp-accordion>
</form>
</div>
</div>