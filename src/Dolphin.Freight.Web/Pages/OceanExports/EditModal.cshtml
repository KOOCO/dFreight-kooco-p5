@page
@using Dolphin.Freight.Localization
@using Dolphin.Freight.Web.Pages.Components
@using Dolphin.Freight.Web.Pages.Shared;
@using Dolphin.Freight.Web.Pages.Shared.Memos;
@using Microsoft.Extensions.Localization
@using Volo.Abp.Users
@inject ICurrentUser CurrentUser
@model Dolphin.Freight.Web.Pages.OceanExports.EditModalModel
@inject IStringLocalizer<FreightResource> L
@section styles {
    <style type="text/css">
    </style>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" rel="stylesheet">
}
@section scripts
    {
    <abp-script src="/Pages/OceanExports/CreateMbl.js" />
    <script type="text/javascript">
        var cardIndex = 0;
        $(document).ready(function () {

            initializeDropdownSearch("OceanExportMbl_MblCarrierId");
            initializeDropdownSearch("OceanExportMbl_BlAcctCarrierId");
            initializeDropdownSearch("OceanExportMbl_ShippingAgentId");
            initializeDropdownSearch("OceanExportMbl_MblOverseaAgentId");
            initializeDropdownSearch("OceanExportMbl_MblNotifyId");
            initializeDropdownSearch("OceanExportMbl_ForwardingAgentId");
            initializeDropdownSearch("OceanExportMbl_CoLoaderId");
            initializeDropdownSearch("OceanExportMbl_CareOfId");
            initializeDropdownSearch("OceanExportMbl_EmptyPickupId");
            initializeDropdownSearch("OceanExportMbl_DeliveryToId");
            initializeDropdownSearch("OceanExportMbl_PorId");
            initializeDropdownSearch("OceanExportMbl_PolId");
            initializeDropdownSearch("OceanExportMbl_PodId");
            initializeDropdownSearch("OceanExportMbl_DelId");
            initializeDropdownSearch("OceanExportMbl_FdestId");
            initializeDropdownSearch("OceanExportMbl_TransPort1Id");

            //HB/l dropdown
         



            var l = abp.localization.getResource('Freight');
            var showMsg = '@Model.ShowMsg';
            if (showMsg == 'True') abp.message.success(l("Message:SuccessAdd"));
            var isLocked = '@Model.OceanExportMbl.IsLocked';
            if (isLocked == 'True') abp.message.warn(l("Message:LockMessage"));
            $("#addHBtn").click(function () {
                addHBtn();
            });
            //InitMemoTable('MblMemo');
            //InitMemoTable('HblMemo');

            var isCancel = '@Model.OceanExportMbl.IsCanceled';
            if (isCancel == "True") {
                $("#OceanExportMbl_IsCanceled").prop("checked", true);

                initReasonStatus()
            }
            var HIsCanceled = '@Model.OceanExportHbl.IsCanceled';
            if (HIsCanceled == "True") {
                $("#OceanExportHbl_IsCanceled").prop("checked", true);

                initHReasonStatus()
            }
            var IsReleased = '@Model.OceanExportMbl.IsReleased';
            if (IsReleased == 'True') $("#OceanExportMbl_IsReleased").prop("checked", true);
            var HIsReleased = '@Model.OceanExportHbl.IsReleased';
            if (HIsReleased == 'True') $("#OceanExportHbl_IsReleased").prop("checked", true);
            var IsHold = '@Model.OceanExportHbl.IsHold'
            if (IsHold == 'True') $("#OceanExportHbl_IsHold").prop("checked", true);
            var NewHbl = @Model.NewHbl;
            var IsShowHbl = '@Model.IsShowHbl';
            if (IsShowHbl == 'True') $("#hblCard").show();
            else $("#hblCard").hide();
            if (NewHbl == 1) {

                var divHtml = addCardRight('new_' + cardIndex, 'new HB/L', '@Model.CardClass');
                $("#hblCard").show();
                $("#hblCardDiv").append(divHtml);
                $("#AddHbl").val("1");
                $("#hblCardHeader").addClass('hblCrad0');
            }

            var IsUsedCareOf = '@Model.OceanExportMbl.IsUsedCareOf';
            if (IsUsedCareOf == 'True') $("#OceanExportMbl_IsUsedCareOf").prop("checked", true);
            $('#editForm').on('abp-ajax-success', function (result, rs) {
                event.preventDefault();
                var l = abp.localization.getResource('Freight');
                abp.message.success(l("Message:SuccessEdit"));
                location.href = '/OceanExports/EditModal?Id=' + rs.responseText.id + "&Hid=" + rs.responseText.hid
            });

            console.log('@ViewData["HAVEHBL"]');
            if ('@ViewData["HAVEHBL"]' !== "Y") {
                $("#RP").hide();
            }
        });
        function addHBtn() {
            var url = "/OceanExports/EditModal?Id=@Model.Id&NewHbl=1";
            location.href = url;
        }
        function addCardRight(hblNo, soNo, cladClass) {
            var cardHtml = "<div class='borad-anchor focus' ><div class='borad-cont' >"
            cardHtml = cardHtml + "<a class='link' href='#javascript:void(0)'></a>"
            cardHtml = cardHtml + "<span class='label label-HBL'>HB/L</span><span class='MBLnumber'>Add</span>"
            cardHtml = cardHtml + "</div></div>"
            return cardHtml;
        }
        function changeHid(Mid, Hid) {
            location.href = '/OceanExports/EditModal?Id=' + Mid + "&Hid=" + Hid
        }

        function getReportTelexrelease(){
            myWindow = window.open("@Url.Action("Telexrelease", "Docs")", 'Telexrelease', 'width=1200,height=800');
            myWindow.focus()
        }
        function gotoReport(rindex){
            var url = "";
            var pname = "";
            switch(rindex){
                default :
                    url = '@Url.Action("Car", "Docs")';
                    pname="Car";
                    break;
                case 2:
                    url = '@Url.Action("Cargo", "Docs")';
                    pname="Cargo";
                    break;
                case 3:
                    url = '@Url.Action("Box", "Docs")';
                    pname="Box";
                    break;
                case 4:
                    url = '@Url.Action("ProfitSummary", "Docs")';
                    pname = "ProfitSummary";
                    break;
                case 5:
                    url = '@Url.Action("ProfitDetail", "Docs")';
                    pname = "ProfitDetail";
                    break;
                case 6:
                    var idNo = $('#OceanExportHbl_Id').val();
                    url = '@Url.Action("Shipment", "Docs")' + "?id=" + idNo;
                    pname = "Shipment";
                    break;
                case 7:
                    var idNo = $('#OceanExportHbl_Id').val();
                    url = '@Url.Action("OBL", "Docs")' + "?id=" + idNo;
                    pname = "OBL";
                    break;
            }
            myWindow =  window.open(url, pname, 'width=1200,height=800')
            myWindow.focus()
        }
        function getReportPackageLabel(){
            myWindow = window.open("@Url.Action("PackageLabel", "Docs")", 'PackageLabel', 'width=1200,height=800');
            myWindow.focus()
        }

        function getReportPackage(){
            myWindow = window.open("@Url.Action("Package", "Docs")", 'Package', 'width=1200,height=800');
            myWindow.focus()
        }

        function getReportHblPackageLabel(){
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("HblPackageLabel", "Docs")" + "?id=" + idNo, 'HblPackageLabel', 'width=1200,height=800');
            myWindow.focus()
        }

        function getReportBookingConfirmation() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("BookingConfirmation", "Docs")" + "?id=" + idNo, 'BookingConfirmation', 'width=1200,height=800');
            myWindow.focus()
        }

        function getReportBankDraft() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("BankDraft", "Docs")" + "?id=" + idNo, 'BankDraft', 'width=1500,height=800');
            myWindow.focus()
        }

        function getReportHblClauses() {
            myWindow = window.open("@Url.Action("HblClauses", "Docs")", 'HblClauses', 'width=1500,height=800');
            myWindow.focus()
        }

        function getPreAlert() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("PreAlert", "Docs")" + "?id=" + idNo, 'PreAlert', 'width=1200,height=800');
            myWindow.focus()
        }
        function getCertificateOfOrigin() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("CertificateOfOrigin", "Docs")" + "?id=" + idNo, 'CertificateOfOrigin', 'width=1200,height=800');
            myWindow.focus()
        }
        function getDockRecepit() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("DockRecepit", "Docs")" + "?id=" + idNo, 'DockRecepit', 'width=1200,height=800');
            myWindow.focus()
        }
        function getUsdaHeatTreatment() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("UsdaHeatTreatment", "Docs")" + "?id=" + idNo, 'UsdaHeatTreatment', 'width=1200,height=800');
            myWindow.focus()
        }
        function getForwarderCargoReceipt() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("ForwarderCargoReceipt", "Docs")" + "?id=" + idNo, 'ForwarderCargoReceipt', 'width=1200,height=800');
            myWindow.focus()
        }
        function getHbl() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("Hbl", "Docs")" + "?id=" + idNo, 'Hbl', 'width=1200,height=800');
            myWindow.focus()
        }
        function getCommercialInvoice() {
            myWindow = window.open("@Url.Action("CommercialInvoice", "Docs")", 'CommercialInvoice', 'width=1200,height=800');
            myWindow.focus()
        }
        function getPickupDeliveryOrder() {
            //var idNo = $('#OceanExportHbl_Id').val();
            //myWindow = window.open("@Url.Action("PickupDeliveryOrder", "Docs")" + "?id=" + idNo, 'PickupDeliveryOrder', 'width=1200,height=800');
            myWindow = window.open("@Url.Action("PickupDeliveryOrder", "Docs")", 'PickupDeliveryOrder', 'width=1200,height=800');
            myWindow.focus()
        }
        function getBookingPackingList() {
            //var idNo = $('#OceanExportHbl_Id').val();
            //myWindow = window.open("@Url.Action("BookingPackingList", "Docs")" + "?id=" + idNo, 'BookingPackingList', 'width=1200,height=800');
            myWindow = window.open("@Url.Action("BookingPackingList", "Docs")", 'BookingPackingList', 'width=1200,height=800');
            myWindow.focus()
        }
        function getManifest() {
            var idNo = $('#OceanExportHbl_Id').val();
            var report = $('input[name=report]:checked').val()
            var reportType = $('input[name=report-type]:checked').val()
            myWindow = window.open("@Url.Action("Manifest", "Docs")" + "?id=" + idNo + "&report=" + report + "&reportType=" + reportType, 'Manifest', 'width=1200,height=800');
            myWindow.focus()
        }

        $('#addHBtn').on('click', function () {
            if ($('#mblDiv')[0].classList.contains('show')) {
                $('#btnMawbCollapse').click();
            }

            if ($('#btnHawbCardCollapse_0').length) {
                showAlert(alertConfirmation2, 'Store');
            }
            else {

                let hawbcard = createHawbCard();

                let index = $('.hbl_sm_area').find('.card').length;
                hawbcard = setHawbCardValues(hawbcard, '00000000-0000-0000-0000-000000000000', '0', index);

                $('#hblCards').append(hawbcard);

                setTimeout(() => {
                    $('.hblCardTitle')[index].click();
                }, 500);
            }
        })

        $('#editForm').on('abp-ajax-success', function (result, rs) {
            console.log("enter here");
            event.preventDefault();
            abp.message.success('Successfully Saved').then(function () {
                location.href = "/OceanExports/Index";
            });
            //location.href = '/AirImports/EditMawb/' + rs.responseText.id + '/show';
        });

        $('#hblMainCard').append('#mawbCard');

        function onHawbCardClick(e, hawbId) {
            debugger;
            var element = e.currentTarget || e.target || e.srcElement;
            var hblNo = element.id.split('_')[1];

            if ($('#btnHawbCardCollapse_0').length && hblNo != 0) {
                HAWBNO = hblNo;
                showAlert(alertConfirmation, 'Continue');
            }
            else {

                var color = getComputedStyle(element.parentElement.parentElement).backgroundColor;

                if (!$('#btnHawbCardCollapse_' + hblNo).attr('class').includes('collapsed')) {
                    $('.hblCardHawbNo').addClass('d-none');
                    $('#hblCard_' + hblNo).removeClass('d-none');
                }
                else {

                    var ajaxParams = undefined;

                    Swal.fire({
                        title: 'Loading...',
                        didOpen: () => {
                            Swal.showLoading()
                        }
                    })

                    abp.ajax($.extend(true, {
                        url: abp.appPath + 'api/ImportExport/OceanExportBasicHbl?Id=' + hawbId,
                        type: 'GET',
                        dataType: "html",
                    }, ajaxParams)).done(function (partial) {
                        $('#partialContainer').html('');
                        $('#partialContainer').html(partial);
                        $('#hblCard').find('.card-header').attr('style', 'background:' + color + ';color:white')
                        Swal.clickCancel();

                        setTimeout(()=>{
                            initializeDropdownSearch("OceanExportHbl_HblShipperId");
                            initializeDropdownSearch("OceanExportHbl_HblNotifyId");
                            initializeDropdownSearch("OceanExportHbl_AgentId");
                            initializeDropdownSearch("OceanExportHbl_ForwardingAgentId");
                            initializeDropdownSearch("OceanExportHbl_ReceivingAgentId");
                            initializeDropdownSearch("OceanExportHbl_PorId");
                            initializeDropdownSearch("OceanExportHbl_PodId");
                            initializeDropdownSearch("OceanExportHbl_DelId");
                            initializeDropdownSearch("OceanExportHbl_FdestId");
                            initializeDropdownSearch("OceanExportHbl_EmptyPickupId");
                            initializeDropdownSearch("OceanExportHbl_TruckerId");
                            initializeDropdownSearch("OceanExportHbl_CustomsBrokerId");
                        },500);
                    })

                    $('.btnHawbCardCollapse').each(function (i, e) {
                        let tempHawbNo = e.id.split('_')[1];
                        if (tempHawbNo == hblNo) {
                            $('#btnHawbCardCollapse_' + hblNo).click();
                        }
                        else {
                            $('#btnHawbCardCollapse_' + tempHawbNo).addClass('collapsed');
                            $('#btnHawbCardCollapse_' + tempHawbNo).attr('aria-expanded', 'false');
                            $('#hawbCard_' + i).removeClass('show');
                        }
                    })
                }
            }
        }

        function createHawbCard() {
            let abpCard = '<div class="{{divClass}}"><div class="card-header pointer"><h5 class="card-title hblCardTitle" id="title_{{hblNo}}"' +
                ' onclick="onHawbCardClick(event,{{hblCardId}})">{{hblNo}}</h5>' +
                ' <button type="button" class="btn d-none btn-collapse collapsed btnHawbCardCollapse" data-val="{{index}}" data-bs-toggle="collapse" id="btnHawbCardCollapse_{{hblNo}}" data-bs-target="#{{cardBodyId}}" aria-expanded="false" aria-controls="mawbDiv">' +
                ' <i class="fa fa-caret-down" style="color:#FFFFFF;"></i></button > </div><div class="card-body collapse" id="{{cardBodyId}}" style="min-height:150px !important"></div>';
            return abpCard;
        }

        function setHawbCardValues(abpcard, cardId, hblNo, index) {
            debugger;
            let apbCardClass = 'card board-item hbl-sm-' + index;
            let cardBodyId = 'hawbCard_' + index;
            cardId = "'" + cardId + "'";

            abpcard = abpcard.replaceAll("{{divClass}}", apbCardClass);
            abpcard = abpcard.replaceAll("{{hblNo}}", hblNo);
            abpcard = abpcard.replaceAll("{{hblCardId}}", cardId);
            abpcard = abpcard.replaceAll("{{index}}", index);
            abpcard = abpcard.replaceAll("{{cardBodyId}}", cardBodyId);

            return abpcard;
        }

        function showAlert(funName, buttonName) {
            Swal.fire({
                icon: 'error',
                text: 'The data has not been saved, are you sure you want to ' + buttonName.toLowerCase() + '?',
                showCancelButton: true,
                confirmButtonText: buttonName,
            }).then(funName)
        }

        function alertConfirmation(result) {
            if (result.isConfirmed) {
                let indx = $('.hbl_sm_area').find('.card').length;
                $('#btnHawbCardCollapse_0').parent().parent().remove();
                if (HAWBNO) {
                    $('#title_' + HAWBNO).click()
                }
                else {
                    $('#hawbCard_' + (indx - 2)).parent().find('.card-title').click();
                }
            }
        }

        function alertConfirmation2() {
            $('#saveBtn').click();
        }
    </script>
}
<div class="page-header">
    <abp-breadcrumb>
        <abp-breadcrumb-item href="#" title=@L["Menu:Home"] />
        <abp-breadcrumb-item title=@L["Menu:OceanExports"] />
        <abp-breadcrumb-item title=@L["Menu:OceanExports.CreateMbl"] />
    </abp-breadcrumb>

    <nav class="submenu">
        <ol>
            <li class="menu-item ">
                <a class="nav-link " href="javascript:void(0)">@L["Tab:Basic"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link  " href="EditModal2?Id=@Model.Id">@L["Tab:Container"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link  " href="EditModal3?Id=@Model.Id">@L["Tab:Accounting"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link  " href="EditModal4?Id=@Model.Id">@L["Tab:Doc"]</a>
            </li>
        </ol>
    </nav>
</div>
<div class="page-content-area">

    <div class="board-wrap">
        <form submit-button="true" data-ajaxForm="true" id="editForm">
            <abp-row>
                <abp-column size-md="_9">
                    <abp-card class="card board-item">
                        <abp-card-header class="card-header active" style="background:#555555;color:#FFFFFF;">
                            <abp-card-title>
                                MB/L
                                <span id="title0">@Model.OceanExportMbl.MblNo </span>
                                @if (@Model.OceanExportMbl.PolName != null)
                                {
                                    <span id="title1" style="font-size:0.8em;">@Model.OceanExportMbl.PolName</span>
                                }
                                @if (@Model.OceanExportMbl.PolEtd != null)
                                {
                                    <span id="title2" style="font-size:0.8em;">@Html.DisplayFor(Model => @Model.OceanExportMbl.PolEtd) </span>
                                }
                                @if (@Model.OceanExportMbl.PodName != null)
                                {
                                    <i class="fa fa-caret-right"></i> <span id="title3" style="font-size:0.8em;">@Model.OceanExportMbl.PodName</span>
                                }

                                @if (Model.OceanExportMbl.PodEta != null)
                                {
                                    <span id="title4" style="font-size:0.8em;">@Html.DisplayFor(Model => Model.OceanExportMbl.PodEta) </span>
                                }
                                @if (Model.OceanExportMbl.VesselName != null && Model.OceanExportMbl.VesselName != "")
                                {
                                    <span id="title5" style="font-size:0.8em;"><i class="fa fa-anchor"></i> @Model.OceanExportMbl.VesselName </span>

                                }
                                @if (Model.OceanExportMbl.MblCarrierId != null)
                                {
                                    <span class="mbl_note _max-w12per">
                                        <i class="fa fa-ship"></i> @Model.OceanExportMbl.MblCarrierName
                                    </span>
                                }
                            </abp-card-title>

                            <div class="btn-group dropdown">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="ActionDrop" data-bs-toggle="dropdown">
                                    @L["Display:Function"]
                                </button>
                                <div class="dropdown-menu " aria-labelledby="dropdownMenuButton1" id="ActionDrop">
                                    <a class='dropdown-item' href='javascript:void(0)'>
                                        <i class="fa fa-lock"></i> @L["Btn:Lock"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)'>
                                        <i class="fa fa-files-o"></i> @L["Btn:Copy"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)'>
                                        <i class="fa fa-trash-o"></i> @L["Btn:Delete"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)'>
                                        <i class="fa fa-file-text-o"></i> @L["e-SI"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)'>
                                        <i class="fa fa-file-text-o"></i> @L["GoFreight EDI"]
                                    </a>
                                    <div class="dropdown-divider"></div>
                                    <a class='dropdown-item' href='javascript:void(0)'>
                                        <i class="fa fa-files-o"></i> @L["Btn:File Package"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)'>
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Print MB/L | B/L Instruction"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="getPickupDeliveryOrder()">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Dispatch List"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="$('#manifestModal').modal('show');">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:List of Cargo"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="getBookingPackingList(3)">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Packing List"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="getReportTelexrelease()">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Telephone Release List"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="getReportPackageLabel()">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:MBL Packaging Label"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="getReportPackage()" id="RP" name="RP">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:All HBL Packaging Labels"]
                                    </a>
                                    <div class="dropdown-divider"></div>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="gotoReport(4)">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Profit Report - Summary"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="gotoReport(5)">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Profit Report - Detailed"]
                                    </a>
                                    <div class="dropdown-divider"></div>
                                    <a class='dropdown-item' href='javascript:void(0)'>
                                        <i class="fa fa-cube"></i> @L["Btn:Open in Track-Trace"]
                                    </a>
                                </div>
                            </div>
                            <button class="btn btn-collapse " type="button" data-bs-toggle="collapse" data-bs-target="#mblDiv" aria-expanded="true" aria-controls="mblDiv">
                            </button>

                        </abp-card-header>
                        <abp-card-body class="collapse show customForm" id="mblDiv">
                            <abp-row>
                                <abp-column size-md="_3">
                                    <input type="hidden" name="ShipmentNo" id="ShipmentNo">
                                    <abp-input asp-for="OceanExportMbl.FilingNo" disabled="true" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.MblNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(SelectComponent), new { TagName = "OfficeId", FieldName = "OfficeId", DefaultValue = "", IsShowLabel = true, IsRequired = true })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(SelectComponent), new { TagName = "BlTypeId", FieldName = "BlTypeId", DefaultValue = "", IsShowLabel = true, IsRequired = false })
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PostDate" class="checkdate" type="text" abp-data-datepicker="false" readonly="true" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.SoNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.ItnNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @*@await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "MblCarrierId", FieldName = "MblCarrierId",DefaultValue="" , IsShowLabel = true , IsRequired = false ,SelectType=1 ,ShowFiledContentValue = Model.OceanExportMbl.MblCarrierContent})*@
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.MblCarrierId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "Shipping Company", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.MblCarrierContent })
                                    <input type="hidden" name="OceanExportMbl.MblCarrierId" id="mMblCarrierId" value="@Model.OceanExportMbl.MblCarrierId" />
                                    <input type="hidden" name="OceanExportMbl.MblCarrierContent" id="mMblCarrierContent" value="@Model.OceanExportMbl.MblCarrierContent" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.BlAcctCarrierId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "ShippingCompanyFinance", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.BlAcctCarrierContent })
                                    @*@await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "BlAcctCarrierId", FieldName = "BlAcctCarrierId",DefaultValue="" , IsShowLabel = true , IsRequired = false,SelectType=1 ,ShowFiledContentValue = Model.OceanExportMbl.BlAcctCarrierContent })*@
                                    <input type="hidden" name="OceanExportMbl.BlAcctCarrierId" id="mBlAcctCarrierId" value="@Model.OceanExportMbl.BlAcctCarrierId" />
                                    <input type="hidden" name="OceanExportMbl.BlAcctCarrierContent" id="mBlAcctCarrierContent" value="@Model.OceanExportMbl.BlAcctCarrierContent" />

                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.ShippingAgentId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "Shipping Agent", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.ShippingAgentId.ToString() })

                                    @*@await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "ShippingAgentId", FieldName = "ShippingAgentId",DefaultValue="" , IsShowLabel = true , IsRequired = false,SelectType=1 ,ShowFiledContentValue = Model.OceanExportMbl.ShippingAgentContent })*@
                                    <input type="hidden" name="OceanExportMbl.ShippingAgentId" id="mShippingAgentId" value="@Model.OceanExportMbl.ShippingAgentId" />
                                    <input type="hidden" name="OceanExportMbl.ShippingAgentContent" id="mShippingAgentContent" value="@Model.OceanExportMbl.ShippingAgentContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.MblOverseaAgentId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "Oversea Agent", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.MblOverseaAgentId.ToString() })

                                    @*@await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "MblOverseaAgentId", FieldName = "MblOverseaAgentId",DefaultValue="" , IsShowLabel = true , IsRequired = false,SelectType=1 ,ShowFiledContentValue = Model.OceanExportMbl.MblOverseaAgentContent   })*@
                                    <input type="hidden" name="OceanExportMbl.MblOverseaAgentId" id="mMblOverseaAgentId" value="@Model.OceanExportMbl.MblOverseaAgentId" />
                                    <input type="hidden" name="OceanExportMbl.MblOverseaAgentContent" id="mMblOverseaAgentContent" value="@Model.OceanExportMbl.MblOverseaAgentContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.MblNotifyId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "Notify", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.MblNotifyId.ToString() })

                                    @*@await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "MblNotifyId", FieldName = "MblNotifyId",DefaultValue="" , IsShowLabel = true , IsRequired = false,SelectType=1 ,ShowFiledContentValue = Model.OceanExportMbl.MblNotifyContent   })*@
                                    <input type="hidden" name="OceanExportMbl.MblNotifyId" id="mMblNotifyId" value="@Model.OceanExportMbl.MblNotifyId" />
                                    <input type="hidden" name="OceanExportMbl.MblNotifyContent" id="mMblNotifyContent" value="@Model.OceanExportMbl.MblNotifyContent" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.ForwardingAgentId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "Forwarding Agent", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.ForwardingAgentId.ToString() })

                                    @* @await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "ForwardingAgentId", FieldName = "ForwardingAgentId" , DefaultValue="" , IsShowLabel = true , IsRequired = false,SelectType=1 ,ShowFiledContentValue = Model.OceanExportMbl.ForwardingAgentContent    })*@
                                    <input type="hidden" name="OceanExportMbl.ForwardingAgentId" id="mForwardingAgentId" value="@Model.OceanExportMbl.ForwardingAgentId" />
                                    <input type="hidden" name="OceanExportMbl.ForwardingAgentContent" id="mForwardingAgentContent" value="@Model.OceanExportMbl.ForwardingAgentContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "CoLoaderId", FieldName = "CoLoaderId",DefaultValue="" , IsShowLabel = true , IsRequired = false,SelectType=1 ,ShowFiledContentValue = Model.OceanExportMbl.CoLoaderContent })
                                    <input type="hidden" name="OceanExportMbl.CoLoaderId" id="mCoLoaderId" value="@Model.OceanExportMbl.CoLoaderId" />
                                    <input type="hidden" name="OceanExportMbl.CoLoaderContent" id="mCoLoaderContent" value="@Model.OceanExportMbl.CoLoaderContent" />
                                </abp-column>
                                <abp-column size-md="_3">

                                    <label for="CareOfId" class="form-label">C/O <input type="checkbox" name="OceanExportMbl.IsUsedCareOf" id="OceanExportMbl_IsUsedCareOf" value="true" /></label>
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.CareOfId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.CareOfId.ToString() })

                                    @*@await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "CareOfId", FieldName = "CareOfId",DefaultValue="" , IsShowLabel = false , IsRequired = false,SelectType=1 ,ShowFiledContentValue = Model.OceanExportMbl.CareOfContent })*@
                                    <input type="hidden" name="OceanExportMbl.CareOfId" id="mCareOfId" value="@Model.OceanExportMbl.CareOfId" />
                                    <input type="hidden" name="OceanExportMbl.CareOfContent" id="mCareOfContent" value="@Model.OceanExportMbl.CareOfContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label class="form-label">Operator</label>
                                    <select class="form-control ml-15" asp-for="OceanExportMbl.MblOperatorId" disabled="true">
                                        <option value='@CurrentUser.Id' selected> @(CurrentUser.Name + " " + CurrentUser.SurName) </option>
                                    </select>
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.CarrierContractNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label for="OceanExportMbl_IsDirect" class="form-label">@L["IsDirect"]<input type="checkbox" name="OceanExportMbl.IsDirect" id="OceanExportMbl.IsDirect" value="true" checked="@Model.OceanExportMbl.IsDirect" /></label>
                                </abp-column>
                                <abp-column size-md="_6">

                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column>
                                    &nbsp;
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.VesselName" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.Voyage" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.PorId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "POR", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.PorId.ToString() })
                                    @* @await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "PorId", FieldName = "PorId",DefaultValue="" , IsShowLabel = true , IsRequired = false })*@

                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PorEtd" type="text" abp-data-datepicker="false" class="checkdate" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.PolId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "POL", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.PolId.ToString() })
                                    @*@await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "PolId", FieldName = "PolId",DefaultValue="" , IsShowLabel = true , IsRequired = false })*@
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PolEtd" type="text" abp-data-datepicker="false" class="checkdate" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "PodId", FieldName = "PodId",DefaultValue="" , IsShowLabel = true , IsRequired = false })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PodEta" type="text" abp-data-datepicker="false" class="checkdate" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.DelId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "DEL", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.DelId.ToString() })
                                    @*  @await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "DelId", FieldName = "DelId",DefaultValue="" , IsShowLabel = true , IsRequired = false })*@
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.DelEta" type="text" abp-data-datepicker="false" class="checkdate" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.FdestId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "Final dest", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.FdestId.ToString() })
                                    @* @await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "FdestId", FieldName = "FdestId",DefaultValue="" , IsShowLabel = true , IsRequired = false })*@
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.FdestEta" type="text" abp-data-datepicker="false" class="checkdate" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @* @await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "EmptyPickupId", FieldName = "EmptyPickupId",DefaultValue="" , IsShowLabel = true , IsRequired = false,SelectType=1 ,ShowFiledContentValue = Model.OceanExportMbl.EmptyPickupContent })*@
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.EmptyPickupId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "Empty Pickup", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.EmptyPickupId.ToString() })
                                    <input type="hidden" name="OceanExportMbl.EmptyPickupId" id="mEmptyPickupId" value="@Model.OceanExportMbl.EmptyPickupId" />
                                    <input type="hidden" name="OceanExportMbl.EmptyPickupContent" id="mEmptyPickupContent" value="@Model.OceanExportMbl.EmptyPickupContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @*  @await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "DeliveryToId", FieldName = "DeliveryToId",DefaultValue="" , IsShowLabel = true , IsRequired = false ,SelectType=1,ShowFiledContentValue = Model.OceanExportMbl.DeliveryToContent })*@
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.DeliveryToId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "Delivery", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.DeliveryToId.ToString() })
                                    <input type="hidden" name="OceanExportMbl.DeliveryToId" id="mDeliveryToId" value="@Model.OceanExportMbl.DeliveryToId" />
                                    <input type="hidden" name="OceanExportMbl.DeliveryToContent" id="mDeliveryToContent" value="@Model.OceanExportMbl.DeliveryToContent" />
                                </abp-column>
                                <abp-column size-md="_6">
                                    <abp-row>
                                        <abp-column size-md="_6">
                                            @await Component.InvokeAsync(typeof(SelectComponent), new { TagName = "PreCarriageVesselNameId", FieldName = "PreCarriageVesselNameId", DefaultValue = "", IsShowLabel = true, IsRequired = false })
                                        </abp-column>
                                        <abp-column size-md="_6">

                                            <abp-input asp-for="OceanExportMbl.PrepreCarriageVoyage" />
                                        </abp-column>
                                    </abp-row>

                                </abp-column>

                            </abp-row>
                            <abp-row>
                                <abp-column>
                                    &nbsp;
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(SelectComponent), new { TagName = "FreightTermId", FieldName = "FreightTermId", DefaultValue = "", IsShowLabel = true, IsRequired = false })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(SelectComponent), new { TagName = "ShipModeId", FieldName = "ShipModeId", DefaultValue = "", IsShowLabel = true, IsRequired = false })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(SelectComponent), new { TagName = "SvcTermFromId", FieldName = "SvcTermFromId", DefaultValue = "", IsShowLabel = true, IsRequired = false })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label for="SvcTermToId" class="form-label">&nbsp;&nbsp;</label>
                                    @await Component.InvokeAsync(typeof(SelectComponent), new { TagName = "SvcTermToId", FieldName = "SvcTermToId", DefaultValue = "", IsShowLabel = false, IsRequired = false })
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.DisplayMblContainerSizeQtyInfo" readonly="true" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(SelectComponent), new { TagName = "OblTypeId", FieldName = "OblTypeId", DefaultValue = "", IsShowLabel = true, IsRequired = false })
                                    <input type="hidden" name="OceanExportMbl.OblTypeId" id="mOblTypeId" value="@Model.OceanExportMbl.OblTypeId" />
                                </abp-column>
                                <abp-column size-md="_6">
                                    &nbsp;
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.DocCutOffTime" class="cdatetime" type="text" abp-data-datetimepicker="false" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PortCutOffTime" class="cdatetime" type="text" abp-data-datetimepicker="false" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.VgmCutOffTime" class="cdatetime" type="text" abp-data-datetimepicker="false" />
                                </abp-column>
                                <abp-column size-md="_3">

                                    <abp-input asp-for="OceanExportMbl.RailCutOffTime" class="cdatetime" type="text" abp-data-datetimepicker="false" />

                                </abp-column>

                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-row>
                                        <abp-column>
                                            <label for="OceanExportMbl_IsCanceled" class="form-label">@L["IsCanceled"] <input type="checkbox" name="OceanExportMbl.IsCanceled" id="OceanExportMbl_IsCanceled" value="true" /></label>

                                            <input type="text" id="OceanExportMbl_CanceledDate" name="OceanExportMbl.CanceledDate" value="" class="form-control " readonly>

                                        </abp-column>
                                    </abp-row>

                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.CancelByName" readonly="true" />
                                    <input type="hidden" name="OceanExportMbl.CancelById" class="form-control" id="OceanExportMbl_CancelById" value="@Model.OceanExportMbl.CancelById" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(SelectComponent), new { TagName = "CancelReason", FieldName = "CancelReason", DefaultValue = "", IsShowLabel = true, IsRequired = false })
                                    <input type="hidden" name="OceanExportMbl.CancelReason" id="mCancelReason" value="@Model.OceanExportMbl.CancelReason" />
                                </abp-column>
                                <abp-column size-md="_3"></abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <div class="mb-3">
                                        @await Component.InvokeAsync(typeof(SelectComponent), new { TagName = "MblReferralById", FieldName = "MblReferralById", DefaultValue = "", IsShowLabel = true, IsRequired = false })
                                        <input type="hidden" name="OceanExportMbl.MblReferralById" id="mMblReferralById" value="@Model.OceanExportMbl.MblReferralById" />
                                        <input type="hidden" name="OceanExportMbl.MblReferralByContent" id="mMblReferralByContent" value="@Model.OceanExportMbl.MblReferralByContent" />
                                    </div>
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label for="OceanExportMbl_IsBookingAgent" class="form-label">@L["IsBookingAgent"]<input type="checkbox" name="OceanExportMbl.IsBookingAgent" id="OceanExportMbl_IsBookingAgent" value="true" checked="" /></label>
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label for="CareOfId" class="form-label">@L["IsReleased"]<input type="checkbox" name="OceanExportMbl.IsReleased" id="OceanExportMbl_IsReleased" value="true" /></label>
                                    <abp-input asp-for="OceanExportMbl.MblReleaseDate" class="cdatetime" type="text" abp-data-datetimepicker="false" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(SelectComponent), new { TagName = "ReleaseById", FieldName = "ReleaseById", DefaultValue = "", IsShowLabel = true, IsRequired = false })
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    &nbsp;
                                </abp-column>
                                <abp-column size-md="_3">
                                    &nbsp;
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.OnBoardDate" class="cdatetime" type="text" abp-data-datetimepicker="false" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <button type="button" id="checkHideBtn">
                                        <i class="fa fa-plus" id="showLi"></i>
                                        <i class="fa fa-minus" id="hideLi"></i>
                                    </button>
                                    @L["Title:MoreInfo"]
                                    <input type="hidden" id="isHide" value="@Model.OceanExportMbl.GetHideCheck()" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="hideArea">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.SubBlNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.ServiceContactNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.ForwardRefNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.TransPort1Id", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "Transshipment Port", SelectType = 1, ShowFiledContentValue = Model.OceanExportMbl.TransPort1Id.ToString() })
                                    @*@await Component.InvokeAsync(typeof(SelectComponent),new {TagName =  "TransPort1Id", FieldName = "TransPort1Id",DefaultValue="" , IsShowLabel = true , IsRequired = false })*@
                                    <input type="hidden" name="OceanExportMbl.TransPort1Id" id="mTransPort1Id" value="@Model.OceanExportMbl.TransPort1Id" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="hideArea">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.Trans1Eta" class="cdatetime" type="text" abp-data-datetimepicker="false" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.EctNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PrnNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.IsEcommerce" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column>
                                    <abp-card-header style="background:#cccccc;color:#FFFFFF;">
                                        @L["Title:Memo"]
                                    </abp-card-header>
                                    <abp-card>
                                        <abp-card-body>
                                            <partial name="Memos/_Memo" model="new _MemoModel(Model.OceanExportMbl.Id, Dolphin.Freight.Common.FreightPageType.OEMBL)" />
                                        </abp-card-body>
                                    </abp-card>
                                </abp-column>
                            </abp-row>
                        </abp-card-body>
                    </abp-card>

                    <!-- HBL Card-->
                    <div id="partialContainer">
                    </div>
                </abp-column>

                            <abp-column size-md="_3">
                    <div class="card-wrap">
                        <button class="btn btn-block btn-add" type="button" id="addHBtn">
                            <i class="fa-solid fa-plus"></i>Add HB/L
                        </button>
                        <div id="hblCards" class="hbl_sm_area">
                        </div>
                    </div>
                </abp-column>
            </abp-row>

            <abp-row class="mt-3">
                <abp-column>
                    <abp-button class="btn btn-primary me-md-2" type="button" id="saveEditBtn">@L["Save"].Value</abp-button>
                </abp-column>
            </abp-row>
        </form>
    </div>
</div>

<input type="hidden" name="Id" id="Id" value="@Model.Id" />
<input type="hidden" name="OceanExportMbl.Id" id="OceanExportMbl_Id" value="@Model.Id" />
<input type="hidden" name="OceanExportMbl.OfficeId" id="mOfficeId" value="@Model.OceanExportMbl.OfficeId" />
<input type="hidden" name="OceanExportMbl.MblSalesTypeId" id="mMblSalesTypeId" value="@Model.OceanExportMbl.MblSalesTypeId" />
<input type="hidden" name="OceanExportMbl.PreCarriageVesselNameId" id="mPreCarriageVesselNameId" value="@Model.OceanExportMbl.PreCarriageVesselNameId" />
<input type="hidden" name="OceanExportMbl.SvcTermFromId" id="mSvcTermFromId" value="@Model.OceanExportMbl.SvcTermFromId" />
<input type="hidden" name="OceanExportMbl.SvcTermToId" id="mSvcTermToId" value="@Model.OceanExportMbl.SvcTermToId" />
<input type="hidden" name="OceanExportMbl.ShipModeId" id="mShipModeId" value="@Model.OceanExportMbl.ShipModeId" />
<input type="hidden" name="OceanExportMbl.FreightTermId" id="mFreightTermId" value="@Model.OceanExportMbl.FreightTermId" />
<input type="hidden" name="OceanExportMbl.BlTypeId" id="mBlTypeId" value="@Model.OceanExportMbl.BlTypeId" />
<input type="hidden" name="OceanExportMbl.PorId" id="mPorId" value="@Model.OceanExportMbl.PorId" />
<input type="hidden" name="OceanExportMbl.PolId" id="mPolId" value="@Model.OceanExportMbl.PolId" />
<input type="hidden" name="OceanExportMbl.PodId" id="mPodId" value="@Model.OceanExportMbl.PodId" />
<input type="hidden" name="OceanExportMbl.DelId" id="mDelId" value="@Model.OceanExportMbl.DelId" />
<input type="hidden" name="OceanExportMbl.FdestId" id="mFdestId" value="@Model.OceanExportMbl.FdestId" />
<input type="hidden" name="AddHbl" id="AddHbl" value="0" />

<div class="modal fade" id="manifestModal" tabindex="-1" aria-labelledby="manifestModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="manifestModalLabel">@L["Manifest:CargoManifest"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row" bind-all-uniform="">
                    <div class="col-xs-12">
                        <div class="form-group form-full">
                            <label class="name-sm control-label ng-binding" style="
                    width: 20%;
                    vertical-align: top;
                    padding-top: 5px;
                    ">@L["Manifest:MBLNo"]</label>
                            <input type="text" class="form-control value-sm" readonly="" value="" style="
                        width: 78.8%;
                        display: inline-block;
                    ">
                        </div>
                    </div>
                    <div class="col-xs-12">
                        <div class="form-group form-full">
                            <label class="name-sm control-label form-textarea-label ng-binding" style="
                    width: 20%;
                    vertical-align: top;
                    padding-top: 5px;
                    ">@L["Manifest:MasterAgent"]</label>
                            <textarea rows="6" class="value-sm form-control ng-binding" readonly="" style="
                        width: 78.8%;
                        display: inline-block;
                    "></textarea>
                        </div>
                    </div>
                    <div class="col-xs-12">
                        <div class="form-group form-full">
                            <label class="name-sm control-label form-textarea-label ng-binding" style="
                    width: 20%;
                    vertical-align: top;
                    padding-top: 5px;
                    ">@L["Manifest:Report"]</label>

                            <label class="radio-inline ng-binding" style="
                        vertical-align: top;
                        padding-top: 5px;
                    ">
                                <input type="radio" name="report" value="MASTER" class="ng-pristine ng-untouched ng-valid ng-not-empty" checked onchange="changeReport(this)">
                                @L["Manifest:MASTER"]
                                <input type="radio" name="report" value="SUB_AGENT" class="ng-pristine ng-untouched ng-valid ng-not-empty" disabled>
                                @L["Manifest:SUB_AGENT"]
                                <input type="radio" name="report" value="CARRIER" class="ng-pristine ng-untouched ng-valid ng-not-empty" onchange="changeReport(this)">
                                @L["Manifest:CARRIER"]
                            </label>

                        </div>


                        <div class="form-group form-full reporttype">
                            <label class="name-sm control-label form-textarea-label ng-binding" style="
                    width: 20%;
                    vertical-align: top;
                    padding-top: 5px;
                    ">@L["Manifest:ReportType"]</label>

                            <label class="radio-inline ng-binding" style="
                        vertical-align: top;
                        padding-top: 5px;
                    ">
                                <input type="radio" name="report-type" value="BY_CONTAINER" class="ng-pristine ng-untouched ng-valid ng-not-empty" checked>
                                @L["Manifest:BY_CONTAINER"]
                                <input type="radio" name="report-type" value="BY_MBL" class="ng-pristine ng-untouched ng-valid ng-not-empty">
                                @L["Manifest:BY_MBL"]
                            </label>

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="getManifest()">View</button>
            </div>
        </div>
    </div>
</div>
<script>
    var changeReport = function (sel) {
        if (sel.value === 'CARRIER')
            $('.reporttype').hide();
        else
            $('.reporttype').show();
    }
</script>