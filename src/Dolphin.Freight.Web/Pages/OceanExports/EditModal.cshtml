@page
@using Dolphin.Freight.AirExports
@using Dolphin.Freight.Localization
@using Dolphin.Freight.Web.CommonService;
@using Dolphin.Freight.Web.Pages.Components
@using Dolphin.Freight.Web.Pages.Shared;
@using Dolphin.Freight.Web.Pages.Shared.Memos;
@using Microsoft.Extensions.Localization
@using Volo.Abp.Users
@inject ICurrentUser CurrentUser
@model Dolphin.Freight.Web.Pages.OceanExports.EditModalModel
@inject IStringLocalizer<FreightResource> L
@inject IDropdownService _dropdown
@section styles {
    <style type="text/css">
        #ejo .btn-primary {
            color: #fff;
            background-color: rgb(0 123 255 / 52%);
            border-color: #007bff;
        }
    </style>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" rel="stylesheet">
}
@section scripts
    {
    <abp-script src="/Pages/OceanExports/CreateMbl.js" />
    <abp-script src="/Pages/OceanExports/EditModel.js" />
    <script type="text/javascript">
        Swal.fire({
            title: 'Loading...',
            didOpen: () => {
                Swal.showLoading()
            }
        })
        var cardIndex = 0;
        var l = abp.localization.getResource('Freight');
        var isLocked;
        
        $(document).ready(function () {

            //HB/l dropdown

            var isPageLoad = true;

            var showMsg = '@Model.ShowMsg';
            if (showMsg == 'True') abp.message.success(l("Message:SuccessAdd"));
            isLocked = '@Model.OceanExportMbl.IsLocked';
            if (isLocked != 'True') {
                $('#lockButtonMbl').empty().html('<i class="fa fa-lock"></i> '+l("Btn:Lock"));
                $('#ActionDropMbl').empty().html('<i class="fa fa-lock-open"></i> ' + l("Display:Function"));
            }
            else {
                $('#lockButtonMbl').empty().html('<i class="fa fa-lock-open"></i> ' + l("Btn:UnLock"));
                $('#ActionDropMbl').empty().html('<i class="fa fa-lock"></i> ' + l("Display:Function"));
            }

            console.log('@ViewData["HAVEHBL"]');
            //if ('@ViewData["HAVEHBL"]' !== "Y") {
            //    $("#RP").hide();
            //}
            if ('@Model.OceanExportMbl.IsReleased' == 'True') {
                $("#OceanExportMbl_MblReleaseDate").datepicker("setDate", new Date('@Model.OceanExportMbl.MblReleaseDate').toLocaleDateString());
            }

            console.log('released by ' + '@Model.OceanExportMbl.ReleaseBy')
            Swal.clickCancel();
        });

        $('#OceanExportMbl_IsReleased').change(function () {
            if (this.checked) {
                $('#OceanExportMbl_MblReleaseDate').removeAttr("disabled").val(getDate());
                $('#releasedBy').val('@(CurrentUser.Name + ' ' + CurrentUser.SurName)');
            }
            else {
                $('#OceanExportMbl_MblReleaseDate').attr("disabled", "disabled").val('');
                $('#releasedBy').attr("disabled", "disabled").val('');
            }
        });


        function addHBtn() {
            var url = "/OceanExports/EditModal?Id=@Model.Id&NewHbl=1";
            location.href = url;
        }
        function addCardRight(hblNo, soNo, cladClass) {
            var cardHtml = "<div class='borad-anchor focus' ><div class='borad-cont' >"
            cardHtml = cardHtml + "<a class='link' href='#javascript:void(0)'></a>"
            cardHtml = cardHtml + "<span class='label label-HBL'>HB/L</span><span class='MBLnumber'>Add</span>"
            cardHtml = cardHtml + "</div></div>"
            return cardHtml;
        }
        function changeHid(Mid, Hid) {
            location.href = '/OceanExports/EditModal?Id=' + Mid + "&Hid=" + Hid
        }

        function getDate() {
            var date = new Date();
            var dd = date.getDate();
            var mm = date.getMonth() + 1;
            var yyyy = date.getFullYear();
            var todayDate = mm + "/" + dd + "/" + yyyy;
            return todayDate;
        }

        function deleteHbl() {
            abp.message.confirm(l('DeletionConfirmationMessage'))
                .then(function (confirmed) {
                    if (confirmed) {
                        dolphin.freight.importExport.oceanExports.oceanExportHbl
                            .delete($('#OceanExportHbl_Id').val())
                            .then(function () {
                                abp.message.success(l('SuccessfullyDeleted'));
                                $('#hblCard').remove();
                                $('#hblCards').find('.card-body.show').closest('.card.board-item').remove()
                            });
                    }
                });
        }

        function lockUnlockMbl(id) {
            var isLock = $('#lockButtonMbl').find('i').hasClass('fa-lock');
            abp.message.confirm(l(isLock ? 'LockConfirmationMessage' : 'UnlockConfirmationMessage')).then(function (confirmed) {
                if (confirmed) {
                    Swal.fire({
                        title: 'Loading...',
                        didOpen: () => {
                            Swal.showLoading()
                        }
                    })
                    dolphin.freight.importExport.oceanExports.oceanExportMbl.lockedOrUnLockedOceanExportMbl({ MbId: id })
                        .done(function () {
                            Swal.clickCancel();
                            if (isLock) {
                                $('#lockButtonMbl').empty().html('<i class="fa fa-lock-open"></i> ' + l("Btn:UnLock"));
                                $('#ActionDropMbl').empty().html('<i class="fa fa-lock"></i> ' + l("Display:Function"));
                                abp.message.success(l('Message:SuccessLock'));
                            } else {
                                $('#ActionDropMbl').empty().html('<i class="fa fa-lock-open"></i> ' + l("Display:Function"));
                                $('#lockButtonMbl').empty().html('<i class="fa fa-lock"></i> ' + l("Btn:Lock"));
                                abp.message.success(l('Message:SuccessUnlock'));
                            }
                        });
                }
            });
        }

        


        function deleteMbl() {
            var url = new URL(window.location.href);
            var mblId = url.searchParams.get('Id');
            abp.message.confirm(l('DeletionConfirmationMessage'))
                .then(function (confirmed) {
                    if (confirmed) {
                        dolphin.freight.importExport.oceanExports.oceanExportMbl
                            .delete(mblId)
                            .then(function () {
                                abp.message.success(l('SuccessfullyDeleted')).done(function () {
                                    location.href = '/OceanExports/Index';
                                });
                            });
                    }
                })
        }

        function getReportTelexrelease() {
            myWindow = window.open("@Url.Action("Telexrelease", "Docs", new { oceanExportMblId = Model.Id })", 'Telexrelease', 'width=1200,height=800');
            myWindow.focus()
        }
        function gotoReport(rindex) {
            var url = "";
            var pname = "";
            switch (rindex) {
                default:
                    url = '@Url.Action("Car", "Docs")';
                    pname = "Car";
                    break;
                case 2:
                    url = '@Url.Action("Cargo", "Docs")';
                    pname = "Cargo";
                    break;
                case 3:
                    url = '@Url.Action("Box", "Docs")';
                    pname = "Box";
                    break;
                case 4:
                    url = '@Url.Action("ProfitSummary", "Docs", new { oceanExportMblId = Model.Id })';
                    pname = "ProfitSummary";
                    break;
                case 5:
                    url = '@Url.Action("ProfitDetail", "Docs", new { oceanExportMblId = Model.Id })';
                    pname = "ProfitDetail";
                    break;
                case 6:
                    var idNo = $('#OceanExportHbl_Id').val();
                    url = '@Url.Action("Shipment", "Docs")' + "?id=" + idNo;
                    pname = "Shipment";
                    break;
                case 7:
                    var idNo = $('#OceanExportHbl_Id').val();
                    url = '@Url.Action("OBL", "Docs")' + "?id=" + idNo;
                    pname = "OBL";
                    break;
            }
            myWindow = window.open(url, pname, 'width=1200,height=800')
            myWindow.focus()
        }
        function getReportPackageLabel() {
            myWindow = window.open("@Url.Action("PackageLabel", "Docs", new { oceanExportMblId = Model.Id })", 'PackageLabel', 'width=1200,height=800');
            myWindow.focus()
        }

        function getReportPackage() {
            myWindow = window.open("@Url.Action("Package", "Docs")", 'Package', 'width=1200,height=800');
            myWindow.focus()
        }

        function getReportHblPackageLabel() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("HblPackageLabel", "Docs")" + "?id=" + idNo, 'HblPackageLabel', 'width=1200,height=800');
            myWindow.focus()
        }

        function getReportBookingConfirmation() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("BookingConfirmation", "Docs")" + "?id=" + idNo, 'BookingConfirmation', 'width=1200,height=800');
            myWindow.focus()
        }

        function getReportBankDraft() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("BankDraft", "Docs")" + "?id=" + idNo, 'BankDraft', 'width=1500,height=800');
            myWindow.focus()
        }

        function getReportHblClauses() {
            myWindow = window.open("@Url.Action("HblClauses", "Docs")", 'HblClauses', 'width=1500,height=800');
            myWindow.focus()
        }

        function getPreAlert() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("PreAlert", "Docs")" + "?id=" + idNo, 'PreAlert', 'width=1200,height=800');
            myWindow.focus()
        }
        function getCertificateOfOrigin() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("CertificateOfOrigin", "Docs")" + "?id=" + idNo, 'CertificateOfOrigin', 'width=1200,height=800');
            myWindow.focus()
        }
        function getDockRecepit() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("DockRecepit", "Docs")" + "?id=" + idNo, 'DockRecepit', 'width=1200,height=800');
            myWindow.focus()
        }
        function getUsdaHeatTreatment() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("UsdaHeatTreatment", "Docs")" + "?id=" + idNo, 'UsdaHeatTreatment', 'width=1200,height=800');
            myWindow.focus()
        }
        function getForwarderCargoReceipt() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("ForwarderCargoReceipt", "Docs")" + "?id=" + idNo, 'ForwarderCargoReceipt', 'width=1200,height=800');
            myWindow.focus()
        }
        function getHbl() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("Hbl", "Docs")" + "?id=" + idNo, 'Hbl', 'width=1200,height=800');
            myWindow.focus()
        }
        function getCommercialInvoice() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("CommercialInvoice", "Docs")" + "?Id=" + idNo, 'CommercialInvoice', 'width=1200,height=800');
            myWindow.focus()
        }
        function getPickupDeliveryOrder() {
            var idNo = $('#OceanExportMbl_Id').val();
            myWindow = window.open("@Url.Action("PickupDeliveryOrder", "Docs")" + "?id=" + idNo, 'PickupDeliveryOrder', 'width=1200,height=800');
            //myWindow = window.open("@Url.Action("PickupDeliveryOrder", "Docs")", 'PickupDeliveryOrder', 'width=1200,height=800');
            myWindow.focus()
        }
        function getPreliminaryClaim() {
            var idNo = $('#OceanExportHbl_Id').val();
            myWindow = window.open("@Url.Action("PreliminaryClaimOceanExport", "Docs")" + "?id=" + idNo + "&pageType=4", 'PreliminaryClaimOceanExport', 'width=1200,height=800');
            //myWindow = window.open("@Url.Action("PickupDeliveryOrder", "Docs")", 'PickupDeliveryOrder', 'width=1200,height=800');
            myWindow.focus()
        }
        function getBookingPackingList() {
            //var idNo = $('#OceanExportHbl_Id').val();
            //myWindow = window.open("@Url.Action("BookingPackingList", "Docs")" + "?id=" + idNo, 'BookingPackingList', 'width=1200,height=800');
            myWindow = window.open("@Url.Action("BookingPackingList", "Docs")", 'BookingPackingList', 'width=1200,height=800');
            myWindow.focus()
        }
        function getManifest() {
            var idNo = $('#OceanExportHbl_Id').val();
            var report = $('input[name=report]:checked').val()
            var reportType = $('input[name=report-type]:checked').val()
            myWindow = window.open("@Url.Action("Manifest", "Docs")" + "?id=" + idNo + "&report=" + report + "&reportType=" + reportType, 'Manifest', 'width=1200,height=800');
            myWindow.focus()
        }

        $('#addHBtn').on('click', function () {
            if ($('#mblDiv')[0].classList.contains('show')) {
                $('#btnMawbCollapse').click();
            }

            if ($('#btnHawbCardCollapse_0').length) {
                showAlert(alertConfirmation2, 'Store');
            }
            else {

                let hawbcard = createHawbCard();

                let index = $('.hbl_sm_area').find('.card').length;
                hawbcard = setHawbCardValues(hawbcard, '00000000-0000-0000-0000-000000000000', '0', index);

                $('#hblCards').append(hawbcard);

                setTimeout(() => {
                    $('.hblCardTitle')[index].click();
                }, 500);
            }
        })

        $('#editForm').on('abp-ajax-success', function (result, rs) {
            console.log("enter here");
            event.preventDefault();
            abp.message.success('Successfully Saved').then(function () {
                location.href = "/OceanExports/Index";
            });
            //location.href = '/AirImports/EditMawb/' + rs.responseText.id + '/show';
        });

        $('#hblMainCard').append('#mawbCard');

        function onHawbCardClick(e, hawbId) {
            debugger;
            var element = e.currentTarget || e.target || e.srcElement;
            var hblNo = element.id.split('_')[1];

            if ($('#btnHawbCardCollapse_0').length && hblNo != 0) {
                HAWBNO = hblNo;
                showAlert(alertConfirmation, 'Continue');
            }
            else {
                var color = getComputedStyle(element.parentElement.parentElement).backgroundColor;

                if (!$('#btnHawbCardCollapse_' + hblNo).attr('class').includes('collapsed')) {
                    $('.hblCardHawbNo').addClass('d-none');
                    $('#hblCard_' + hblNo).removeClass('d-none');
                }
                else {

                    var ajaxParams = undefined;

                    Swal.fire({
                        title: 'Loading...',
                        didOpen: () => {
                            Swal.showLoading()
                        }
                    })

                    abp.ajax($.extend(true, {
                        url: abp.appPath + 'api/ImportExport/OceanExportBasicHbl?Id=' + hawbId,
                        type: 'GET',
                        dataType: "html",
                    }, ajaxParams)).done(function (partial) {
                        $('#partialContainer').html('');
                        $('#partialContainer').html(partial);
                        $('#hblCard').find('.card-header').attr('style', 'background:' + color + ';color:white')
                        Swal.clickCancel();
                        if (isLocked == 'True') abp.message.warn(l("Message:LockMessage"));
                        setTimeout(() => {
                            initializeDropdownSearch("OceanExportHbl_HblShipperId", 1);
                            initializeDropdownSearch("OceanExportHbl_HblCustomerId");
                            initializeDropdownSearch("OceanExportHbl_HblBillToId");
                            initializeDropdownSearch("OceanExportHbl_HblConsigneeId");
                            initializeDropdownSearch("OceanExportHbl_HblNotifyId", 1);
                            initializeDropdownSearch("OceanExportHbl_AgentId", 1);
                            initializeDropdownSearch("OceanExportHbl_ForwardingAgentId", 1);
                            initializeDropdownSearch("OceanExportHbl_ReceivingAgentId", 1);
                            initializeDropdownSearch("OceanExportHbl_PorId", 1);
                            initializeDropdownSearch("OceanExportHbl_PolId", 1);
                            initializeDropdownSearch("OceanExportHbl_PodId", 1);
                            initializeDropdownSearch("OceanExportHbl_DelId", 1);
                            initializeDropdownSearch("OceanExportHbl_FdestId", 1);
                            initializeDropdownSearch("OceanExportHbl_EmptyPickupId");
                            initializeDropdownSearch("OceanExportHbl_TruckerId", 1);
                            initializeDropdownSearch("OceanExportHbl_CustomsBrokerId", 1);
                            initializeDropdownSearch("OceanExportHbl_FbaFcId");
                            initializeDropdownSearch("OceanExportHbl_DeliveryToId", 1);
                            initializeDropdownSearch("OceanExportHbl_CargoPickupId");
                            initializeDropdownSearch("OceanExportHbl_FreightTermForBuyerId");
                            initializeDropdownSearch("OceanExportHbl_FreightTermForSalerId");
                            initializeDropdownSearch("OceanExportHbl_ShipModeId");
                            initializeDropdownSearch("OceanExportHbl_SvcTermFromId");
                            initializeDropdownSearch("OceanExportHbl_SvcTermToId");
                            initializeDropdownSearch("OceanExportHbl_MblSalesTypeId");
                            initializeDropdownSearch("OceanExportHbl_CancelReason");
                            initializeDropdownSearch("OceanExportHbl_MblReferralById");
                            initializeDropdownSearch("OceanExportHbl_CargoTypeId");
                            initializeDropdownSearch("OceanExportHbl_HblSaleId");
                        }, 500);
                    })

                    $('.btnHawbCardCollapse').each(function (i, e) {
                        let tempHawbNo = e.id.split('_')[1];
                        if (tempHawbNo == hblNo) {
                            $('#btnHawbCardCollapse_' + hblNo).click();
                        }
                        else {
                            $('#btnHawbCardCollapse_' + tempHawbNo).addClass('collapsed');
                            $('#btnHawbCardCollapse_' + tempHawbNo).attr('aria-expanded', 'false');
                            $('#hawbCard_' + i).removeClass('show');
                        }
                    })
                }
            }
        }

        function createHawbCard() {
            let abpCard = '<div class="{{divClass}}"><div class="card-header pointer"><h5 class="card-title hblCardTitle" id="title_{{hblNo}}"' +
                ' onclick="onHawbCardClick(event,{{hblCardId}})">{{hblNo}}</h5>' +
                ' <button type="button" class="btn d-none btn-collapse collapsed btnHawbCardCollapse" data-val="{{index}}" data-bs-toggle="collapse" id="btnHawbCardCollapse_{{hblNo}}" data-bs-target="#{{cardBodyId}}" aria-expanded="false" aria-controls="mawbDiv">' +
                ' <i class="fa fa-caret-down" style="color:#FFFFFF;"></i></button > </div><div class="card-body collapse" id="{{cardBodyId}}" style="min-height:150px !important"></div>';
            return abpCard;
        }

        function setHawbCardValues(abpcard, cardId, hblNo, index) {
            let apbCardClass = 'card board-item hbl-sm-' + index;
            let cardBodyId = 'hawbCard_' + index;
            cardId = "'" + cardId + "'";

            abpcard = abpcard.replaceAll("{{divClass}}", apbCardClass);
            abpcard = abpcard.replaceAll("{{hblNo}}", hblNo);
            abpcard = abpcard.replaceAll("{{hblCardId}}", cardId);
            abpcard = abpcard.replaceAll("{{index}}", index);
            abpcard = abpcard.replaceAll("{{cardBodyId}}", cardBodyId);

            return abpcard;
        }

        function showAlert(funName, buttonName) {
            Swal.fire({
                icon: 'error',
                text: 'The data has not been saved, are you sure you want to ' + buttonName.toLowerCase() + '?',
                showCancelButton: true,
                confirmButtonText: buttonName,
            }).then(funName)
        }

        function alertConfirmation(result) {
            if (result.isConfirmed) {
                let indx = $('.hbl_sm_area').find('.card').length;
                $('#btnHawbCardCollapse_0').parent().parent().remove();
                if (HAWBNO) {
                    $('#title_' + HAWBNO).click()
                }
                else {
                    $('#hawbCard_' + (indx - 2)).parent().find('.card-title').click();
                }
            }
        }

        function alertConfirmation2() {
            $('#saveBtn').click();
        }

        function OpenInTrackTrace() {
            var MblNo = $('#OceanExportMbl_MblNo').val();
            myWindow = window.open('https://www.track-trace.com/bol#' + MblNo, '_blank', 'width=1200,height=1000');
            myWindow.focus();
        }

        function getManifestPopUp() {
            var url = new URL(window.location.href);
            var mblId = url.searchParams.get('Id');

            $.ajax({
                url: abp.appPath + 'Docs/ManifestOceanExportMBLPartial?mblId=' + mblId,
                type: 'GET',
                dataType: "html",
                success: function (res) {
                    $('#ManifestModal').html(res);
                    $('.modal.mymodal').modal('show');
                    $('#frmManifest').find('.modal.fade').removeClass('modal fade');
                }
            });
        }
        function lockUnlockHbl(id) {
            var isLock = $('#lockButtonHbl').find('i').hasClass('fa-lock');
            abp.message.confirm(l(isLock ? 'UnlockConfirmationMessage' : 'LockConfirmationMessage')).then(function (confirmed) {
                if (confirmed) {
                    Swal.fire({
                        title: 'Loading...',
                        didOpen: () => {
                            Swal.showLoading()
                        }
                    })
                    dolphin.freight.importExport.oceanExports.oceanExportHbl.lockedOrUnLockedOceanExportHbl({ HblId: id })
                        .done(function () {
                            Swal.clickCancel();
                            if (isLock) {
                                $('#ActionDropHbl').empty().html('<i class="fa fa-lock"></i> ' + l("Display:Function"));
                                $('#lockButtonHbl').empty().html('<i class="fa fa-lock-open"></i> ' + l("Btn:UnLock"));
                                abp.message.success(l('Message:SuccessLock'));

                            } else {
                                $('#ActionDropHbl').empty().html('<i class="fa fa-lock-open"></i> ' + l("Display:Function"));
                                $('#lockButtonHbl').empty().html('<i class="fa fa-lock"></i> ' + l("Btn:Lock"));
                                abp.message.success(l('Message:SuccessUnlock'));
                            }
                            
                           
                        });
                }
            });
        }


    </script>
}
<div class="page-header">
    <abp-breadcrumb>
        <abp-breadcrumb-item href="#" title=@L["Menu:Home"] />
        <abp-breadcrumb-item title=@L["Menu:OceanExports"] />
        <abp-breadcrumb-item title=@L["Menu:OceanExports.CreateMbl"] />
    </abp-breadcrumb>

    <nav class="submenu">
        <ol>
            <li class="menu-item ">
                <a class="nav-link " href="javascript:void(0)">@L["Tab:Basic"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link  " href="EditModal2?Id=@Model.Id&Hid=@Model.Hid">@L["Tab:Container"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link  " href="EditModal3?Id=@Model.Id">@L["Tab:Accounting"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link  " href="EditModal4?Id=@Model.Id">@L["Tab:Doc"]</a>
            </li>
        </ol>
    </nav>
</div>
<div class="page-content-area">

   
        <form submit-button="true" data-ajaxForm="true" id="editForm">
            <abp-row>
                <abp-column class="col-xl-9 col-lg-12 col-md-12 col-sm-12">
                     <div class="board-wrap">
                    <abp-card class="card board-item">
                        <abp-card-header class="card-header active" style="background:#555555;color:#FFFFFF;">
                            <abp-card-title>
                                MB/L
                                <span id="title0">@Model.OceanExportMbl.MblNo </span>
                                @if (@Model.OceanExportMbl.PolName != null)
                                {
                                    <span id="title1" style="font-size:0.8em;">@Model.OceanExportMbl.PolName</span>
                                }
                                @if (@Model.OceanExportMbl.PolEtd != null)
                                {
                                    <span id="title2" style="font-size:0.8em;">@Html.DisplayFor(Model => @Model.OceanExportMbl.PolEtd) </span>
                                }
                                @if (@Model.OceanExportMbl.PodName != null)
                                {
                                    <i class="fa fa-caret-right"></i> <span id="title3" style="font-size:0.8em;">@Model.OceanExportMbl.PodName</span>
                                }

                                @if (Model.OceanExportMbl.PodEta != null)
                                {
                                    <span id="title4" style="font-size:0.8em;">@Html.DisplayFor(Model => Model.OceanExportMbl.PodEta) </span>
                                }
                                @if (Model.OceanExportMbl.VesselName != null && Model.OceanExportMbl.VesselName != "")
                                {
                                    <span id="title5" style="font-size:0.8em;"><i class="fa fa-anchor"></i> @Model.OceanExportMbl.VesselName </span>

                                }
                                @if (Model.OceanExportMbl.MblCarrierId != null)
                                {
                                    <span class="mbl_note _max-w12per">
                                        <i class="fa fa-ship"></i> @Model.OceanExportMbl.MblCarrierName
                                    </span>
                                }
                            </abp-card-title>



                            <div class="btn-group dropdown">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="ActionDropMbl" data-bs-toggle="dropdown">
                                    
                                </button>
                                <div class="dropdown-menu " aria-labelledby="dropdownMenuButton1" id="ActionDropMbl">
                                    <a class='dropdown-item' id="lockButtonMbl" href='javascript:void(0)' onclick="lockUnlockMbl('@Model.OceanExportMbl.Id')">
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)'>
                                        <i class="fa fa-files-o"></i> @L["Btn:Copy"]
                                    </a>
                                    <a class='dropdown-item' id="deleteButtonMbl" href='javascript:void(0)' onclick="deleteMbl()" style="display:none">
                                        <i class="fa fa-trash-o"></i> @L["Btn:Delete"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)'>
                                        <i class="fa fa-file-text-o"></i> @L["e-SI"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)'>
                                        <i class="fa fa-file-text-o"></i> @L["GoFreight EDI"]
                                    </a>
                                    <div class="dropdown-divider"></div>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="getMBLDocPackagePopUp()">
                                        <i class="fa fa-files-o"></i> @L["Btn:Document Package"]          
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("PrintMBLInstruction", "Docs", new { id = Model.OceanExportMbl.Id, pageType = Dolphin.Freight.Common.FreightPageType.OEMBL })')">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Print MB/L | B/L Instruction"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="getPickupDeliveryOrder()">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Dispatch List"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="getManifestPopUp()">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Manifest"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("PackagingListOceanExportMBL", "Docs", new { id = Model.OceanExportMbl.Id, pageType = Dolphin.Freight.Common.FreightPageType.OEMBL })')">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Packing List"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="getReportTelexrelease()">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Telex Release"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("MBLPackageLabelOceanExportMBL", "Docs", new { id = Model.OceanExportMbl.Id, pageType = Dolphin.Freight.Common.FreightPageType.OEMBL })')">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:MBL Package Label"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("AllHblPackageLabelOceanExportMBL", "Docs", new { mblId = Model.OceanExportMbl.Id })')" id="RP" name="RP">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:All HBL Package Labels"]
                                    </a>
                                    <div class="dropdown-divider"></div>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("MblProfitReportSummary", "Docs", new { id = Model.OceanExportMbl.Id, pageType = Dolphin.Freight.Common.FreightPageType.OEMBL })')">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Profit Report - Summary"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("MblProfitReportDetailed", "Docs", new { id = Model.OceanExportMbl.Id, pageType = Dolphin.Freight.Common.FreightPageType.OEMBL })')">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Profit Report - Detailed"]
                                    </a>
                                    <div class="dropdown-divider"></div>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenInTrackTrace()">
                                        <i class="fa fa-cube"></i> @L["Btn:Open in Track-Trace"]
                                    </a>
                                </div>
                            </div>
                            <button class="btn btn-collapse " type="button" data-bs-toggle="collapse" data-bs-target="#mblDiv" aria-expanded="true" aria-controls="mblDiv">
                            </button>

                        </abp-card-header>
                        <abp-card-body class="collapse show customForm" id="mblDiv">
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    <input type="hidden" name="ShipmentNo" id="ShipmentNo">
                                    <abp-input class="form-control" asp-for="OceanExportMbl.FilingNo" disabled="true" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.MblNo" />
                                    <input type="hidden" name="OceanExportMbl.Id" id="OceanExportMbl_Id" value="@Model.Id" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.OfficeId", AspItems = _dropdown.SubstationLookupList, IsShowLabel = true, FieldName = "OfficeId", SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.OfficeId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.BlTypeId", AspItems = _dropdown.BlTypeLookupList, IsShowLabel = true, FieldName = "BlTypeId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.BlTypeId) })
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PostDate" readonly="true" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.SoNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.ItnNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.MblCarrierId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblCarrierName", SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.MblCarrierId) })
                                    <input type="hidden" name="OceanExportMbl.MblCarrierId" id="mMblCarrierId" value="@Model.OceanExportMbl.MblCarrierId" />
                                    <input type="hidden" name="OceanExportMbl.MblCarrierContent" id="mMblCarrierContent" value="@Model.OceanExportMbl.MblCarrierContent" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-6">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.BlAcctCarrierId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "BlAcctCarrierId", SelectType = 0, ShowFiledContentValue = Model.OceanExportMbl.BlAcctCarrierContent })
                                    <input type="hidden" name="OceanExportMbl.BlAcctCarrierId" id="mBlAcctCarrierId" value="@Model.OceanExportMbl.BlAcctCarrierId" />
                                    <input type="hidden" name="OceanExportMbl.BlAcctCarrierContent" id="mBlAcctCarrierContent" value="@Model.OceanExportMbl.BlAcctCarrierContent" />

                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.ShippingAgentId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "ShippingAgentId", SelectType = 0, ShowFiledContentValue = Model.OceanExportMbl.ShippingAgentId.ToString() })

                                    <input type="hidden" name="OceanExportMbl.ShippingAgentId" id="mShippingAgentId" value="@Model.OceanExportMbl.ShippingAgentId" />
                                    <input type="hidden" name="OceanExportMbl.ShippingAgentContent" id="mShippingAgentContent" value="@Model.OceanExportMbl.ShippingAgentContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.MblOverseaAgentId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblOverseaAgentName", SelectType = 0, ShowFiledContentValue = Model.OceanExportMbl.MblOverseaAgentId.ToString() })

                                    <input type="hidden" name="OceanExportMbl.MblOverseaAgentId" id="mMblOverseaAgentId" value="@Model.OceanExportMbl.MblOverseaAgentId" />
                                    <input type="hidden" name="OceanExportMbl.MblOverseaAgentContent" id="mMblOverseaAgentContent" value="@Model.OceanExportMbl.MblOverseaAgentContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.MblNotifyId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "Notify", SelectType = 0, ShowFiledContentValue = Model.OceanExportMbl.MblNotifyId.ToString() })

                                    <input type="hidden" name="OceanExportMbl.MblNotifyId" id="mMblNotifyId" value="@Model.OceanExportMbl.MblNotifyId" />
                                    <input type="hidden" name="OceanExportMbl.MblNotifyContent" id="mMblNotifyContent" value="@Model.OceanExportMbl.MblNotifyContent" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-6 mt-6"></abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.ForwardingAgentId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "ForwardingAgentId", SelectType = 0, ShowFiledContentValue = Model.OceanExportMbl.ForwardingAgentId.ToString() })
                                    <input type="hidden" name="OceanExportMbl.ForwardingAgentId" id="mForwardingAgentId" value="@Model.OceanExportMbl.ForwardingAgentId" />
                                    <input type="hidden" name="OceanExportMbl.ForwardingAgentContent" id="mForwardingAgentContent" value="@Model.OceanExportMbl.ForwardingAgentContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.CoLoaderId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["CoLoaderId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.CoLoaderId) })
                                    <input type="hidden" name="OceanExportMbl.CoLoaderId" id="mCoLoaderId" value="@Model.OceanExportMbl.CoLoaderId" />
                                    <input type="hidden" name="OceanExportMbl.CoLoaderContent" id="mCoLoaderContent" value="@Model.OceanExportMbl.CoLoaderContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                     
                                     <label for="CareOfId" class="form-label">C/O <input type="checkbox" name="OceanExportMbl.IsUsedCareOf" id="OceanExportMbl_IsUsedCareOf" value="true" /></label>
                                      @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.CareOfId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = false, FieldName = "", /*SelectType = 1,*/ ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.CareOfContent) })
                                     <input type="hidden" name="OceanExportMbl.CareOfId" id="mCareOfId" value="@Model.OceanExportMbl.CareOfId" />
                                    <input type="hidden" name="OceanExportMbl.CareOfContent" id="mCareOfContent" value="@Model.OceanExportMbl.CareOfContent" />
                                  
                                </abp-column>
                                 
                                <abp-column size-md="_3">
                                                                
  <label class="form-label" for="@Model.OceanExportMbl.MblOperatorId">
      @L["OP"]
      </label>
                                  <div class="d-flex dropdown form-control form-control-fix">
    
<select name="@Model.OceanExportMbl.MblOperatorId" id="@Model.OceanExportMbl.MblOperatorId" class="filteredDropdown form-select form-control cursor-pointer" disabled="true")>
    <option></option>
  
     
           <option value='@CurrentUser.Id' selected> @(CurrentUser.Name + " " + CurrentUser.SurName) </option>
      
    
</select>
</div>

<ul class="dropdown-menu " aria-labelledby="@Model.OceanExportMbl.MblOperatorId" id="dropdownMenuButton_@Model.OceanExportMbl.MblOperatorId">
</ul>


                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.CarrierContractNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label for="OceanExportMbl_IsDirect" class="customCheck">@L["IsDirect"]<input type="checkbox" name="OceanExportMbl.IsDirect" id="OceanExportMbl.IsDirect" value="true" checked="@Model.OceanExportMbl.IsDirect" /></label>
                                </abp-column>
                                <abp-column size-md="_6">

                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column>
                                    &nbsp;
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.VesselName" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.Voyage" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.PorId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "PorName", SelectType = 0, ShowFiledContentValue = Model.OceanExportMbl.PorId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PorEtd" type="datetime-local" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.PolId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "PolName", SelectType = 0, ShowFiledContentValue = Model.OceanExportMbl.PolId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PolEtd" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.PodId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "PodName", SelectType = 0, ShowFiledContentValue = Model.OceanExportMbl.PodId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PodEta" />
                                </abp-column>
                            </abp-row> 
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.DelId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "DelName", SelectType = 0, ShowFiledContentValue = Model.OceanExportMbl.DelId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.DelEta" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.FdestId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "FdestId", SelectType = 0, ShowFiledContentValue = Model.OceanExportMbl.FdestId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.FdestEta" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.EmptyPickupId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "EmptyPickupId", SelectType = 0, ShowFiledContentValue = Model.OceanExportMbl.EmptyPickupId.ToString() })
                                    <input type="hidden" name="OceanExportMbl.EmptyPickupId" id="mEmptyPickupId" value="@Model.OceanExportMbl.EmptyPickupId" />
                                    <input type="hidden" name="OceanExportMbl.EmptyPickupContent" id="mEmptyPickupContent" value="@Model.OceanExportMbl.EmptyPickupContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.DeliveryToId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "DeliveryToId", SelectType = 0, ShowFiledContentValue = Model.OceanExportMbl.DeliveryToId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                   
                                           <label class="form-label" asp-for="OceanExportMbl.PreCarriageVesselNameId"></label>
                                        <div  class="d-flex flex-row">
                                                <div class="col-6 pl-0 pe-0">
                                            @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.PreCarriageVesselNameId", AspItems = _dropdown.PreCarriageVesselLookupList, IsShowLabel = false, FieldName = "PreCarriageVesselNameId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.PreCarriageVesselNameId) })
                                         </div>
                                           
                                        
                                            <div class="col-6 pl-0 pe-0">
                                            <input class="form-control form-control-xl" type="text" value="@Model.OceanExportMbl.PrepreCarriageVoyage" name="OceanExportMbl.PrepreCarriageVoyage" />
                                     </div>   
                                        </div>
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column>
                                    &nbsp;
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.FreightTermId", AspItems = _dropdown.FreightTermLookupList, IsShowLabel = true, FieldName = "FreightTermId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.FreightTermId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.ShipModeId", AspItems = _dropdown.ShipModeLookupList, IsShowLabel = true, FieldName = "ShipModeId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.ShipModeId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.SvcTermFromId", AspItems = _dropdown.SvgTermLookupList, IsShowLabel = true, FieldName = "SvcTermFromId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.SvcTermFromId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.SvcTermToId", AspItems = _dropdown.SvgTermLookupList, IsShowLabel = true, FieldName = "SvcTermToId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.SvcTermToId) })
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.DisplayMblContainerSizeQtyInfo" readonly="true" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.OblTypeId", AspItems = _dropdown.OblTypeLookupList, IsShowLabel = true, FieldName = "OblTypeId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.OblTypeId) })
                                </abp-column>
                                <abp-column size-md="_6">
                                    &nbsp;
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.DocCutOffTime" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PortCutOffTime" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.VgmCutOffTime" />
                                </abp-column>
                                <abp-column size-md="_3">

                                    <abp-input asp-for="OceanExportMbl.RailCutOffTime" />

                                </abp-column>

                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    <abp-row>
                                        <abp-column>
                                            <label for="OceanExportMbl_IsCanceled" class="form-label">@L["IsCanceled"] <input type="checkbox" name="OceanExportMbl.IsCanceled" id="OceanExportMbl_IsCanceled" value="true" /></label>

                                            <input type="text" id="OceanExportMbl_CanceledDate" name="OceanExportMbl.CanceledDate" value="" class="form-control " readonly>

                                        </abp-column>
                                    </abp-row>

                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.CancelByName" readonly="true" />
                                    <input type="hidden" name="OceanExportMbl.CancelById" class="form-control" id="OceanExportMbl_CancelById" value="@Model.OceanExportMbl.CancelById" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.CancelReason", AspItems = _dropdown.CancelReasonLookupList, IsShowLabel = true, FieldName = "CancelReason", ShowFiledContentValue = Model.OceanExportMbl.CancelReason })
                                    <input type="hidden" name="OceanExportMbl.CancelReason" id="mMblCancelReason" value="@Model.OceanExportMbl.CancelReason" />
                                </abp-column>
                                <abp-column size-md="_3"></abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    <div class="mb-3">
                                        @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.MblReferralById", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblReferralById", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.MblReferralById) })
                                        <input type="hidden" name="OceanExportMbl.MblReferralById" id="mMblReferralById" value="@Model.OceanExportMbl.MblReferralById" />
                                        <input type="hidden" name="OceanExportMbl.MblReferralByContent" id="mMblReferralByContent" value="@Model.OceanExportMbl.MblReferralByContent" />
                                    </div>
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label for="OceanExportMbl_IsBookingAgent" class="form-label customCheck">@L["IsBookingAgent"]<input type="checkbox" name="OceanExportMbl.IsBookingAgent" id="OceanExportMbl_IsBookingAgent" value="true" checked="" /></label>
                                </abp-column>
                                @if (Model.OceanExportMbl.IsReleased == true)
                                {
                                    <abp-column size-md="_3">
                                        <label for="CareOfId" class="form-label">@L["IsReleased"]<input type="checkbox" name="OceanExportMbl.IsReleased" id="OceanExportMbl_IsReleased" value="true" @(Model.OceanExportMbl.IsReleased ? "checked" : "") /></label>
                                        <input asp-for="OceanExportMbl.MblReleaseDate" class="form-control" type="date" />
                                    </abp-column>
                             @*       <abp-row>

                                        <abp-column size-md="_5"><label for="CareOfId" class="form-label">@L["IsReleased"]<input type="checkbox" name="OceanExportMbl.IsReleased" id="OceanExportMbl_IsReleased" value="true" @(Model.OceanExportMbl.IsReleased ? "checked" : "") /></label></abp-column>
                                        <abp-column size-md="_7"><input asp-for="OceanExportMbl.MblReleaseDate" class="form-control form-label" type="date" /></abp-column>

                                    </abp-row>*@
                                    <abp-column size-md="_3">
                                        <label class="form-label" >@L["ReleaseById"]</label>
                                        <input id="releasedBy" value="@(CurrentUser.Name + ' ' + CurrentUser.SurName)" class="form-control" readonly />
                                        <input  type="hidden" asp-for="OceanExportMbl.ReleaseById" value="@Model.OceanExportMbl.ReleaseById" />
                                    </abp-column>
                                }
                                else
                                {
                                    <abp-column size-md="_3">
                                      <label for="CareOfId" class="form-label">@L["IsReleased"]<input type="checkbox" name="OceanExportMbl.IsReleased" id="OceanExportMbl_IsReleased" value="true" /></label>
                                                <input asp-for="OceanExportMbl.MblReleaseDate" class="form-control " type="date" disabled />
                                    </abp-column>
                                    <abp-column size-md="_3">
                                       
                                             <label class="form-label">@L["ReleaseById"]</label>
                                                <input id="releasedBy" value="" class="form-control" readonly />
                                         
</abp-column>

                                    
                                }
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    &nbsp;
                                </abp-column>
                                <abp-column size-md="_3">
                                    &nbsp;
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.OnBoardDate" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <button type="button" id="checkHideBtn" class="expandBtn">
                                        <i class="fa fa-plus" id="showLi"></i>
                                        <i class="fa fa-minus" id="hideLi"></i>
                                    </button>
                                    @L["Title:MoreInfo"]
                                    <input type="hidden" id="isHide" value="@Model.OceanExportMbl.GetHideCheck()" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="hideArea mb-3">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.SubBlNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input label="Service Contact No" asp-for="OceanExportMbl.ServiceContactNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input label="Forward Ref No" asp-for="OceanExportMbl.ForwardRefNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.TransPort1Id", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "Transshipment Port", SelectType = 0, ShowFiledContentValue = Model.OceanExportMbl.TransPort1Id.ToString() })
                                    <input type="hidden" name="OceanExportMbl.TransPort1Id" id="mTransPort1Id" value="@Model.OceanExportMbl.TransPort1Id" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="hideArea mb-3">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.Trans1Eta" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.EctNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PrnNo" />
                                </abp-column>
                                <abp-column size-md="_3" class="expandCheck">
                                    <abp-input asp-for="OceanExportMbl.IsEcommerce" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column>
                                    <abp-card-header style="background:#cccccc;color:#FFFFFF;">
                                        @L["Title:Memo"]
                                    </abp-card-header>
                                    <abp-card>
                                        <abp-card-body>
                                            <partial name="Memos/_Memo" model="new _MemoModel(Model.OceanExportMbl.Id, Dolphin.Freight.Common.FreightPageType.OEMBL)" />
                                        </abp-card-body>
                                    </abp-card>
                                </abp-column>
                            </abp-row>
                        </abp-card-body>
                    </abp-card>

                    <!-- HBL Card-->
                    <div id="partialContainer">
                    </div>
                    </div>
                </abp-column>

                <abp-column class="col-xl-3 col-lg-12 col-md-12 col-sm-12">
                    <div class="card-wrap">
                        <button class="btn btn-block btn-add" type="button" id="addHBtn">
                            <i class="fa-solid fa-plus"></i>@L["Btn:AddHbl"]
                        </button>
                        <div id="hblCards" class="hbl_sm_area">
                        </div>
                    </div>
                </abp-column>
            </abp-row>

        <abp-row class="mt-3" id="ejo">
                <abp-column>
                <div style="position: fixed; bottom: 55px; left: 0; right: 0; text-align:center;">
                    <abp-button class="btn btn-primary me-md-2" type="button" id="saveEditBtn">@L["Save"].Value</abp-button>
                </div>
                </abp-column>
            </abp-row>
        </form>
   
</div>

<input type="hidden" name="Id" id="Id" value="@Model.Id" />
<input type="hidden" name="OceanExportMbl.Id" id="OceanExportMbl_Id" value="@Model.Id" />
<input type="hidden" name="OceanExportMbl.OfficeId" id="mOfficeId" value="@Model.OceanExportMbl.OfficeId" />
<input type="hidden" name="OceanExportMbl.MblSalesTypeId" id="mMblSalesTypeId" value="@Model.OceanExportMbl.MblSalesTypeId" />
<input type="hidden" name="OceanExportMbl.PreCarriageVesselNameId" id="mPreCarriageVesselNameId" value="@Model.OceanExportMbl.PreCarriageVesselNameId" />
<input type="hidden" name="OceanExportMbl.SvcTermFromId" id="mSvcTermFromId" value="@Model.OceanExportMbl.SvcTermFromId" />
<input type="hidden" name="OceanExportMbl.SvcTermToId" id="mSvcTermToId" value="@Model.OceanExportMbl.SvcTermToId" />
<input type="hidden" name="OceanExportMbl.ShipModeId" id="mShipModeId" value="@Model.OceanExportMbl.ShipModeId" />
<input type="hidden" name="OceanExportMbl.FreightTermId" id="mFreightTermId" value="@Model.OceanExportMbl.FreightTermId" />
<input type="hidden" name="OceanExportMbl.BlTypeId" id="mBlTypeId" value="@Model.OceanExportMbl.BlTypeId" />
<input type="hidden" name="OceanExportMbl.PorId" id="mPorId" value="@Model.OceanExportMbl.PorId" />
<input type="hidden" name="OceanExportMbl.PolId" id="mPolId" value="@Model.OceanExportMbl.PolId" />
<input type="hidden" name="OceanExportMbl.PodId" id="mPodId" value="@Model.OceanExportMbl.PodId" />
<input type="hidden" name="OceanExportMbl.DelId" id="mDelId" value="@Model.OceanExportMbl.DelId" />
<input type="hidden" name="OceanExportMbl.FdestId" id="mFdestId" value="@Model.OceanExportMbl.FdestId" />
<input type="hidden" name="AddHbl" id="AddHbl" value="0" />

<div class="modal mymodal" id="ManifestModal" tabindex="-1" role="dialog">
</div>

<div class="modal" id="MBLDocumentPackageModal">
</div>

<script>
    var changeReport = function (sel) {
        if (sel.value === 'CARRIER')
            $('.reporttype').hide();
        else
            $('.reporttype').show();
    }

    function getMBLDocPackagePopUp() {
        $.ajax({
            url: '/Docs/DocumentPackageMBLPopupPartial?id=@Model.OceanExportMbl.Id',
            type: 'GET',
            dataType: "html",
            success: function (res) {
                $('#MBLDocumentPackageModal').html(res);
                $('#MBLDocumentPackageModal').modal('show');
            }
        });
    }

</script>