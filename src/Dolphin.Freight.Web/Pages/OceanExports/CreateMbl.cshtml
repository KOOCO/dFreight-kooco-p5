@page
@using Dolphin.Freight.Web.CommonService;
@using Volo.Abp.Users
@inject ICurrentUser CurrentUser
@using Dolphin.Freight.Localization
@using Dolphin.Freight.AirExports
@using Dolphin.Freight.Web.Pages.Components
@using Dolphin.Freight.Web.Pages.Shared;
@using Dolphin.Freight.Web.Pages.Shared.Memos;
@using Microsoft.Extensions.Localization
@model Dolphin.Freight.Web.Pages.OceanExports.CreateMblModel
@inject IStringLocalizer<FreightResource> L
@inject IDropdownService _dropdown 
@section styles
    {
        <style type="text/css">
           #ejo .btn-primary {
    color: #fff;
    background-color: rgb(25 28 32 / 52%);
    border-color: #000000;
}
        </style>
    @*<link href="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.39.0/css/tempusdominus-bootstrap-4.css" rel="stylesheet">*@
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" rel="stylesheet">
    @*<link href="~/global-styles.css" rel="stylesheet" />*@
}
@section scripts
    {
          @* <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script> *@
    @*<abp-script src="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.39.0/js/tempusdominus-bootstrap-4.min.js" />*@
    <abp-script src="/Pages/OceanExports/CreateMbl.js" />
@*
    Try Code*@
    @*<link rel="stylesheet" type="text/css" href="/jquery.datetimepicker.css" />
    <script src="/jquery.js"></script>
    <script src="/build/jquery.datetimepicker.full.min.js"></script>*@

    <script type="text/javascript">
        $(document).ready(function () {
            
            //For HBL Dropdowns
            setFilteredDropdown();
            
            var l = abp.localization.getResource('Freight');
            
            
            $("#addHBtn").click(function () {
                if ($('#mblDiv')[0].classList.contains('show')) {
                    $('#btnMblCollapse').click();
                }
                if ($('#btnHblCardCollapse_0').length) {
                    showAlert(alertConfirmation2, 'Store');
                }
                else {

                    let hblcard = createHblCard();

                    let index = $('.hbl_sm_area').find('.card').length;
                    hblcard = setHblCardValues(hblcard, '00000000-0000-0000-0000-000000000000', '0', index);

                    $('#hblCardDiv').append(hblcard);

                    setTimeout(() => {
                        $('.hblCardTitle')[index].click();
                    }, 500);
                }
            });


            $('#OceanExportMbl_IsReleased').on('change', function (e, val) { 
                if (this.checked) { 
                    $('#OceanExportMbl_MblReleaseDate').removeAttr('disabled');
                    $('#OceanExportMbl_ReleaseById').removeAttr('disabled');
                    $("#OceanExportMbl_MblReleaseDate").datepicker("setDate", new Date());
                    $('#releasedBy').val('@(CurrentUser.Name + " " + CurrentUser.SurName)');
                } 
                else{
                    $('#OceanExportMbl_MblReleaseDate').attr('disabled', 'disabled');
                    $("#OceanExportMbl_MblReleaseDate").datepicker("setDate", null);
                    $('#OceanExportMbl_ReleaseById').val(null);
                    $('#releasedBy').val(null);
                }
            })

        });

        function createHblCard() {
            let abpCard = '<div class="{{divClass}}"><div class="card-header pointer"><h5 class="card-title hblCardTitle" id="title_{{hblNo}}"' +
                ' onclick="onHblCardClick(event,{{hblCardId}})">{{hblNo}}</h5>' +
                ' <button type="button" class="btn d-none btn-collapse collapsed btnHblCardCollapse" data-val="{{index}}" data-bs-toggle="collapse" id="btnHblCardCollapse_{{hblNo}}" data-bs-target="#{{cardBodyId}}" aria-expanded="false" aria-controls="mblDiv">' +
                ' <i class="fa fa-caret-down" style="color:#FFFFFF;"></i></button > </div><div class="card-body collapse customForm" id="{{cardBodyId}}" style="min-height:150px !important"></div>';
            return abpCard;
        }

        function setHblCardValues(abpcard, cardId, hblNo, index) {
            let apbCardClass = 'card board-item hbl-sm-' + index;
            let cardBodyId = 'hblCard_' + index;
            cardId = "'" + cardId + "'";

            hblNo = hblNo || index;

            abpcard = abpcard.replaceAll("{{divClass}}", apbCardClass);
            abpcard = abpcard.replaceAll("{{hblNo}}", hblNo);
            abpcard = abpcard.replaceAll("{{hblCardId}}", cardId);
            abpcard = abpcard.replaceAll("{{index}}", index);
            abpcard = abpcard.replaceAll("{{cardBodyId}}", cardBodyId);

            return abpcard;
        }

        function onHblCardClick(e, hblId) {
            debugger;
            var element = e.currentTarget || e.target || e.srcElement;
            var hblNo = element.id.split('_')[1];

            if ($('#btnHblCardCollapse_0').length && hblNo != 0) {
                HBLNO = hblNo;
                showAlert(alertConfirmation, 'Continue');
            }
            else {

                var color = getComputedStyle(element.parentElement.parentElement).backgroundColor;
                if (!$('#btnHblCardCollapse_' + hblNo).attr('class').includes('collapsed')) {
                    $('.hblCardHawbNo').addClass('d-none');
                    $('#hblCard_' + hblNo).removeClass('d-none');
                }
                else {

                    var ajaxParams = undefined;

                    Swal.fire({
                        title: 'Loading...',
                        didOpen: () => {
                            Swal.showLoading()
                        }
                    })

                    abp.ajax($.extend(true, {
                        url: abp.appPath + 'api/ImportExport/OceanExportBasicHbl?Id=' + hblId,
                        type: 'GET',
                        dataType: "html",
                    }, ajaxParams)).done(function (partial) {
                        $('#partialContainer').html('');
                        $('#partialContainer').html(partial);
                        setFilteredDropdown();
                        setDateTimeforCards('OEHBL');
                        $('#hblCard').find('.card-header').attr('style', 'background:' + color + ';color:white');
                        window.location.href.toLowerCase().includes('createmawb') && $('#hblCard').find('#ActionDrop').hide();
                        Swal.clickCancel();
                    })

                    $('.btnHblCardCollapse').each(function (i, e) {
                        let tempHblNo = e.id.split('_')[1];
                        if (tempHblNo == hblNo) {
                            $('#btnHblCardCollapse_' + hblNo).click();
                        }
                        else {
                            $('#btnHblCardCollapse_' + tempHblNo).addClass('collapsed');
                            $('#btnHblCardCollapse_' + tempHblNo).attr('aria-expanded', 'false');
                            $('#hblCard_' + i).removeClass('show');
                        }
                    })
                }
            }
        }

        function showAlert(funName, buttonName) {
            Swal.fire({
                icon: 'error',
                text: 'The data has not been saved, are you sure you want to ' + buttonName.toLowerCase() + '?',
                showCancelButton: true,
                confirmButtonText: buttonName,
            }).then(funName)
        }

        function alertConfirmation(result) {
            if (result.isConfirmed) {
                let indx = $('.hbl_sm_area').find('.card').length;
                $('#btnHblCardCollapse_0').parent().parent().remove();
                if (HBLNO) {
                    $('#title_' + HBLNO).click()
                }
                else {
                    $('#hblCard_' + (indx - 2)).parent().find('.card-title').click();
                }
            }
        }

        function alertConfirmation2() {
            $('#saveBtn').click();
        }

        var cardIndex = 0;
        //function addHBtn() {
        //    if (cardIndex == 0) {
        //        var divHtml = addCardRight('new_' + cardIndex, 'new HB/L', '', '#f3c200');
        //        $("#hblCard").show();
        //        $("#hblCardDiv").append(divHtml);
        //        $("#AddHbl").val(1);
        //        cardIndex++;
        //    } else {
        //        var l = abp.localization.getResource('Freight');
        //        abp.message.info(l("Message:AddHBLErr"));
        //    }

        //}
        //function addCardRight(hblId, hblNo, soNo, bgColor) {
        //    var cardHtml = "<div class='borad-anchor focus' ><div class='borad-cont' >"
        //    cardHtml = cardHtml + "<a class='link' href='#javascript:void(0)'></a>"
        //    cardHtml = cardHtml + "<span class='label label-HBL'>HB/L</span><span class='MBLnumber'>Add</span>"
        //    cardHtml = cardHtml + "</div></div>"
        //    return cardHtml;
        //}

    </script>
}
<div class="page-header">
    <div class="breadcrumb-wrapper">
        <abp-breadcrumb>
            <abp-breadcrumb-item title=@L["Menu:OceanExports"] />
            <abp-breadcrumb-item title=@L["Menu:OceanExports.CreateMbl"] href="#" />
        </abp-breadcrumb>
    </div>
    <nav class="submenu">
        <ol>
            <li class="menu-item ">
                <a class="nav-link active" href="javascript:void(0)">@L["Tab:Basic"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link disabled" href="EditModal2">@L["Tab:Container"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link disabled" href="EditModal3">@L["Tab:Accounting"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link disabled" href="EditModal4">@L["Tab:Doc"]</a>
            </li>
        </ol>
    </nav>
</div>
<div class="page-content-area">
   
    <form submit-button="true" data-ajaxForm="true" id="createForm">
        <abp-row>
            <abp-column class="col-xl-9 col-lg-12 col-md-12 col-sm-12">
                <div class="board-wrap">
                    <abp-card class="card board-item">
                        <abp-card-header class="card-header active" style="background:#555555;color:#FFFFFF;">

                            <abp-card-title>
                                MB/L <span id="title0"></span>
                                <span id="title0" style="font-size:0.8em;"></span>
                                <span id="title2" style="font-size:0.8em;"></span>
                                <span id="title3" style="font-size:0.8em;"></span>
                                <span id="title4" style="font-size:0.8em;"></span>
                                <span id="title5" style="font-size:0.8em;"> </span>
                            </abp-card-title>

                            <button class="btn btn-collapse " id="btnMblCollapse" type="button" data-bs-toggle="collapse" data-bs-target="#mblDiv" aria-expanded="true" aria-controls="mblDiv">
                            </button>

                        </abp-card-header>
                        <abp-card-body class="collapse show customForm" id="mblDiv">
                            <abp-row class="mb-3">
                                <abp-column  size-md="_3">
                 @*                   <label class="">@L["DocNo"]</label>
                                    <input class="form-control" type="text" name="OceanExportMbl.FilingNo" readonly/>*@
                                    <abp-input class="form-control" asp-for="OceanExportMbl.FilingNo" disabled="true" />

                                </abp-column>
                                <abp-column  size-md="_3">                         
                                    <abp-input class="form-control" asp-for="OceanExportMbl.MblNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.OfficeId", AspItems = _dropdown.SubstationLookupList, IsShowLabel = true, FieldName = "OfficeId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.OfficeId), IsRequired = true })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.BlTypeId", AspItems = _dropdown.BlTypeLookupList, IsShowLabel = true, FieldName = "BlTypeId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.BlTypeId) })
                                </abp-column>
                            </abp-row>
                           
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PostDate" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.SoNo"/>
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.ItnNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.MblCarrierId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblCarrierId", /*SelectType = 1,*/ ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.MblCarrierContent) })
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-4">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.BlAcctCarrierId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "B/L Acct. Carrier", /*SelectType = 1,*/ ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.BlAcctCarrierContent) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.ShippingAgentId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "ShippingAgentId", /*SelectType = 1,*/ ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.ShippingAgentContent) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.MblOverseaAgentId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblOverseaAgentId", /*SelectType = 1*/ ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.MblOverseaAgentContent) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.MblNotifyId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblNotifyId",/* SelectType = 1,*/ ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.MblNotifyContent) })
                                </abp-column>
                            </abp-row>
                           
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.ForwardingAgentId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "ForwardingAgentId", /*SelectType = 1,*/ ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.ForwardingAgentContent) })

                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.CoLoaderId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "CoLoaderId", /*SelectType = 1,*/ ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.CoLoaderContent) })

                                </abp-column>
                                <abp-column size-md="_3">
                                    <label for="CareOfId" class="form-label">C/O <input type="checkbox" name="OceanExportMbl.IsUsedCareOf" id="OceanExportMbl_IsUsedCareOf" value="true" /></label>
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.CareOfId", AspItems = Model.TradePartnerLookupList, IsShowLabel = false, FieldName = "", /*SelectType = 1,*/ ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.CareOfContent) })
                                </abp-column>
                                <abp-column size-md="_3">
                                @* <div class="d-flex flex-row" ><label class="">@L["OP"]</label>
                                       <div class="d-flex dropdown form-control form-control-fix">  
                                            <select class="filteredDropdown form-select form-control cursor-pointer select2-hidden-accessible" asp-for="OceanExportMbl.MblOperatorId" disabled="true">
                                                <option value='@CurrentUser.Id' selected> @(CurrentUser.Name + " " + CurrentUser.SurName) </option>
                                            </select>

                                        </div>
                                   </div>*@
                                   
  <label class="form-label" for="@Model.OceanExportMbl.MblOperatorId">
      @L["OP"]
      </label>
                                  <div class="d-flex dropdown form-control form-control-fix">
    
<select name="@Model.OceanExportMbl.MblOperatorId" id="@Model.OceanExportMbl.MblOperatorId" class="filteredDropdown form-select form-control cursor-pointer" disabled="true")>
    <option></option>
  
     
           <option value='@CurrentUser.Id' selected> @(CurrentUser.Name + " " + CurrentUser.SurName) </option>
      
    
</select>
</div>

<ul class="dropdown-menu " aria-labelledby="@Model.OceanExportMbl.MblOperatorId" id="dropdownMenuButton_@Model.OceanExportMbl.MblOperatorId">
</ul>
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.CarrierContractNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label for="OceanExportMbl_IsDirect" class="form-label customCheck">@L["IsDirect"]<input type="checkbox" name="OceanExportMbl.IsDirect" id="OceanExportMbl.IsDirect" value="true" checked="@Model.OceanExportMbl.IsDirect" /></label>
                                </abp-column>
                                <abp-column size-md="_3">
                                    
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column>
                                    &nbsp;
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3" >
                                <abp-column size-md="_3">
                                    <abp-input label="Vessel  Name" asp-for="OceanExportMbl.VesselName" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.Voyage" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.PorId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "PorId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.PorId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PorEtd" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.PolId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "PolId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.PolId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PolEtd" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.PodId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "PodId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.PodId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PodEta" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.DelId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "DelId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.DelId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.DelEta" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.FdestId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "FdestId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.FdestId) })
                                </abp-column>
                                <abp-column size-md="_3">                                    
                                    <abp-input asp-for="OceanExportMbl.FdestEta" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.EmptyPickupId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "EmptyPickupId",/* SelectType = 1,*/ ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.EmptyPickupContent) })

                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.DeliveryToId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "DeliveryToId", /*SelectType = 1,*/ ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.DeliveryToContent) })
      
                                </abp-column>
                                <abp-column size-md="_3">
                                    @*<abp-row>
                                        <abp-column  size-md="_2">*@
                                            <label class="form-label" asp-for="OceanExportMbl.PreCarriageVesselNameId"></label>
                                        @*</abp-column>
                                        <abp-column size-md="_5" class="pl-2 pe-1">*@
                                            <div  class="d-flex flex-row">
                                                <div class="col-6 pl-0 pe-0">
                                            @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.PreCarriageVesselNameId", AspItems = _dropdown.PreCarriageVesselLookupList, IsShowLabel = false, FieldName = "PreCarriageVesselNameId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.PreCarriageVesselNameId) })
                                      </div>
                                            @*</abp-column>
                                        <abp-column size-md="_5" class="pl-0">*@
                                            <div class="col-6 pl-0 pe-0">
                                            @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.PrepreCarriageVoyage", AspItems = _dropdown.PreCarriageVesselLookupList, IsShowLabel = false, FieldName = "PrepreCarriageVoyage", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.PrepreCarriageVoyage) })
                                        </div>   
                                        </div>
                                     @*   </abp-column>
                                    </abp-row>*@
                                </abp-column>

                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column>
                                    &nbsp;
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.FreightTermId", AspItems = _dropdown.FreightTermLookupList, IsShowLabel = true, FieldName = "FreightTermId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.FreightTermId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.ShipModeId", AspItems = _dropdown.ShipModeLookupList, IsShowLabel = true, FieldName = "ShipModeId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.ShipModeId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.SvcTermFromId", AspItems = _dropdown.SvgTermLookupList, IsShowLabel = true, FieldName = "SvcTermFromId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.SvcTermFromId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.SvcTermToId", AspItems = _dropdown.SvgTermLookupList, IsShowLabel = true, FieldName = "SvcTermToId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.SvcTermToId) })
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-10">
                                <abp-column size-md="_3">
                                    <abp-input label="Container Size Qty Info" asp-for="OceanExportMbl.DisplayMblContainerSizeQtyInfo" disabled="true"/>
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.OblTypeId", AspItems = _dropdown.OblTypeLookupList, IsShowLabel = true, FieldName = "OblTypeId", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.OblTypeId) })
                                    <input type="hidden" name="OceanExportMbl.OblTypeId" id="mOblTypeId" value="@Model.OceanExportMbl.OblTypeId" />
                                </abp-column>
                                <abp-column size-md="_6">
                                    &nbsp;  
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3 mt-10">


                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.DocCutOffTime" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PortCutOffTime" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.VgmCutOffTime" />
                                </abp-column>
                                <abp-column size-md="_3">

                                    <abp-input asp-for="OceanExportMbl.RailCutOffTime" />

                                </abp-column>

                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    <abp-row>
                                        <abp-column>
                                            <label for="OceanExportMbl_IsCanceled" class="form-label">@L["IsCanceled"] <input type="checkbox" name="OceanExportMbl.IsCanceled" id="OceanExportMbl_IsCanceled" value="true" /></label>

                                            <input type="text" id="OceanExportMbl_CanceledDate" name="OceanExportMbl.CanceledDate" value="" class="form-control " readonly>

                                        </abp-column>
                                    </abp-row>

                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.CancelByName" readonly="true" />
                                    <input type="hidden" name="OceanExportMbl.CancelById" class="form-control" id="OceanExportMbl_CancelById" value="@Model.OceanExportMbl.CancelById" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.CancelReason", AspItems = _dropdown.CancelReasonLookupList, IsShowLabel = true, FieldName = "CancelReason", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.CancelReason) })
                                    <input type="hidden" name="OceanExportMbl.CancelReason" id="mCancelReason" value="@Model.OceanExportMbl.CancelReason" />
                                </abp-column>
                                <abp-column size-md="_3"></abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3" >
                                    <div class="mb-3">
                                        @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.MblReferralById", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblReferralById", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.MblReferralById) })
                                        <input type="hidden" name="OceanExportMbl.MblReferralById" id="mMblReferralById" value="@Model.OceanExportMbl.MblReferralById" />
                                        <input type="hidden" name="OceanExportMbl.MblReferralByContent" id="mMblReferralByContent" value="@Model.OceanExportMbl.MblReferralByContent" />
                                    </div>
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label for="OceanExportMbl_IsBookingAgent" class="form-label customCheck">@L["IsBookingAgent"]<input type="checkbox" name="OceanExportMbl.IsBookingAgent" id="OceanExportMbl_IsBookingAgent" value="true" checked="" /></label>
                                </abp-column>
                                <abp-column size-md="_3" >
                                 <label for="CareOfId" class="form-label">@L["IsReleased"]<input type="checkbox" name="OceanExportMbl.IsReleased" id="OceanExportMbl_IsReleased" value="true" /></label>
                                  <div class="d-flex dropdown form-control form-control-fix">
    
                    <input asp-for="OceanExportMbl.MblReleaseDate" class="form-control " type="date" disabled />
                                </div>


                                 @*   <abp-row>
          <abp-column size-md="_5">
              <label for="CareOfId" class="form-label">@L["IsReleased"]<input type="checkbox" name="OceanExportMbl.IsReleased" id="OceanExportMbl_IsReleased" value="true" /></label></abp-column>
                                        <abp-column size-md="_7"><input asp-for="OceanExportMbl.MblReleaseDate" class="form-control form-label" type="date" disabled /></abp-column>
                                    </abp-row>*@
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label class="form-label" asp-for="OceanExportMbl.ReleaseById"></label>
                                       <div class="d-flex dropdown form-control form-control-fix">
                                           <input id="releasedBy" class="form-control" readonly />
                                           </div>
                                 @*   <abp-row>
                                        <abp-column size-md ="_5"><label asp-for="OceanExportMbl.ReleaseById"></label></abp-column>
     <abp-column size-md="_7"><input id="releasedBy" class="form-control" readonly /></abp-column>                                  
                                    </abp-row>   *@ 
                                </abp-column>
                            </abp-row>
                            <abp-row class="mb-3">
                                <abp-column size-md="_3">
                                    &nbsp;
                                </abp-column>
                                <abp-column size-md="_3">
                                    &nbsp;
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.OnBoardDate" abp-data-datetimepicker="false" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <button type="button" id="checkHideBtn" class="expandBtn">
                                        <i class="fa fa-plus" id="showLi"></i>
                                        <i class="fa fa-minus" id="hideLi"></i>
                                    </button>
                                    @L["Title:MoreInfo"]
                                    <input type="hidden" id="isHide" value="@Model.OceanExportMbl.GetHideCheck()" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="hideArea" >
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.SubBlNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input label="Service Contact No" asp-for="OceanExportMbl.ServiceContactNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input label="Forward Ref No" asp-for="OceanExportMbl.ForwardRefNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanExportMbl.TransPort1Id", AspItems = _dropdown.TransPortLookupList, IsShowLabel = true, FieldName = "TransPort1Id", ShowFiledContentValue = Convert.ToString(Model.OceanExportMbl.TransPort1Id) })
                                    <input type="hidden" name="OceanExportMbl.TransPort1Id" id="mTransPort1Id" value="@Model.OceanExportMbl.TransPort1Id" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="hideArea">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.Trans1Eta" abp-data-datetimepicker="false" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.EctNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanExportMbl.PrnNo" />
                                </abp-column>
                                <abp-column size-md="_3" class="expandCheck">
                                    <abp-input asp-for="OceanExportMbl.IsEcommerce" />
                                </abp-column>
                            </abp-row>
                              <abp-row>
                                <abp-column>
                                    <abp-card-header style="background:#cccccc;color:#FFFFFF;">
                                        @L["Title:Memo"]
                                    </abp-card-header>
                                    <abp-card>
                                        <abp-card-body>
                                            <partial  name="Memos/_Memo" model="new _MemoModel(Model.MblId, Dolphin.Freight.Common.FreightPageType.OEMBL)" />
                                        </abp-card-body>
                                    </abp-card>
                                </abp-column>
                            </abp-row>
                        </abp-card-body>
                    </abp-card>
                    <br />
                    
                    <!-- HBL Card-->
                    <div id="partialContainer">
                    </div>
                </div>
            </abp-column>

            <abp-column class="col-xl-3 col-lg-12 col-md-12 col-sm-12">
                <div class="card-wrap">

                    <button class="btn btn-block btn-add" type="button" id="addHBtn">
                        <i class="fa-solid fa-plus"></i>@L["Btn:AddHbl"]
                    </button>

                    <div id="hblCardDiv" class="hbl_sm_area">
                    </div>
                </div>
                <!--  </div>-->
            </abp-column>
        </abp-row>
        <abp-row class="mt-3" id="ejo">
            <abp-column>
                @*<input type="hidden" name="OceanExportMbl.OfficeId" id="mOfficeId" value="@Model.OceanExportMbl.OfficeId" />
                <input type="hidden" name="OceanExportMbl.MblSalesTypeId" id="mMblSalesTypeId" value="@Model.OceanExportMbl.MblSalesTypeId" />
                <input type="hidden" name="OceanExportMbl.PreCarriageVesselNameId" id="mPreCarriageVesselNameId" value="@Model.OceanExportMbl.PreCarriageVesselNameId" />
                <input type="hidden" name="OceanExportMbl.SvcTermFromId" id="mSvcTermFromId" value="@Model.OceanExportMbl.SvcTermFromId" />
                <input type="hidden" name="OceanExportMbl.SvcTermToId" id="mSvcTermToId" value="@Model.OceanExportMbl.SvcTermToId" />
                <input type="hidden" name="OceanExportMbl.ShipModeId" id="mShipModeId" value="@Model.OceanExportMbl.ShipModeId" />
                <input type="hidden" name="OceanExportMbl.FreightTermId" id="mFreightTermId" value="@Model.OceanExportMbl.FreightTermId" />
                <input type="hidden" name="OceanExportMbl.BlTypeId" id="mBlTypeId" value="@Model.OceanExportMbl.BlTypeId" />
                <input type="hidden" name="OceanExportMbl.PorId" id="mPorId" value="@Model.OceanExportMbl.PorId" />
                <input type="hidden" name="OceanExportMbl.PolId" id="mPolId" value="@Model.OceanExportMbl.PolId" />
                <input type="hidden" name="OceanExportMbl.PodId" id="mPodId" value="@Model.OceanExportMbl.PodId" />
                <input type="hidden" name="OceanExportMbl.DelId" id="mDelId" value="@Model.OceanExportMbl.DelId" />
                <input type="hidden" name="OceanExportMbl.FdestId" id="mFdestId" value="@Model.OceanExportMbl.FdestId" />
                <input type="hidden" name="AddHbl" id="AddHbl" value="0" />
                <input type="hidden" name="OceanExportHbl.CargoTypeId" id="hCargoTypeId" value="@Model.OceanExportHbl.CargoTypeId" />
                <input type="hidden" name="OceanExportHbl.SvcTermFromId" id="hHSvcTermFromId" value="@Model.OceanExportHbl.SvcTermFromId" />
                <input type="hidden" name="OceanExportHbl.SvcTermToId" id="hHSvcTermToId" value="@Model.OceanExportHbl.SvcTermToId" />
                <input type="hidden" name="OceanExportHbl.ShipModeId" id="hHShipModeId" value="@Model.OceanExportHbl.ShipModeId" />
                <input type="hidden" name="OceanExportHbl.FreightTermForBuyerId" id="hFreightTermForBuyerId" value="@Model.OceanExportHbl.FreightTermForBuyerId" />
                <input type="hidden" name="OceanExportHbl.FreightTermForSalerId" id="hFreightTermForSalerId" value="@Model.OceanExportHbl.FreightTermForSalerId" />
                <input type="hidden" name="OceanExportHbl.HblCustomerId" id="hHblCustomerId" value="@Model.OceanExportHbl.HblCustomerId" />
                <input type="hidden" name="OceanExportHbl.HblShipperId" id="hHblShipperId" value="@Model.OceanExportHbl.HblShipperId" />
                <input type="hidden" name="OceanExportHbl.HblBillToId" id="hHblBillToId" value="@Model.OceanExportHbl.HblBillToId" />
                <input type="hidden" name="OceanExportHbl.HblConsigneeId" id="hHblConsigneeId" value="@Model.OceanExportHbl.HblConsigneeId" />
                <input type="hidden" name="OceanExportHbl.HblNotifyId" id="hHblNotifyId" value="@Model.OceanExportHbl.HblNotifyId" />
                <input type="hidden" name="OceanExportHbl.CustomsBrokerId" id="hCustomsBrokerId" value="@Model.OceanExportHbl.CustomsBrokerId" />
                <input type="hidden" name="OceanExportHbl.TruckerId" id="hTruckerId" value="@Model.OceanExportHbl.TruckerId" />
                <input type="hidden" name="OceanExportHbl.AgentId" id="hAgentId" value="@Model.OceanExportHbl.AgentId" />
                <input type="hidden" name="OceanExportHbl.ForwardingAgentId" id="hHblForwardingAgentId" value="@Model.OceanExportHbl.ForwardingAgentId" />
                <input type="hidden" name="OceanExportHbl.ReceivingAgentId" id="hReceivingAgentId" value="@Model.OceanExportHbl.ReceivingAgentId" />
                <input type="hidden" name="OceanExportHbl.FbaFcId" id="hFbaFcId" value="@Model.OceanExportHbl.FbaFcId" />
                <input type="hidden" name="OceanExportHbl.EmptyPickupId" id="hHEmptyPickupId" value="@Model.OceanExportHbl.EmptyPickupId" />
                <input type="hidden" name="OceanExportHbl.DeliveryToId" id="hHDeliveryToId" value="@Model.OceanExportHbl.DeliveryToId" />
                <input type="hidden" name="OceanExportHbl.MblReferralById" id="hHMblReferralById" value="@Model.OceanExportHbl.MblReferralById" />
                <input type="hidden" name="OceanExportHbl.PorId" id="hHPorId" value="@Model.OceanExportHbl.PorId" />
                <input type="hidden" name="OceanExportHbl.PodId" id="hHPodId" value="@Model.OceanExportHbl.PodId" />
                <input type="hidden" name="OceanExportHbl.HDelId" id="hHDelId" value="@Model.OceanExportHbl.DelId" />
                <input type="hidden" name="OceanExportHbl.FdestId" id="hHFdestId" value="@Model.OceanExportHbl.FdestId" />*@
                <div style="position: fixed; bottom: 55px; left: 0; right: 0; text-align:center;">
   <button class="btn btn-primary me-md-2 rounded-circle" type="submit" id="saveBtn" style="width: 60px; height: 60px;">
  <svg aria-hidden="true" focusable="false" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class="svg-inline--fa fa-save fa-w-14 fa-2x">
    <path fill="currentColor" d="M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z"></path>
  </svg>
</button>
</div>
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column>
                &nbsp;
            </abp-column>
        </abp-row>
    </form>
    
</div>