@page
@using Dolphin.Freight.Localization
@using Dolphin.Freight.Web.CommonService
@using Dolphin.Freight.Web.Pages.Shared.Memos;
@using Dolphin.Freight.Web.Pages.Components
@using Microsoft.Extensions.Localization
@model Dolphin.Freight.Web.Pages.OceanExports.ExportBookings.EditModel
@inject IStringLocalizer<FreightResource> L
@inject IDropdownService _dropdown;
@section scripts
    {
    <script type="text/javascript">
        $(document).ready(function () {
            var l = abp.localization.getResource('Freight');
            var showCopyMsg = '@Model.ShowCopyMsg'
            if (showCopyMsg == 'True') abp.message.success(l("Message:SuccessCopy"));
            var showMsg = '@Model.ShowMsg';
            if (showMsg == 'True') abp.message.success(l("Message:SuccessAdd"));
            var l = abp.localization.getResource('Freight');
            $("#ExportBooking_CanceledDate").datepicker({});
             onSetCommodity();            
                setPoValue();
            //dolphin.freight.common.ajaxDropdown.getSysCodeDtosByType({ queryType: 'CancelReason' }).done(function (result) {
            //    if (result != null && result.length > 0) {
            //        initSysCodeI18nTag(result, "CancelReason", $("#mCancelReason").val())
            //    }
            //});
            //dolphin.freight.common.ajaxDropdown.getReferenceItemsByType({}).done(function (result) {
            //    console.log(result)
            //    if (result != null && result.length > 0) {
            //        initReferenceTag(result, "ReferenceId", $("#mReferenceId").val())
            //    }
            //});

            //dolphin.freight.common.ajaxDropdown.getSysCodeDtosByType({ queryType: 'ShipModeId' }).done(function (result) {
            //    if (result != null && result.length > 0) {
            //        initSysCodeTag(result, "ShipModeId", $("#mShipModeId").val())
            //    }
            //});
            //dolphin.freight.common.ajaxDropdown.getSysCodeDtosByType({ queryType: 'FreightTermId' }).done(function (result) {
            //    if (result != null && result.length > 0) {
            //        initSysCodeTag(result, "FreightTermForBuyerId", $("#mFreightTermForBuyerId").val())
            //        initSysCodeTag(result, "FreightTermForSalerId", $("#mFreightTermForSalerId").val())

            //    }
            //});
            //dolphin.freight.common.ajaxDropdown.getSysCodeDtosByType({ queryType: 'SvcTermFromId' }).done(function (result) {
            //    if (result != null && result.length > 0) {
            //        initSysCodeTag(result, "SvcTermFromId", $("#mSvcTermFromId").val())
            //        initSysCodeTag(result, "SvcTermToId", $("#mSvcTermToId").val())

            //    }
            //});
            //dolphin.freight.common.ajaxDropdown.getSysCodeDtosByType({ queryType: 'IncotermsId' }).done(function (result) {
            //    if (result != null && result.length > 0) {
            //        initSysCodeTag(result, "IncotermsId", $("#mIncotermsId").val())
            //    }
            //});
            //dolphin.freight.common.ajaxDropdown.getSysCodeDtosByType({ queryType: 'CargoTypeId' }).done(function (result) {
            //    if (result != null && result.length > 0) {
            //        initSysCodeTag(result, "CargoTypeId", $("#mCargoTypeId").val())
            //    }
            //});
            ////貿易夥伴
            //dolphin.freight.tradePartners.tradePartner.getList({}).done(function (result) {
            //    var selectItems = result.items;
            //    initTradePartnerSelect(selectItems, "CarrierId", $("#mCarrierId").val());
            //    initTradePartnerSelect(selectItems, "ShipperId", $("#mShipperId").val());
            //    initTradePartnerSelect(selectItems, "CustomerId", $("#mCustomerId").val());
            //    initTradePartnerSelect(selectItems, "BillToId", $("#mBillToId").val());
            //    initTradePartnerSelect(selectItems, "ConsigneeId", $("#mConsigneeId").val());
            //    initTradePartnerSelect(selectItems, "NotifyId", $("#mNotifyId").val());
            //    initTradePartnerSelect(selectItems, "ShippingAgentId", $("#mShippingAgentId").val());
            //    initTradePartnerSelect(selectItems, "CoLoaderId", $("#mCoLoaderId").val());
            //    initTradePartnerSelect(selectItems, "FbaId", $("#mFbaId").val());
            //    initTradePartnerSelect(selectItems, "CargoPickupId", $("#mCargoPickupId").val());
            //    initTradePartnerSelect(selectItems, "TruckerId", $("#mTruckerId").val());
            //    initTradePartnerSelect(selectItems, "DeliveryToId", $("#mDeliveryToId").val());


            //});
            ////港口
            //dolphin.freight.settings.ports.port.getList({}).done(function (result) {
            //    console.log(result.items);
            //    if (result != null && result.items != null && result.items.length > 0) {
            //        initPortsTag(result.items, "PorId", $("#mPorId").val())
            //        initPortsTag(result.items, "PolId", $("#mPolId").val())
            //        initPortsTag(result.items, "PodId", $("#mPodId").val())
            //        initPortsTag(result.items, "DelId", $("#mDelId").val())
            //        initPortsTag(result.items, "FdestId", $("#mFdestId").val())
            //        initPortsTag(result.items, "TransPort1Id", $("#mTransPort1Id").val())

            //    }
            //});
            ////分站
            //dolphin.freight.settings.substations.substation.getSubstations({}).done(function (result) {
            //    if (result != null && result.length > 0) {
            //        initSubstationsTag(result, "OfficeId", $("#mOfficeId").val())
            //    }
            //});
            initReasonStatus();
            initHideBtn();
            initRemark(0);
            //var ponotag = $("#PoNoTag").tagsInit();
            //var tags = '@Model.ExportBooking.PoNo';
            //if (tags != '') {
            //    var stag = tags.split(",");
            //    for (var i = 0; i < stag.length; i++) {
            //        ponotag.tagsAdd(stag[i]);
            //    }
            //}
            $("#checkHideBtn").click(function () {
                initHideBtn();
            });
            $("#ExportBooking_IsCanceled").change(function () {
                initReasonStatus()
            });
            $("#ExportBooking_IsCreateBySystem").change(function () {
                $("#ExportBooking_SoNo").attr('readonly', $(this).is(":checked"));
                if ($(this).is(":checked")) $("#ExportBooking_SoNo").val("");
            })
            $("#saveBtn").click(function () {
                $("#mOfficeId").val($("#OfficeId").val());
                $("#mMblSalesTypeId").val($("#MblSalesTypeId").val());
                $("#mSvcTermFromId").val($("#SvcTermFromId").val());
                $("#mSvcTermToId").val($("#SvcTermToId").val());
                $("#mShipModeId").val($("#ShipModeId").val());
                $("#mFreightTermId").val($("#FreightTermId").val());
                $("#mBlTypeId").val($("#BlTypeId").val());
                $("#mCarrierId").val($("#CarrierId").val());
                $("#mFreightTermForBuyerId").val($("#FreightTermForBuyerId").val());
                $("#mFreightTermForSalerId").val($("#FreightTermForSalerId").val());
                $("#mIncotermsId").val($("#IncotermsId").val());
                $("#mShipperId").val($("#ShipperId").val());
                $("#mCustomerId").val($("#CustomerId").val());
                $("#mBillToId").val($("#BillToId").val());
                $("#mConsigneeId").val($("#ConsigneeId").val());
                $("#mNotifyId").val($("#NotifyId").val());
                $("#mShippingAgentId").val($("#ShippingAgentId").val());
                $("#mHblAgentId").val($("#HblAgentId").val());
                $("#mCoLoaderId").val($("#CoLoaderId").val());
                $("#mPorId").val($("#PorId").val());
                $("#mPolId").val($("#PolId").val());
                $("#mPodId").val($("#PodId").val());
                $("#mDelId").val($("#DelId").val());
                $("#mFdestId").val($("#FdestId").val());
                $("#mFbaId").val($("#FbaId").val());
                $("#mTransPort1Id").val($("#TransPort1Id").val())
                $("#mCargoTypeId").val($("#CargoTypeId").val())
                $("#mReferralById").val($("#ReferralById").val());
                $("#mCargoPickupId").val($("#CargoPickupId").val());
                $("#mTruckerId").val($("#TruckerId").val());
                $("#mDeliveryToId").val($("#DeliveryToId").val());
                $("#mReferenceId").val($("#ReferenceId").val());
                $("#mPoNo").val($("#PoNoTag").tagsStr());
                $('#editForm').submit();
            });
            $('#editForm').on('abp-ajax-success', function (result, rs) {
                event.preventDefault();
                var l = abp.localization.getResource('Freight');
                abp.message.success(l("Message:SuccessEdit")).done(function(res){
                    window.location.href = '/OceanExports/ExportBookings/Index';
                });
            });
        });
        function initRemark(remarkIndex) {
            $(".remarkArea").hide();
            switch (remarkIndex) {
                default:
                    $("#ExportBooking_BookingRemark").show();
                    break;
                case 1:
                    $("#ExportBooking_ShippingRemark").show();
                    break;
                case 2:
                    $("#ExportBooking_CargoRemark").show();
                    break;

            }
        }
        function initHideBtn() {
            var isHide = $("#isHide").val();
            if (isHide == 1) {
                $(".hideArea").hide();
                $("#hideLi").hide();
                $("#showLi").show();
                $("#isHide").val(0);
            } else {
                $(".hideArea").show();
                $("#hideLi").show();
                $("#showLi").hide();
                $("#isHide").val(1);
            }
        }
        function initReasonStatus() {
            var locked = !$("#ExportBooking_IsCanceled").is(":checked");
            $("#ExportBooking_CanceledDate").attr('readonly', locked);

            $("#drop_CancelReason").attr('readonly', locked);
            if (!locked) {
                $("#ExportBooking_CancelName").val(abp.currentUser.userName);
                $("#ExportBooking_CancelById").val(abp.currentUser.id);
            } else {
                $("#ExportBooking_CancelName").val("");
                $("#ExportBooking_CancelById").val("");
            }
        }
        var cardIndex = 0;
        function addHBtn() {
            if (cardIndex == 0) {
                var divHtml = addCardRight('new_' + cardIndex, 'new HB/L', '', '#f3c200');
                $("#hblCard").show();
                $("#hblCardDiv").append(divHtml)
                cardIndex++;
            } else {
                var l = abp.localization.getResource('Freight');
                abp.message.info(l("Message:AddHBLErr"));
            }

        }
        function addCardRight(hblId, hblNo, soNo, bgColor) {
            var cardHtml = "<div id='card_" + hblId + "' class='card mt-3' onclick=''>"
            cardHtml = cardHtml + "<div class='card-body'  style='background:" + bgColor + ";color:#FFFFFF;'>"
            cardHtml = cardHtml + "<p class='card-text'> " + hblNo + ".</p>"
            cardHtml = cardHtml + "<p class='card-text'> " + soNo + ".</p>"
            cardHtml = cardHtml + " </div> </div>"
            return cardHtml;
        }
        function addTr() {
            addTrTag("", "", "", "", "", "");
        }
        function addTrTag(value1, value2, value3, value4, value5, value6) {
            trindex++;
            var trhtml = "<tr id='tr_" + trindex + "'><td><input type='checkbox' name='f0' id='f0_" + trindex + "'  value='" + trindex + "'    /></td>"
            trhtml = trhtml + "<td><input type='text' name='f1' id='f1_" + trindex + "' class='form-control' value='" + value1 + "'/> </td>"
            trhtml = trhtml + "<td><input type='text' name='f2' id='f2_" + trindex + "' class='form-control' value='" + value2 + "' /></td>"
            trhtml = trhtml + "<td><input type='text' name='f3' id='f3_" + trindex + "' class='form-control' value='" + value3 + "' /></td>"
            trhtml = trhtml + "<td><input type='text' name='f4' id='f4_" + trindex + "' class='form-control' value='" + value4 + "' /></td>"
            trhtml = trhtml + "<td><input type='text' name='f5' id='f5_" + trindex + "' class='form-control' value='" + value5 + "' /></td>"
            trhtml = trhtml + "<td><input type='text' name='f6' id='f6_" + trindex + "' class='form-control' value='" + value6 + "' /></td>"
            trhtml = trhtml + "</tr>"
            $("#trtbody").append(trhtml);
        }
        $('#editForm').on('abp-ajax-success', function (result, rs) {
            event.preventDefault();
            var l = abp.localization.getResource('Freight');
            abp.message.success(l("Message:SuccessEdit"));

        });

        initializeDropdownSearch("ExportBooking_CancelReason");

        initializeDropdownSearch("ExportBooking_ReferenceId");
        initializeDropdownSearch("ExportBooking_CarrierId");
        initializeDropdownSearch("ExportBooking_ShipModeId");
        initializeDropdownSearch("ExportBooking_FreightTermForBuyerId");
        initializeDropdownSearch("ExportBooking_FreightTermForSalerId");
        initializeDropdownSearch("ExportBooking_SvcTermFromId");
        initializeDropdownSearch("ExportBooking_SvcTermToId");
        initializeDropdownSearch("ExportBooking_IncotermsId");
        initializeDropdownSearch("ExportBooking_CargoTypeId"); 

        initializeDropdownSearch("ExportBooking_ShipperId");
        initializeDropdownSearch("ExportBooking_CustomerId");
        initializeDropdownSearch("ExportBooking_BillToId");
        initializeDropdownSearch("ExportBooking_ConsigneeId");
        initializeDropdownSearch("ExportBooking_NotifyId");
        initializeDropdownSearch("ExportBooking_ShippingAgentId");
        initializeDropdownSearch("ExportBooking_HblAgentId");
        initializeDropdownSearch("ExportBooking_CoLoaderId");
        initializeDropdownSearch("ExportBooking_FbaId");
        initializeDropdownSearch("ExportBooking_CargoPickupId");
        initializeDropdownSearch("ExportBooking_TruckerId");
        initializeDropdownSearch("ExportBooking_DeliveryToId");
        initializeDropdownSearch("ExportBooking_DelId");
        initializeDropdownSearch("ExportBooking_SalespersonId");

        initializeDropdownSearch("ExportBooking_PorId");
        initializeDropdownSearch("ExportBooking_PolId");
        initializeDropdownSearch("ExportBooking_PodId");
        initializeDropdownSearch("ExportBooking_FdestId");
        initializeDropdownSearch("ExportBooking_TransPort1Id");
        initializeDropdownSearch("ExportBooking_OfficeId");

        function onBtnContainerQtyClick(){

            $('#modal_ExportBooking_ContainerQtyInputText').modal('show');
        }

        function onBtnAddMoreClick(e){

            if($('#containerInputs').is(":hidden")|| $('#containerInputs-0').is(":hidden")){
                $('#containerInputs').show();
                $('#containerInputs-0').show();
            }
            else{
                var cloneCount = 2;
                var containerInputs = $('#containerInputs').length? $('#containerInputs'): $('#containerInputs-0');
                containerInputs
                    .clone()
                    .attr('id', 'containerInputs-' + cloneCount++)
                    .attr('name', 'containerInputs')
                    .insertAfter($('[id^=containerInputs]:last'))
                }
        }

        function onRemoveContainerRow(e){
            var target = e.currentTarget || e.srcElement || e.target;

            if ($(target).closest('.row').attr('id') ==  'containerInputs' || 
            $(target).closest('.row').attr('id') ==  'containerInputs-0'){
                $(target).closest('.row').hide();
                $('#ddlContainer option:selected').removeAttr('selected');
                $('#numQuantity').val('');
            }
            else{
                $(target).closest('.row').remove();
            }
        }

        function onBtnContainerCancel(){
            $('#modal_ExportBooking_ContainerQtyInputText').find('.btn-close').click();
        }

        function onBtnContainerSave(event){
            var containers = [];
            let size, quantity, val;

            $('[name="containerInputs"]').each(function(i,e){ 

                if($(e).is(':visible')){
                     size =  $(e).find('#ddlContainer option:selected').text();
                    quantity = $(e).find('#numQuantity').val();
                    val = size + '*' + quantity;
                    containers.push(val);
                } 
            })

            $('#ExportBooking_ContainerQtyInputText').val(containers.join());
            onBtnContainerCancel();
        }

        $('#ExportBooking_ReferenceId').change(function () {
            var refNo = $('#ExportBooking_ReferenceId option:selected').text();
            var url = '/api/ImportExport/GetBookingByReference';

            $.ajax({
                url: url,
                type: 'GET',
                data: { refNo: refNo },
                success: function (result) {
                    debugger;
                    $('#ExportBooking_CarrierId').val(result.value.carrierId).trigger('change');
                    $('#ExportBooking_ShippingAgentId').val(result.value.shippingAgentId).trigger('change');
                    $('#ExportBooking_ShipModeId').val(result.value.shipModeId).trigger('change');
                    $('#ExportBooking_VesselName').val(result.value.vesselName);
                    $('#ExportBooking_Voyage').val(result.value.voyage);
                    $('#ExportBooking_PorId').val(result.value.porId).trigger('change');
                    $('#ExportBooking_PorEtd').val(result.value.porEtd);
                    $('#ExportBooking_PolId').val(result.value.polId).trigger('change');
                    $('#ExportBooking_PolEtd').val(result.value.polEtd);
                    $('#ExportBooking_PodId').val(result.value.podId).trigger('change');
                    $('#ExportBooking_PodEta').val(result.value.podEta);
                    $('#ExportBooking_FdestId').val(result.value.fDestId).trigger('change');
                    $('#ExportBooking_FdestEta').val(result.value.fDestEta);
                    $('#ExportBooking_OfficeId').val(result.value.officeId).trigger('change');
                    $('#ExportBooking_EmptyPickupId').val(result.value.emptyPickupId).trigger('change');
                    $('#ExportBooking_FreightTermForBuyerId').val(result.value.freightTermForBuyerId).trigger('change');
                    $('#ExportBooking_FreightTermForSalerId').val(result.value.freightTermForSalerId).trigger('change');
                    $('#ExportBooking_HblAgentId').val(result.value.hblAgentId).trigger('change');
                    $('#ExportBooking_DelId').val(result.value.delId).trigger('change');
                    $('#ExportBooking_DelEta').val(result.value.delEta);
                }
            });
        });

            var chkIndex = 0;
        function onAddCommodity() {
            debugger;
            var newRowData = {
                chkIndex: chkIndex
            };

            var newRow = $('#commodityTemplate').tmpl(newRowData);

            $('#commodityBody').append(newRow);

            chkIndex += 1;

            resetCommodityIndex();

            $('#btnCommodity').removeAttr('disabled');
            $('#btnCommodityHTS').removeAttr('disabled');
        }
        function onRemoveCommodity() {
            $('[name="chk_commodity"]:checked').each(function (i, elem) {
                $(elem).closest('tr').remove();
            });

            resetCommodityIndex();

            if (!$('[name="chk_commodity"]:checked').length){
                $('#btnCommodity').attr('disabled', 'disabled');
                $('#btnCommodityHTS').attr('disabled', 'disabled');
            }
        }
     function onSetCommodity() {
            var extraProperties = '@Html.Raw(Json.Serialize(Model.ExportBooking.ExtraProperties))';

            if (extraProperties && extraProperties != 'null' && extraProperties != '{}') {
                var commodities = JSON.parse(extraProperties).Commodities;

                if (commodities && commodities.length) {
                    var commodityIndex = 0;
                    commodities.forEach(function (commodity) {
                        commodity.chkIndex = commodityIndex;

                        var newRow = $('#commodityTemplate').tmpl(commodity);
                        $('#commodityBody').append(newRow);

                        commodityIndex += 1;
                    });

                    $('#btnCommodity').removeAttr('disabled');
                    $('#btnCommodityHTS').removeAttr('disabled');
                }
            }
        }
        function resetCommodityIndex() {
            $('#commodityBody > tr').each(function (e, elem) {
                $(elem).find('td').each(function (a, aelem) {
                    var attrName = $(aelem).find('input').attr('name').replace(/[0-9]/, e);

                    $(aelem).find('input').attr('name', attrName);
                    if ($(aelem).hasClass('d-none')) {
                        var aelemVal = $(aelem).find('input').val();
                        $(aelem).find('input').val(aelemVal.replace(/[0-9]/, e));
                    }
                })
            })
        }
               function setPoValue(){
            var tagOptions = {};
            debugger
            tagOptions.onDel = function () { setTimeout(() => {
                var tags = $('#PoNoTag').tagsStr();
                $('#ExportBooking_PoNo').val(tags);
                if(!tags){
                    $('#btnPO').attr('disabled', 'disabled');
                }
            }, 100) }

            $("#PoNoTag").tagsInit(tagOptions);

            var poNos = '@Model.ExportBooking?.PoNo';

            if (poNos) {
                poNos.split(',').forEach((poNo) => $("#PoNoTag").tagsAdd(poNo, poNo));
                $('#btnPO').removeAttr('disabled');
            }

            $('#PoNoTag_tag_input').keypress(function (event) {
                var keycode = (event.keyCode ? event.keyCode : event.which);
                if (keycode == '13') {
                    $('#ExportBooking_PoNo').val($('#PoNoTag').tagsStr());
                    $('#btnPO').removeAttr('disabled');
                }
            });
        }
        function addPONumberForDescription()
        {
            var val = $('#ExportBooking_Description').val() || '';
            var tagValue = $('#PoNoTag').tagsStr();

            $('#ExportBooking_Description').val((val.concat('PO NO.\n' + tagValue + '\n')));

            $('#ExportBooking_Description').attr('style', 'height: ' + document.getElementById('ExportBooking_Description').scrollHeight + 'px !important');
        }
        function addCommodityForDescription()
        {
            var val = $('#ExportBooking_Description').val() || '';
            var tagValue = $('#PoNoTag').tagsStr();

            var trLength = $('#commodityBody tr').length;

            if(trLength){
                var frm = $('#editForm').serializeFormToObject();

                for(var i=0; i<trLength; i++)
                {
                    val = $('#ExportBooking_Description').val();
                    $('#ExportBooking_Description').val((val.concat(frm['commodities['+i+']'].description + '\n')));  
                }
            }
            $('#ExportBooking_Description').attr('style', 'height: ' + document.getElementById('ExportBooking_Description').scrollHeight + 'px !important');
        }

        function addCommodityHTSForDescription() {
            var val = $('#ExportBooking_Description').val() || '';
            var tagValue = $('#PoNoTag').tagsStr();

            var trLength = $('#commodityBody tr').length;

            if (trLength) {
                var frm = $('#editForm').serializeFormToObject();

                for (var i = 0; i < trLength; i++) {
                    val = $('#ExportBooking_Description').val();
                    $('#ExportBooking_Description').val((val.concat(frm['commodities[' + i + ']'].description + ' ' + frm['commodities[' + i + ']'].hTSCode + '\n')));
                }
            }
            $('#ExportBooking_Description').attr('style', 'height: ' + document.getElementById('ExportBooking_Description').scrollHeight + 'px !important');
        }
    </script>
        <script id="commodityTemplate" type="text/x-jQuery-tmpl">
        <tr>
          <td>
              <input type="checkbox" name="chk_commodity" id="Id" />
          </td>
          <td><input type="text" name="Commodities[${chkIndex}].Description" value="${Description}" /></td>
          <td><input type="text" name="Commodities[${chkIndex}].PackagingType" value="${PackagingType}" /></td>
          <td><input type="text" name="Commodities[${chkIndex}].HTSCode" value="${HTSCode}" /></td>
          <td><input type="text" name="Commodities[${chkIndex}].NoOfPcs" value="${NoOfPcs}" /></td>
          <td><input type="text" name="Commodities[${chkIndex}].NetWeight" value="${NetWeight}"  /></td>
          <td><input type="text" name="Commodities[${chkIndex}].GrossWeight" value="${GrossWeight}" /></td>
          <td><input type="text" name="Commodities[${chkIndex}].UnitPrice" value="${UnitPrice}" /></td>
          <td><input type="text" name="Commodities[${chkIndex}].Amount" value="${Amount}"   /></td>
          <td><input type="text" name="Commodities[${chkIndex}].Details" value="${Details}"  /></td>
          <td><input type="text" name="Commodities[${chkIndex}].Container" value="${Container}" /></td>
        </tr>
    </script>
}
<div class="page-header">
    <div class="breadcrumb-wrapper">
        <abp-breadcrumb>
            <abp-breadcrumb-item title=@L["Menu:OceanExports"] />
            <abp-breadcrumb-item title=@L["Menu:ExportBookings.Create"] href="#" />
        </abp-breadcrumb>
    </div>
    <nav class="submenu">
        <ol>
            <li class="menu-item ">
                <a class="nav-link active" href="Edit">@L["Tab:Basic"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link  " href="Edit2?Id=@Model.Id">@L["Tab:Accounting"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link  " href="Edit3?Id=@Model.Id">@L["Tab:Doc"]</a>
            </li>
        </ol>
    </nav>
</div>
<div class="page-content-area">
    <form submit-button="true" data-ajaxForm="true" id="editForm">
        <abp-row>
            <abp-column size-md="_12">
                <div class="board-wrap">
                    <abp-card class="card board-item">
                        <abp-card-header class="card-header active" style="background:#f3c200;color:#FFFFFF;">
                            <abp-row>
                                <abp-column size-md="_9">
                                    <abp-card-title>
                                        S/O @Model.ExportBooking.SoNo
                                    </abp-card-title>

                                </abp-column>
                                <abp-column size-md="_3" class="text-end">

                                </abp-column>

                            </abp-row>
                        </abp-card-header>
                        <abp-card-body class="collapse show customForm" id="mblDiv">
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-card>
                                        <abp-card-body style="background:#eeeeee;">
                                            <abp-row>
                                                <abp-column>
                                                    <label for="ExportBooking_SoNo" class="form-label">@L["SoCode"] </label>
                                                    <input type="text" name="ExportBooking.SoNo" class="form-control" id="ExportBooking_SoNo" value="@Model.ExportBooking.SoNo" readonly />
                                                    <input type="hidden" name="ExportBooking.IsCreateBySystem" class="form-control" id="ExportBooking_SoNo" value="@Model.ExportBooking.IsCreateBySystem" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.SoNoDate" required-symbol="false" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.ItnNo" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.SalespersonId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "sales", SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.SalespersonId) })
                                                </abp-column>
                                            </abp-row>

                                        </abp-card-body>
                                    </abp-card>
                                    <br />
                                    <abp-card>
                                        <abp-card-body style="background:#eeeeee;">
                                            <abp-row>
                                                <abp-column>
                                                    <label for="ExportBooking_CanceledDate" class="form-label">@L["IsBlCanceled"] <input type="checkbox" name="ExportBooking.IsCanceled" id="ExportBooking_IsCanceled" value="true" /></label>
                                                    <input type="text" name="ExportBooking.CanceledDate" class="form-control" id="ExportBooking_CanceledDate" disabled />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.CancelName" readonly="true" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.CancelReason", AspItems = _dropdown.CancelReasonLookupList, IsShowLabel = true, FieldName = @L["CancelReason"], SelectType = 0, ShowFiledContentValue = Model.ExportBooking.CancelReason })
                                                </abp-column>
                                            </abp-row>
                                        </abp-card-body>
                                    </abp-card>
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-card>
                                        <abp-card-body style="background:#eeeeee;">
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.ReferenceId", AspItems = Model.ReferenceLookupList, IsShowLabel = true, FieldName = @L["ReferenceId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.ReferenceId)})
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.CarrierBkgNo" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.CarrierId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["CarrierId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.CarrierId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.ShipModeId", AspItems = Model.ShipModeLookupList, IsShowLabel = true, FieldName = @L["ShipModeId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.ShipModeId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.FreightTermForBuyerId", AspItems = Model.FreightTermLookupList, IsShowLabel = true, FieldName =  @L["FreightTermForBuyerId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.FreightTermForBuyerId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.FreightTermForSalerId", AspItems = Model.FreightTermLookupList, IsShowLabel = true, FieldName = @L["FreightTermForSalerId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.FreightTermForSalerId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.SvcTermFromId", AspItems = Model.SvgTermLookupList, IsShowLabel = true, FieldName = @L["SvcTermFromId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.SvcTermFromId) })
                                                </abp-column>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.SvcTermToId", AspItems = Model.SvgTermLookupList, IsShowLabel = true, FieldName = @L["SvcTermToId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.SvcTermToId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.IncotermsId", AspItems = Model.IncotermsLookupList, IsShowLabel = true, FieldName = @L["IncotermsId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.IncotermsId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.ShipperId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["ShipperId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.ShipperId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.CustomerId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["CustomerId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.CustomerId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.BillToId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["BillToId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.CustomerId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.ConsigneeId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["ConsigneeId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.ConsigneeId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.NotifyId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["NotifyId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.NotifyId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.ShippingAgentId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["ShippingAgentId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.ShippingAgentId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.HblAgentId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["HblAgentId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.HblAgentId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.CoLoaderId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["CustomerId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.CoLoaderId) })
                                                </abp-column>
                                            </abp-row>

                                        </abp-card-body>
                                    </abp-card>
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-card>
                                        <abp-card-body style="background:#eeeeee;">
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.VesselName" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.Voyage" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column size-md="_9" class="pr-0">
                                                    <abp-input asp-for="ExportBooking.ContainerQtyInputText" readonly="true" />
                                                </abp-column>
                                                <abp-column size-md="_3" class="pl-1">
                                                    
                                                    <button title="" class="btn btn-info align-self-end" style="color:#ffffff;margin-top:29px" onclick="onBtnContainerQtyClick(event)" type="button" data-target="#modal_ExportBooking_ContainerQtyInputText">
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                    <div class="modal" tabindex="-1" id="modal_ExportBooking_ContainerQtyInputText">
                                                        <div class="modal-dialog modal-dialog-centered">
                                                            <div class="modal-content">
                                                                <div class="modal-header">
                                                                    <h5 class="modal-title">@L["Title:AddCabinateTitle"]</h5>
                                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                </div>
                                                                <div class="modal-body">

                                                                    @if(!string.IsNullOrEmpty(Model.ExportBooking.ContainerQtyInputText))
                                                                    {
                                                                        foreach (string container in Model.ExportBooking.ContainerQtyInputText.Split(","))
                                                                        {
                                                                            { string[] containerArr = container.Split("*"); Model.CabinateSize=containerArr[0]; Model.Quantity= Convert.ToInt32(containerArr[1]);  }
                                                                            <abp-row  id="containerInputs-@Model.Index" name="containerInputs" class="mt-1">
                                                                            <abp-column size-md="_1"></abp-column>
                                                                            <abp-column size-md="_5">
                                                                                <label class="d-block">Cabinate type/size</label>
                                                                                <select id="ddlContainer">
                                                                                    @foreach (var item in Model.ContainerLookupList)
                                                                                    {
                                                                                            if(item.Text == Model.CabinateSize)
                                                                                            {
                                                                                                <option value="@item.Value" selected>@item.Text</option>       
                                                                                            }
                                                                                            else{
                                                                                                <option value="@item.Value">@item.Text</option>        
                                                                                            }
                                                                                    }    
                                                                                </select>
                                                                            </abp-column>
                                                                            <abp-column size-md="_3">
                                                                                <label>Quantity</label>
                                                                                    <input id="numQuantity" type="number" min="0" value="@Model.Quantity" style="width:inherit" />
                                                                            </abp-column>
                                                                            <abp-column size-md="_3" class="align-self-end">
                                                                                <abp-button icon="trash" button-type="Danger" size="Small" onclick="onRemoveContainerRow(event)" />
                                                                            </abp-column>
                                                                            </abp-row>

                                                                            { Model.Index++; }
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <abp-row id="containerInputs" name="containerInputs" class="mt-1">
                                                                        <abp-column size-md="_1"></abp-column>
                                                                        <abp-column size-md="_5">
                                                                            <label class="d-block">Cabinate type/size</label>
                                                                            <select id="ddlContainer" asp-items="@Model.ContainerLookupList"></select>
                                                                        </abp-column>
                                                                        <abp-column size-md="_3">
                                                                            <label>Quantity</label>
                                                                            <input id="numQuantity" type="number" min="0" style="width:inherit" />
                                                                        </abp-column>
                                                                        <abp-column size-md="_3" class="align-self-end">
                                                                            <abp-button icon="trash" button-type="Danger" size="Small" onclick="onRemoveContainerRow(event)" />
                                                                        </abp-column>
                                                                        </abp-row>
                                                                    }
                                                                    
                                                                    <abp-button id="btnAddMore"
                                                                                text="@L["AddMore"].Value"
                                                                                icon="plus"
                                                                                button-type="Primary"
                                                                                size="Small"
                                                                                class="mt-2 offset-sm-1"
                                                                                onclick="onBtnAddMoreClick(event)" />
                                                                </div>
                                                                <div class="modal-footer">
                                                                    <button type="button" class="btn btn-secondary btn-sm" onclick="onBtnContainerCancel()">Cancel</button>
                                                                    <button type="button" class="btn btn-primary btn-sm" onclick="onBtnContainerSave()">Save</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.PolId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = @L["PolId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.PolId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.PorId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = @L["PorId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.PorId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.PorEtd" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.PodId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = @L["PodId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.PodId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.PodEta" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.DelId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = @L["DelId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.DelId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.DelEta" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.FdestId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = @L["FdestId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.FdestId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.FdestEta" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.FbaId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["FbaId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.FbaId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row class="mt-3">
                                                <abp-column>
                                                    <button type="button" id="checkHideBtn">
                                                        <i class="fa fa-plus" id="showLi"></i>
                                                        <i class="fa fa-minus" id="hideLi"></i>
                                                    </button>
                                                    <input type="hidden" id="isHide" value="@Model.ExportBooking.GetHideCheck()" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row class="hideArea">
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.TransPort1Id", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = @L["TransPort1Id"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.TransPort1Id) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row class="hideArea">
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.Trans1Eta" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row class="hideArea">
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.EctNo" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row class="hideArea">
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.PrnNo" />
                                                </abp-column>
                                            </abp-row>
                                        </abp-card-body>
                                    </abp-card>
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-card>
                                        <abp-card-body style="background:#eeeeee;">
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.CargoTypeId", AspItems = _dropdown.CargoTypeLookupList, IsShowLabel = true, FieldName = @L["CargoTypeId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.CargoTypeId) })

                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.ReferralById", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["ReferralById"], ShowFiledContentValue = Convert.ToString(Model.ExportBooking.ReferralById), IsRequired = false })
                                                    @*<abp-input  asp-for="ExportBooking.ReferralById"></abp-input>*@
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.ContainerPickupNo" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.CargoPickupId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["CargoPickupId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.CargoPickupId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.TruckerId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["TruckerId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.TruckerId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.DeliveryToId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["DeliveryToId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.DeliveryToId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.EmptyPickupId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = @L["EmptyPickupId"], ShowFiledContentValue = Convert.ToString(Model.ExportBooking.EmptyPickupId), IsRequired = false })
                                                    @*<abp-input asp-for="ExportBooking.CargoArrivalDate" />*@
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <hr />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.WhCutOffTime" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.DocCutOffTime" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.PortCutOffTime" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.VgmCutOffTime" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.RailCutOffTime" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.EarlyReturnDatetime" />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <hr />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "ExportBooking.OfficeId", AspItems = _dropdown.SubstationLookupList, IsShowLabel = true, FieldName = @L["OfficeId"], SelectType = 0, ShowFiledContentValue = Convert.ToString(Model.ExportBooking.OfficeId) })
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <hr />
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <abp-input asp-for="ExportBooking.IsStackable" />
                                                </abp-column>
                                            </abp-row>

                                        </abp-card-body>
                                    </abp-card>
                                </abp-column>
                            </abp-row>

                            <abp-row>
                                <abp-column size-md="_12">
                                    <abp-card class="mt-3 mb-3">
                                        <abp-card-body style="background:#eeeeee;">
                                            <abp-row>
                                                <abp-column size-md="_1">
                                                    @L["Title:PoNo"]
                                                </abp-column>

                                                <abp-column size-md="_3">
                                                    <span style="font-size:0.8em;">@L["Title:PoNo.Description"]</span>
                                                </abp-column>
                                            </abp-row>
                                            <abp-row>
                                                <abp-column>
                                                    <div id="PoNoTag" tagname="PoNoTag"></div>
                                    <abp-input type="hidden" suppress-label="true" asp-for="@Model.ExportBooking.PoNo" />
                                                </abp-column>
                                            </abp-row>
                                                           <abp-row>

                                <abp-column size-md="_12">
                                    <div>
                                    </div>
                                    <abp-table width="100%" border="1">
                                        <tr ng-form="hbl.__form2" class="ng-valid ng-dirty ng-valid-parse" style="">
                                            <th width="5%" class="text-center">#</th>
                                            <th width="10%" style="white-space: nowrap">Container No.</th>
                                            <th width="15%">
                                                @L["PKG"]<br>
                                                <abp-select asp-for="@Model.CreateUpdateContainerBooking.PackageUnitId" suppress-label="true" asp-items="_dropdown.PackageUnitLookupList"></abp-select>
                                            </th>
                                            <th width="15%">
                                                @L["Weight"]<br>
                                                <abp-select asp-for="@Model.CreateUpdateContainerBooking.PackageWeightUnit" suppress-label="true" asp-items="@Model.RateUnitTypeLookupList"></abp-select>
                                            </th>
                                            <th width="15%">
                                                @L["Measurement"]<br>
                                                <abp-select asp-for="@Model.CreateUpdateContainerBooking.PackageMeasureUnit" suppress-label="true" asp-items="@Model.UnitTypeLookupList"></abp-select>
                                            </th>
                                            <th style="white-space: nowrap">P.O. No.</th>
                                        </tr>
                                        <tbody id="htrtbody">
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <td><input type="radio" name="SurplusType" /></td>
                                                <td>集裝箱總數</td>
                                                <td><input type="text" class="form-control" value="" readonly /></td>
                                                <td><input type="text" class="form-control" value="" readonly /></td>
                                                <td><input type="text" class="form-control" value="" readonly /></td>
                                                <td></td>
                                            </tr>
                                            <tr>
                                                <td style="align-items:center"><input type="radio" name="SurplusType" checked /></td>
                                                <td>手動輸入總數</td>
                                                <td><abp-input type="text" class="form-control" suppress-label="true" asp-for="CreateUpdateContainerBooking.PackageNum" /></td>
                                                <td><abp-input type="text" class="form-control" suppress-label="true" asp-for="CreateUpdateContainerBooking.PackageWeight" /></td>
                                                <td><abp-input type="text" class="form-control" suppress-label="true" asp-for="CreateUpdateContainerBooking.PackageMeasure" /></td>
                                                <td></td>

                                            </tr>
                                        </tfoot>
                                    </abp-table>

                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_12" class="table-responsive">
                                    <div>
                                        商品 / 艙單商品
                                        <abp-button class="btn btn-success me-md-2" type="button" id="addCommodityBtn" onclick="onAddCommodity()">+</abp-button>
                                        <abp-button class="btn btn-outline-danger me-md-2" type="button" id="deleteCommodityBtn" onclick="onRemoveCommodity()">delete</abp-button>
                                    </div>
                                    <abp-table width="100%" border="1">
                                        <tr>
                                            <th width="5%"></th>
                                            <th width="15%">商品描述</th>
                                            <th width="15%">包裝種類</th>
                                            <th width="10%">HTS代碼</th>
                                            <th width="5%">件數</th>
                                            <th width="5%">淨重</th>
                                            <th width="5%">毛重</th>
                                            <th width="10%">單價</th>
                                            <th width="5%">金額</th>
                                            <th width="10%">商品詳情</th>
                                            <th width="15%">集裝箱</th>
                                        </tr>
                                        <tbody id="commodityBody">
                                        </tbody>

                                    </abp-table>
                                </abp-column>
                            </abp-row>
                                            <abp-row>
                                                <abp-column size-md="_6">
                                                    <label for="ExportBooking_Mark">@L["Display:Mark"]</label>
                                                    <textarea id="ExportBooking_Mark" name="ExportBooking.Mark" class="form-control">@Model.ExportBooking.Mark</textarea>
                                                </abp-column>
                                                <abp-column size-md="_6">
                                                     <div>
                                        <div class="pull-left"><h7 class="form-section">Description</h7></div>
                                        <div class="pull-right">
                                            <div class="_font-12 inline-block">Copy: </div>
                                            <div class="btn-group">
                                                <abp-button id="btnPO" onclick="addPONumberForDescription()" size="Small" abp-border="Default"  disabled="true">@L["P.O"]</abp-button>
                                                <abp-button id="btnCommodity" onclick="addCommodityForDescription()" size="Small" abp-border="Default" disabled="true">@L["Commodity"]</abp-button>
                                                <abp-button id="btnCommodityHTS" onclick="addCommodityHTSForDescription()" size="Small" abp-border="Default" disabled="true">@L["CommodityAndHTS"]</abp-button>
                                            </div>
                                        </div>
                                    </div>
                                                    <textarea id="ExportBooking_Description" name="ExportBooking.Description" class="form-control">@Model.ExportBooking.Description</textarea>
                                                </abp-column>
                                            </abp-row>
                                            <abp-row class="mt-3">
                                                <abp-column>
                                                    <input type="radio" class="btn-check" name="RemarkBtn" id="BookingRemark" value="0" checked>
                                                    <label class="btn btn-outline-secondary checkLabel" for="BookingRemark" onclick="initRemark(0);">@L["Btn:BookingRemark"]</label>
                                                    <input type="radio" class="btn-check" name="RemarkBtn" id="ShippingRemark" value="1">
                                                    <label class="btn btn-outline-secondary checkLabel" for="ShippingRemark" onclick="initRemark(1);">@L["Btn:ShippingRemark"]</label>
                                                    <input type="radio" class="btn-check" name="RemarkBtn" id="CargoRemark" value="2">
                                                    <label class="btn btn-outline-secondary checkLabel" for="CargoRemark" onclick="initRemark(2);">@L["Btn:CargoRemark"]</label>

                                                </abp-column>
                                            </abp-row>
                                            <abp-row class="mt-3">
                                                <abp-column>
                                                    <textarea id="ExportBooking_BookingRemark" name="ExportBooking.BookingRemark" class="form-control remarkArea">@Model.ExportBooking.BookingRemark</textarea>
                                                    <textarea id="ExportBooking_ShippingRemark" name="ExportBooking.ShippingRemark" class="form-control remarkArea">@Model.ExportBooking.ShippingRemark</textarea>
                                                    <textarea id="ExportBooking_CargoRemark" name="ExportBooking.CargoRemark" class="form-control remarkArea">@Model.ExportBooking.CargoRemark </textarea>
                                                </abp-column>
                                            </abp-row>
                                        </abp-card-body>
                                    </abp-card>
                                </abp-column>

                            </abp-row>
                            <abp-row>
                                <abp-column>
                                    <abp-card-header style="background:#cccccc;color:#FFFFFF;">
                                        @L["Title:Memo"]
                                    </abp-card-header>
                                    <abp-card>
                                        <abp-card-body>
                                            <partial name="Memos/_Memo" model="new _MemoModel(Model.Id, Dolphin.Freight.Common.FreightPageType.SO)" />
                                        </abp-card-body>
                                    </abp-card>
                                </abp-column>
                            </abp-row>
                        </abp-card-body>
                    </abp-card>
                    <br />
                </div>
            </abp-column>
        </abp-row>
        <abp-row class="mt-3">
            <abp-column>
                <input type="hidden" name="ExportBooking.OfficeId" id="mOfficeId" value="@Model.ExportBooking.OfficeId" />
                <input type="hidden" name="ExportBooking.CancelReason" id="mCancelReason" value="@Model.ExportBooking.CancelReason" />
                <input type="hidden" name="ExportBooking.CancelById" class="form-control" id="ExportBooking_CancelById" value="@Model.ExportBooking.CancelById" />
                <input type="hidden" name="ExportBooking.ReferenceId" class="form-control" id="ExportBooking_ReferenceId" value="@Model.ExportBooking.ReferenceId" />
                <input type="hidden" name="ExportBooking.CarrierId" id="mCarrierId" value="@Model.ExportBooking.CarrierId" />
                <input type="hidden" name="ExportBooking.FreightTermForSalerId" id="mFreightTermForSalerId" value="@Model.ExportBooking.FreightTermForSalerId" />
                <input type="hidden" name="ExportBooking.FreightTermForBuyerId" id="mFreightTermForBuyerId" value="@Model.ExportBooking.FreightTermForBuyerId" />
                <input type="hidden" name="ExportBooking.SvcTermToId" id="mSvcTermToId" value="@Model.ExportBooking.SvcTermToId" />
                <input type="hidden" name="ExportBooking.SvcTermFromId" id="mSvcTermFromId" value="@Model.ExportBooking.SvcTermFromId" />
                <input type="hidden" name="ExportBooking.IncotermsId" id="mIncotermsId" value="@Model.ExportBooking.IncotermsId" />
                <input type="hidden" name="ExportBooking.ShipperId" id="mShipperId" value="@Model.ExportBooking.ShipperId" />
                <input type="hidden" name="ExportBooking.CustomerId" id="mCustomerId" value="@Model.ExportBooking.CustomerId" />
                <input type="hidden" name="ExportBooking.BillToId" id="mBillToId" value="@Model.ExportBooking.BillToId" />
                <input type="hidden" name="ExportBooking.ConsigneeId" id="mConsigneeId" value="@Model.ExportBooking.ConsigneeId" />
                <input type="hidden" name="ExportBooking.NotifyId" id="mNotifyId" value="@Model.ExportBooking.NotifyId" />
                <input type="hidden" name="ExportBooking.ShippingAgentId" id="mShippingAgentId" value="@Model.ExportBooking.ShippingAgentId" />
                <input type="hidden" name="ExportBooking.HblAgentId" id="mHblAgentId" value="@Model.ExportBooking.HblAgentId" />
                <input type="hidden" name="ExportBooking.CoLoaderId" id="mCoLoaderId" value="@Model.ExportBooking.CoLoaderId" />
                <input type="hidden" name="ExportBooking.PorId" id="mPorId" value="@Model.ExportBooking.PorId" />
                <input type="hidden" name="ExportBooking.PolId" id="mPolId" value="@Model.ExportBooking.PolId" />
                <input type="hidden" name="ExportBooking.PodId" id="mPodId" value="@Model.ExportBooking.PodId" />
                <input type="hidden" name="ExportBooking.DelId" id="mDelId" value="@Model.ExportBooking.DelId" />
                <input type="hidden" name="ExportBooking.FdestId" id="mFdestId" value="@Model.ExportBooking.FdestId" />
                <input type="hidden" name="ExportBooking.FbaId" id="mFbaId" value="@Model.ExportBooking.FbaId" />
                <input type="hidden" name="ExportBooking.TransPort1Id" id="mTransPort1Id" value="@Model.ExportBooking.TransPort1Id" />
                <input type="hidden" name="ExportBooking.CargoTypeId" id="mCargoTypeId" value="@Model.ExportBooking.CargoTypeId" />
                <input type="hidden" name="ExportBooking.ReferralById" id="mReferralById" value="@Model.ExportBooking.ReferralById" />
                <input type="hidden" name="ExportBooking.CargoPickupId" id="mCargoPickupId" value="@Model.ExportBooking.CargoPickupId" />
                <input type="hidden" name="ExportBooking.TruckerId" id="mTruckerId" value="@Model.ExportBooking.TruckerId" />
                <input type="hidden" name="ExportBooking.DeliveryToId" id="mDeliveryToId" value="@Model.ExportBooking.DeliveryToId" />
                <input type="hidden" name="ExportBooking.PoNo" id="mPoNo" value="@Model.ExportBooking.PoNo" />
                <input type="hidden" name="ExportBooking.ShipModeId" id="mShipModeId" value="@Model.ExportBooking.ShipModeId" />


                <input type="hidden" name="ExportBooking.EmptyPickupId" id="mEmptyPickupId" value="@Model.ExportBooking.EmptyPickupId" />


                <input type="hidden" name="ExportBooking.ForwardingAgentId" id="mForwardingAgentId" value="@Model.ExportBooking.ForwardingAgentId" />




                <abp-button class="btn btn-primary me-md-2" type="button" id="saveBtn">@L["Save"].Value</abp-button>
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column>
                
            </abp-column>
        </abp-row>
    </form>
</div>