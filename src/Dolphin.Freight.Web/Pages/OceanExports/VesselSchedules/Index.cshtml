@page
@using Dolphin.Freight.Localization
@using Dolphin.Freight.Permissions
@using Microsoft.AspNetCore.Authorization
@using Dolphin.Freight.Web.Pages.Components
@using Dolphin.Freight.Web.CommonService
@using Microsoft.Extensions.Localization
@model Dolphin.Freight.Web.Pages.OceanExports.VesselSchedules.IndexModel
@inject IStringLocalizer<FreightResource> L
@inject IAuthorizationService AuthorizationService
@inject IDropdownService _dropdown;
@section scripts{
    <script type="text/javascript">
        var _changeInterval = null;
        var queryListFilter = function () {
            debugger;
            return {
                search: $("#Keyword").val(),
                officeId: $("#VesselSchedule_OfficeId").val() == '' ? null : $("#VesselSchedule_OfficeId").val(),
                ovearseaAgentId: $("#VesselSchedule_OverseaAgentId").val() == '' ? null : $("#VesselSchedule_OverseaAgentId").val(),
                carrierId: $("#VesselSchedule_CarrierId").val() == '' ? null : $("#VesselSchedule_CarrierId").val() ,
                shippingAgentId: $("#VesselSchedule_ShippingAgentId").val() == '' ? null : $("#VesselSchedule_ShippingAgentId").val(),
                forwardingAgentId: $("#VesselSchedule_ForwardingAgentId").val() == '' ? null : $("#VesselSchedule_ForwardingAgentId").val(),
                blTypeId: $("#VesselSchedule_BlTypeId").val() == '' ? null : $("#VesselSchedule_BlTypeId").val(),
                pol: $("#VesselSchedule_PolId").val() == '' ? null : $("#VesselSchedule_PolId").val(),
                shipModeId: $("#VesselSchedule_ShipModeId").val() == '' ? null : $("#VesselSchedule_ShipModeId").val(),
                postDate: $("#PostDate").val(),
                eta: $("#ETA").val(),
                etd: $("#ETD").val(),
                vessel: $("#Vessel").val(),
              
                
            };
        };
        $(document).ready(function () {

            var l = abp.localization.getResource('Freight');
            var dataTable;
           

                                            
            var columns = [
    {
        title: l('Actions'),
        orderable: false,
        rowAction: {
            items:
                [
                    {
                          text: l('Edit'),
                          visible: abp.auth.isGranted('Settings.ItNoRanges.Edit'), //CHECK for the PERMISSION
                          action: function (data) {
                              if (data.record.isLocked) {

                              }
                              location.href = 'Edit?Id=' + data.record.id;

                          }
                      },
               {
                          text: l('Delete'),
                          visible: abp.auth.isGranted('Settings.ItNoRanges.Delete'),

                          action: function (data) {
                              abp.message.confirm(l('DeletionConfirmationMessage'))
                                  .then(function (confirmed) {
                                      if (confirmed) {
                                          dolphin.freight.importExport.oceanExports.vesselScheduleas.vesselSchedule
                                              .delete(data.record.id)
                                              .then(function () {
                                                  abp.message.success(l('SuccessfullyDeleted'));
                                                  dataTable.ajax.reload();
                                              });
                                      }
                                  });


                          }
                      }
            ]
        }

    },
 
]



            dolphin.freight.web.controllers.configuration.getJsonConfig('VesselSchedules').done(function (data) {
                data.forEach(function (item) {
                                if (!item.lock && item.checkable) {
                    
                        var column;


                        column = {
                            title: l(item.text),
                            data: item.name
                        };
                 
                    columns.push(column);
                                }

                });

                var col = (columns.length > 2) ? [[2, 'asc']] : [[0, 'asc']];





               dataTable = $('#VesselScheduleListTable').DataTable(
                    abp.libs.datatables.normalizeConfiguration({
                        serverSide: true,
                paging: true,
                order: col,
                searching: false,
                scrollX: true,
                processing: true,
                responsive: {
                    details: {
                        type: 'column'
                    }
                },
                        ajax: abp.libs.datatables.createAjax(dolphin.freight.importExport.oceanExports.vesselScheduleas.vesselSchedule.queryList, queryListFilter),
                        columnDefs: columns
                    })
                );
            });


               $('#btnConfiguration').click(function (e) {
        var _configurationModal = new abp.ModalManager({
            viewUrl: abp.appPath + 'Configuration',
            modalClass: 'ConfigurationViewModel'
        });

        _configurationModal.open({
            src: 'VesselSchedules'
        });
    })
            // $('#Search').keyup(function () {
            //     clearInterval(_changeInterval)
            //     _changeInterval = setInterval(function () {
            //         dataTable.ajax.reload();
            //         clearInterval(_changeInterval)
            //     }, 1000);
            // });
            $('#Search').click(function (e) {
                dataTable.ajax.reload();
            });
            $('#CancelFilter').click(function (e) {
                $("#Keyword").val(null);
                $("select[name='VesselSchedule.OfficeId']").val(null).trigger("change");
                // $("#VesselSchedule_OfficeId").val(null);
                $("select[name='VesselSchedule_OverseaAgentId']").val(null);
                $("select[name = 'VesselSchedule_CarrierId']").val(null).trigger("change");
                $("select[name='VesselSchedule_ShippingAgentId']").val(null).trigger("change");
                $("select[name='VesselSchedule_ForwardingAgentId']").val(null).trigger("change");
                $("select[name='VesselSchedule_BlTypeId']").val(null).trigger("change");
                $("select[name='VesselSchedule_PolId']").val(null).trigger("change");
                $("select[name='VesselSchedule_ShipModeId']").val(null).trigger("change");
                $("#PostDate").val(null);
                $("#ETA").val(null);
                $("#ETD").val(null);
                $("#Vessel").val(null);
                dataTable.ajax.reload();
            });
            $('#NewVesselScheduleButton').click(function (e) {
                location.href = 'Create';
            });

        });

    </script>

}
<div class="page-header">
    <div class="breadcrumb-wrapper">
        <abp-breadcrumb>
            <abp-breadcrumb-item title=@L["Menu:OceanExports"] />
            <abp-breadcrumb-item title=@L["Menu:VesselSchedules.Index"] href="#" />
        </abp-breadcrumb>
    </div>
</div>
<div class="page-content-area">
    <abp-card>
        <abp-card-header>
             <abp-row class="w-100">
                <abp-column size-md="_6">
            <div class="title">
                @L["Menu:VesselSchedules.Index"]
            </div>
              </abp-column>
                <abp-column size-md="_6" class="text-end p-0">
              <abp-button id="btnConfiguration"
                                text="@L["Configuration"].Value"
                                icon="gear"
                                button-type="Primary" />
            <abp-button id="NewVesselScheduleButton"
                        text="@L["Create"].Value"
                        icon="plus"
                       button-type="Secondary" />
                        </abp-column>
                        </abp-row>
        </abp-card-header>
         <abp-card-body class="collapse hide" id="mblDiv">
            <abp-row class="mb-3">
                <abp-column size-md="_1">
                    <label>@L["Keyword"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input class="form-control" id="Keyword" />
                </abp-column>
                <abp-column size-md="_1">
                    <label>@L["OfficeId"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.OfficeId", AspItems = Model.SubstationLookupList, IsShowLabel = false, FieldName = "OfficeId", SelectType = 2,ShowFiledContentValue=null })

                    
                </abp-column>
                <abp-column size-md="_1">
                    <label>@L["OvearseaAgent"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.OverseaAgentId", AspItems = Model.TradePartnerLookupList, IsShowLabel = false, FieldName = "MblOverseaAgentId", SelectType = 2,ShowFiledContentValue=null})
                </abp-column>
                <abp-column size-md="_1">
                    <label>@L["Carrier"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.CarrierId", AspItems = Model.TradePartnerLookupList, IsShowLabel = false, FieldName = "MblCarrierId", SelectType = 2,ShowFiledContentValue=null })
                </abp-column>

            </abp-row>
         
            <abp-row class="mb-3">
                <abp-column size-md="_1">
                    <label>@L["Vessel"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input class="form-control" id="Vessel" />
                </abp-column>
                <abp-column size-md="_1">
                    <label>@L["Pol/Pod"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.PolId",Selected=null, AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = false, FieldName = "PolId", SelectType = 2,ShowFiledContentValue=null })
                </abp-column>
                <abp-column size-md="_1">
                    <label>@L["ShippingAgent"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.ShippingAgentId",Selected=null, AspItems = Model.TradePartnerLookupList, IsShowLabel = false, FieldName = "ShippingAgentId", SelectType = 2,ShowFiledContentValue=null })
                </abp-column>
                <abp-column size-md="_1">
                    <label>@L["ForwardingAgent"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.ForwardingAgentId",Selected=null, AspItems = Model.TradePartnerLookupList, IsShowLabel = false, FieldName = "ForwardingAgentId", SelectType = 2,ShowFiledContentValue=null })
                </abp-column>

            </abp-row>
            <abp-row class="mb-3">
                <abp-column size-md="_1">
                    <label>@L["PostDate"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input class="form-control" type="date" id="PostDate" />
                </abp-column>
                <abp-column size-md="_1">
                    <label>@L["ShipMode"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.ShipModeId",Selected=null, AspItems = Model.ShipModeLookupList, IsShowLabel = false, FieldName = "ShipModeId",ShowFiledContentValue=null })
                </abp-column>
               
               
                <abp-column size-md="_1">
                    <label>@L["ETD"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input type="date" class="form-control" id="ETD" />
                </abp-column>
                <abp-column size-md="_1">
                    <label>@L["ETA"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input type="date" class="form-control" id="ETA" />
                </abp-column>
            </abp-row>
            <abp-row class="mb-3">
                
                <abp-column size-md="_1">
                    <label>@L["BLType"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.BlTypeId", Selected=null, AspItems = Model.BlTypeList, IsShowLabel = false, FieldName = "BlTypeId", SelectType = 2,ShowFiledContentValue=null})
                </abp-column>
                <abp-column size-md="_1">
                    <label>@L["Block"].Value</label>
                </abp-column>
                <abp-column size-md="_2">
                    <input class="form-control" id="BlockId" />
                </abp-column>
               

            </abp-row>
            
            <abp-row>
                <abp-abp-column class="text-center">
               
                    <abp-button type="button" id="CancelFilter" text="@L["Cancel"]" button-type="Danger" />

                    <abp-button type="button" id="Search" text="@L["Search"]" button-type="Primary" />
               
                </abp-abp-column>
            </abp-row>
            </abp-card-body>
        <abp-card-body>
            <div class="text-end">
              
                <abp-button id="FilterGlCodeButton"
                            text="@L["Filter"].Value"
                            icon="filter"
                            class="btn btn-sm btn-success"
                            data-bs-toggle="collapse" data-bs-target="#mblDiv" aria-expanded="true" aria-controls="mblDiv" />
            </div>
            <abp-table class="nowrap" striped-rows="true" id="VesselScheduleListTable"></abp-table>
        </abp-card-body>
    </abp-card>
</div>

