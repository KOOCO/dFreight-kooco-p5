@page
@using Dolphin.Freight.Localization
@using Dolphin.Freight.Web.Pages.Components
@using Microsoft.Extensions.Localization
@using Dolphin.Freight.Web.CommonService
@using Dolphin.Freight.Web.Pages.Shared.Memos;
@model Dolphin.Freight.Web.Pages.OceanExports.VesselScheduleas.CreateModel
@inject IStringLocalizer<FreightResource> L
@inject IDropdownService _dropdown;
@section scripts
    {
    <script type="text/javascript">
        var trindex = 0;
         var containerSizes = [];
        $(document).ready(function () {

            initializeDropdownSearch("VesselSchedule_OfficeId");
            initializeDropdownSearch("VesselSchedule_BlTypeId");
            initializeDropdownSearch("VesselSchedule_MblCarrierId");
            initializeDropdownSearch("VesselSchedule_BlAcctCarrierId");
            initializeDropdownSearch("VesselSchedule_ShippingAgentId");
            initializeDropdownSearch("VesselSchedule_MblOverseaAgentId");
            initializeDropdownSearch("VesselSchedule_MblNotifyId");
            initializeDropdownSearch("VesselSchedule_ForwardingAgentId");
            initializeDropdownSearch("VesselSchedule_CoLoaderId");
            initializeDropdownSearch("VesselSchedule_DeliveryToId");
            initializeDropdownSearch("VesselSchedule_EmptyPickupId");
            initializeDropdownSearch("VesselSchedule_PolId");
            initializeDropdownSearch("VesselSchedule_PorId");
            initializeDropdownSearch("VesselSchedule_PodId");
            initializeDropdownSearch("VesselSchedule_DelId");
            initializeDropdownSearch("VesselSchedule_FdestId");
            initializeDropdownSearch("VesselSchedule_FreightTermId");
            initializeDropdownSearch("VesselSchedule_ShipModeId");
            initializeDropdownSearch("VesselSchedule_SvcTermFromId");
            initializeDropdownSearch("VesselSchedule_SvcTermToId");
            initializeDropdownSearch("VesselSchedule_OblTypeId");
            initializeDropdownSearch("VesselSchedule_TransPort1Id");

            var l = abp.localization.getResource('Freight');

            $("#saveBtn").click(function () {
                $('#createForm').submit();
            });
            $('#createForm').on('abp-ajax-success', function (result, rs) {
                event.preventDefault();
                location.href = 'Edit?ShowMsg=true&Id=' + rs.responseText.id
            });
        });
        var cardIndex = 0;
        function addHBtn() {
            if (cardIndex == 0) {
                var divHtml = addCardRight('new_' + cardIndex, 'new HB/L', '', '#f3c200');
                $("#hblCard").show();
                $("#hblCardDiv").append(divHtml)
                cardIndex++;
            } else {
                var l = abp.localization.getResource('Freight');
                abp.message.info(l("Message:AddHBLErr"));
            }

        }
           dolphin.freight.settings.containerSizes.containerSize.queryAllList({}).done(function (result) {
                if (result != null && result.length > 0) {
                    containerSizes = result;
                    // dolphin.freight.importExport.containers.container.queryList({ QueryId: 'Model.Id' }).done(function (result) {
                    //     if (result != null && result.length > 0) {
                    //         for (var i = 0; i < result.length; i++) {
                    //             var value1 = result[i].containerNo;
                    //             var value2 = result[i].containerSizeId;
                    //             var value3 = result[i].sealNo;
                    //             var value4 = result[i].packageNum;
                    //             var value5 = result[i].packageWeight;
                    //             var value6 = result[i].packageMeasure;
                    //             addTrTag(value1, value2, value3, value4, value5, value6);

                    //         }
                    //     }
                    // });
                }
            });
         function exportDiv(trindex) {
            $("#tr2_" + trindex).show();
        }
        function addCardRight(hblId, hblNo, soNo, bgColor) {
            var cardHtml = "<div id='card_" + hblId + "' class='card mt-3' onclick=''>"
            cardHtml = cardHtml + "<div class='card-body'  style='background:" + bgColor + ";color:#FFFFFF;'>"
            cardHtml = cardHtml + "<p class='card-text'> " + hblNo + ".</p>"
            cardHtml = cardHtml + "<p class='card-text'> " + soNo + ".</p>"
            cardHtml = cardHtml + " </div> </div>"
            return cardHtml;
        }
         $("#addBtn").click(function () {
          
                addTr()
            })
                $("#deleteBtn").click(function () {
                $("input[name='f0']:checked").each(function () {
                    var tid = $(this).val();
                    $("#did_" + tid).val("1");
                    $("#tr_" + $(this).val()).hide();
                })
            })
        function addTr() {
            addTrTag("", "", "", "", "", "","","");
        }
        // function addTrTag(value1, value2, value3, value4, value5, value6) {
        //     trindex++;
        //     var trhtml = "<tr id='tr_" + trindex + "'><td><input type='checkbox' name='f0' id='f0_" + trindex + "'  value='" + trindex + "'    /></td>"
        //     trhtml = trhtml + "<td><input type='text' name='f1' id='f1_" + trindex + "' class='form-control' value='" + value1 + "'/> </td>"
        //     trhtml = trhtml + "<td><input type='text' name='f2' id='f2_" + trindex + "' class='form-control' value='" + value2 + "' /></td>"
        //     trhtml = trhtml + "<td><input type='text' name='f3' id='f3_" + trindex + "' class='form-control' value='" + value3 + "' /></td>"
        //     trhtml = trhtml + "<td><input type='text' name='f4' id='f4_" + trindex + "' class='form-control' value='" + value4 + "' /></td>"
        //     trhtml = trhtml + "<td><input type='text' name='f5' id='f5_" + trindex + "' class='form-control' value='" + value5 + "' /></td>"
        //     trhtml = trhtml + "<td><input type='text' name='f6' id='f6_" + trindex + "' class='form-control' value='" + value6 + "' /></td>"
        //     trhtml = trhtml + "</tr>"
        //     $("#trtbody").append(trhtml);
        // }
            function addTrTag(value1, value2, value3, value4, value5, value6, value7,value8) {

            var trhtml = "<tr id='tr_" + trindex + "'><td><input type='hidden' name='CreateUpdateContainerDtos[" + trindex + "].Status' value='0' id='did_" + trindex + "' />  <input type='checkbox' name='f0' id='f0_" + trindex + "'  value='" + trindex + "'    /></td>"
            trhtml = trhtml + "<td><div class='input-group'><input type='text' name='CreateUpdateContainerDtos[" + trindex + "].ContainerNo' id='f1_" + trindex + "' class='form-control' value='" + value1 + "'/> <div class='input-group-append'><button type='button'  onclick='exportDiv(\"" + trindex + "\");' >+</button> </div></div></td>"
                trhtml = trhtml + "<td>";
          /*   <input type='hidden' name='CreateUpdateContainerDtos[" + trindex + "].MblId' value='' /><input type='hidden' name='CreateUpdateContainerDtos[" + trindex + "].MblType' value='1' /> */
            trhtml = trhtml + getcontainerSizeSelect(value2) + "</td>";
            trhtml = trhtml + "<td><input type='text' name='CreateUpdateContainerDtos[" + trindex + "].SealNo' id='f3_" + trindex + "' class='form-control' value='" + value3 + "' /></td>"
             trhtml = trhtml + "<td><input type='text' name='CreateUpdateContainerDtos[" + trindex + "].SealNo' id='f4_" + trindex + "' class='form-control' value='" + value4 + "' /></td>"
            trhtml = trhtml + "<td><input type='text' name='CreateUpdateContainerDtos[" + trindex + "].PackageNum ' id='f5_" + trindex + "' class='form-control' value='" + value5 + "' /></td>"
            trhtml = trhtml + "<td><input type='text' name='CreateUpdateContainerDtos[" + trindex + "].PackageWeight' id='f6_" + trindex + "' class='form-control' value='" + value6 + "' /></td>"
            trhtml = trhtml + "<td><input type='text' name='CreateUpdateContainerDtos[" + trindex + "].PackageMeasure' id='f7_" + trindex + "' class='form-control' value='" + value7 + "' /></td>"
               trhtml = trhtml + "<td><input type='text' name='CreateUpdateContainerDtos[" + trindex + "].PackageMeasure' id='f8_" + trindex + "' class='form-control' value='" + value8 + "' /></td>"
            trhtml = trhtml + "</tr>"
            trhtml = trhtml + "<tr id='tr2_" + trindex + "' style='display:none;'><td colspan='6'><div></div></td>"
            trhtml = trhtml + "</tr>"
            $("#trtbody").append(trhtml);
            trindex++;
        }
        function getcontainerSizeSelect(selectedId) {
            var selectHtml = "<select name='CreateUpdateContainerDtos[" + trindex + "].ContainerSizeId' class='form-control' >";
            for (var i = 0; i < containerSizes.length; i++) {
                selectHtml = selectHtml + "<option value='" + containerSizes[i].id + "' ";
                if (containerSizes[i].id == selectedId) selectHtml = selectHtml + " selected ";
                selectHtml = selectHtml + ">" + containerSizes[i].containerCode + "</option>"
            }
            selectHtml = selectHtml + "</select>";
            return selectHtml;
        }
    </script>
}
<div class="page-header">
    <div class="breadcrumb-wrapper">
        <abp-breadcrumb>
            <abp-breadcrumb-item title=@L["Menu:OceanExports"] />
            <abp-breadcrumb-item title=@L["Menu:VesselSchedules.Create"] href="#" />
        </abp-breadcrumb>
    </div>
    <nav class="submenu">
        <ol>
            <li class="menu-item active">
                <a href="javascript:void(0)">@L["Tab:Basic"]</a>
            </li>
            <li class="menu-item disabled ">
                <a href="javascript:void(0)">@L["Tab:Accounting"]</a>
            </li>
            <li class="menu-item disabled">
                <a href="javascript:void(0)">@L["Tab:Doc"]</a>
            </li>
        </ol>
    </nav>
</div>
<div class="page-content-area">
    <form submit-button="true" data-ajaxForm="true" id="createForm">
        <abp-row>
            <abp-column size-md="_9">
                <div class="board-wrap">
                    <abp-card class="card board-item">
                        <abp-card-header class="card-header active" style="background:#555555;color:#FFFFFF;">

                            <abp-card-title>
                                @L["VesselSchedule"] <span id="title0"></span>
                                <span id="title0" style="font-size:0.8em;"></span>
                                <span id="title2" style="font-size:0.8em;"></span>
                                <span id="title3" style="font-size:0.8em;"></span>
                                <span id="title4" style="font-size:0.8em;"></span>
                                <span id="title5" style="font-size:0.8em;"> </span>
                            </abp-card-title>

                            <button class="btn btn-collapse " type="button" data-bs-toggle="collapse" data-bs-target="#mblDiv" aria-expanded="true" aria-controls="mblDiv">
                            </button>
                        </abp-card-header>
                        <abp-card-body class="collapse show customForm" id="mblDiv">
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.ReferenceNo" required-symbol="false" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.OfficeId", AspItems = Model.SubstationLookupList, IsShowLabel = true, FieldName = "OfficeId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.OfficeId.ToString() })

                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.BlTypeId", AspItems = Model.BlTypeList, IsShowLabel = true, FieldName = "BlTypeId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.BlTypeId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.PostDate" disabled=true />
                                </abp-column>
                            </abp-row>
                            <abp-row>

                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.SoNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.ItnNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.MblCarrierId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblCarrierId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.MblCarrierId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.BlAcctCarrierId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "BlAcctCarrierId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.BlAcctCarrierId.ToString() })
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.ShippingAgentId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "ShippingAgentId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.ShippingAgentId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.MblOverseaAgentId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblOverseaAgentId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.MblOverseaAgentId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.MblNotifyId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblNotifyId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.MblNotifyId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.ForwardingAgentId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "ForwardingAgentId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.ForwardingAgentId.ToString() })
                                </abp-column>
                            </abp-row>
                            <abp-row class="mt-5">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.VesselName" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.Voyage" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.DeliveryToId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "DeliveryToId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.DeliveryToId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.EmptyPickupId", AspItems = Model.TradePartnerLookupList, IsShowLabel = true, FieldName = "EmptyPickupId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.EmptyPickupId.ToString() })
                                </abp-column>


                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.PolId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "PolId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.PolId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.PolEtd" required-symbol="false" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.PorId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "PorId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.PorId.ToString() })
                                 </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.PorEtd" required-symbol="false" />
                                </abp-column>


                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.PodId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "PodId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.PodId.ToString() })
                                   </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.PodEta" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.DelId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "DelId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.DelId.ToString() })
                                    </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.DelEta" />
                                </abp-column>

                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.FdestId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "FdestId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.FdestId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.FdestEta" />
                                </abp-column>
                                <abp-column size-md="_6">
                                    &nbsp;
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column>
                                    &nbsp;
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.FreightTermId", AspItems = Model.FreightTermLookupList, IsShowLabel = true, FieldName = "FreightTermId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.FreightTermId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.ShipModeId", AspItems = Model.ShipModeLookupList, IsShowLabel = true, FieldName = "ShipModeId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.ShipModeId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.SvcTermFromId", AspItems = Model.SvcTermList, IsShowLabel = true, FieldName = "SvcTermFromId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.SvcTermFromId.ToString() })

                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.SvcTermToId", AspItems = Model.SvcTermList, IsShowLabel = true, FieldName = "SvcTermToId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.SvcTermToId.ToString() })
                                </abp-column>

                            </abp-row>
                            
                            <abp-row class="mt-5">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.OblTypeId", AspItems = _dropdown.OblTypeLookupList, IsShowLabel = true, FieldName = "OblTypeId", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.OblTypeId.ToString() })
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.RailCutOffTime" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.PortCutOffTime" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.VgmCutOffTime " />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.OnBoardDate" />
                                </abp-column>
                                <abp-column size-md="_9">

                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.SubBlNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.ServiceContactNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.ForwardRefNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "VesselSchedule.TransPort1Id", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "TransPort1Id", SelectType = 2, ShowFiledContentValue = Model.VesselSchedule.TransPort1Id.ToString() })
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="VesselSchedule.Trans1Eta" />
                                </abp-column>
                                <abp-column size-md="_9">

                                </abp-column>

                            </abp-row>
                            <abp-row>

                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_12">
                                    <div>
                                        集裝箱清單
                                        <abp-button class="btn btn-success me-md-2" type="button" id="addBtn">+</abp-button>
                                        <abp-button class="btn btn-outline-danger me-md-2" type="button" id="deleteBtn">-</abp-button>
                                    </div>
                                    <table width="100%" style="border-block-color:#333333;padding-left:10px;margin:4px;">
                                        <tr style="border-block-color:#333333;padding-left:10px;margin-left:4px;">
                                            <th width="5%"><input type="checkbox" id="checkAll" /></th>
                                            <th width="12%">@L["Display:PackageNo"]</th>
                                            <th width="12%">@L["Display:PackageSize"]</th>
                                            <th width="12%">@L["Display:Seal"]</th>
                                            <th width="12%">@L["Display:SoNo"]</th>
                                            <th width="8%">@L["Display:PackageType"]</th>
                                            <th width="16%">@L["Display:Weight"]</th>
                                            <th width="16%">@L["Display:Volume"]</th>
                                            <th width="7%">@L["Display:Package"]</th>
                                        </tr>
                                        <tbody id="trtbody">
                                        </tbody>

                                    </table>

                                </abp-column>
                            </abp-row>

                               <abp-row>
                                <abp-column>
                                    <abp-card-header style="background:#cccccc;color:#FFFFFF;">
                                        @L["Title:Memo"]
                                    </abp-card-header>
                                    <abp-card>
                                        <abp-card-body>
                                            <partial name="Memos/_Memo" model="new _MemoModel(Model.VesselSchedule.Id, Dolphin.Freight.Common.FreightPageType.VS)" />
                                        </abp-card-body>
                                    </abp-card>
                                </abp-column>
                            </abp-row>
                        </abp-card-body>
                    </abp-card>
                    <br />
                </div>
            </abp-column>
            <abp-column size-md="_3">

                <div class="card-wrap">


                    <button class="btn btn-block btn-add">
                        <i class="fa-solid fa-plus"></i>@L["Btn:AddSO"].Value
                    </button>

                    <div class="function-wrap">

                        <div class="form">
                            <div class="form-group">
                                <label for="cardOrderSet">卡片排序</label>
                                <select class="form-control selectpicker" id="cardOrderSet">
                                    <option selected>請選擇</option>
                                    <option value="建立日期">建立日期</option>
                                    <option value="HB/L 號碼">HB/L 號碼</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label class="sr-only" for="cardOrder">Preference</label>
                                <select class="form-control selectpicker" id="cardOrder">
                                    <option selected>請選擇</option>
                                    <option value="遞增">遞增</option>
                                    <option value="遞減">遞減</option>
                                </select>
                            </div>
                            <fieldset class="form-group">
                                <legend class="col-form-label">卡片顯示</legend>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" id="inlineCheckbox1"
                                           value="option1">
                                    <label class="form-check-label"
                                           for="inlineCheckbox1">託運人與收貨人</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" id="inlineCheckbox2"
                                           value="option2">
                                    <label class="form-check-label" for="inlineCheckbox2">名稱標籤</label>
                                </div>
                            </fieldset>

                            <button type="submit" class="btn btn-dark btn-block btn-update">
                                <i class="fa-solid fa-arrows-rotate"></i>更新
                            </button>
                        </div>

                    </div>



                    <div class="cardAnchor" id="hblCardDiv">
                    </div>
                </div>
            </abp-column>
        </abp-row>
        <abp-row class="mt-3">
            <abp-column>
                <abp-button class="btn btn-primary me-md-2" type="button" id="saveBtn">@L["Save"].Value</abp-button>
            </abp-column>
        </abp-row>
        <abp-row>
            <abp-column>
                &nbsp;
            </abp-column>
        </abp-row>
    </form>
</div>