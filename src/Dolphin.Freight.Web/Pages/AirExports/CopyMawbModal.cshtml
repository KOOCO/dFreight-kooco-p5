@page
@using Dolphin.Freight.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal
@model Dolphin.Freight.Web.Pages.AirExports.CopyMawbModal
@inject IStringLocalizer<FreightResource> L
@{
    Layout = null;
}
<script>
    $(document).ready(function () {

        // Get references to the checkboxes
        var accountingCheckbox = $('#accountingCheckbox');
        var apCheckbox = $('#apCheckbox');
        var arCheckbox = $('#arCheckbox');
        var dcCheckbox = $('#dcCheckbox');

        // Disable "A/P", "A/R", and "D/C" checkboxes initially
        apCheckbox.prop('disabled', false);
        arCheckbox.prop('disabled', false);
        dcCheckbox.prop('disabled', false);

        // Function to update the state of the "Accounting Information" checkbox
        function updateAccountingCheckboxState() {
            var apChecked = apCheckbox.is(':checked');
            var arChecked = arCheckbox.is(':checked');
            var dcChecked = dcCheckbox.is(':checked');

            // Update the state of "Accounting Information" checkbox based on the state of "A/P", "A/R", and "D/C" checkboxes
            accountingCheckbox.prop('checked', apChecked || arChecked || dcChecked);

            // Enable or disable "A/P", "A/R", and "D/C" checkboxes based on the state of "Accounting Information" checkbox
            apCheckbox.prop('disabled', !accountingCheckbox.is(':checked'));
            arCheckbox.prop('disabled', !accountingCheckbox.is(':checked'));
            dcCheckbox.prop('disabled', !accountingCheckbox.is(':checked'));
        }

        // When the "Accounting Information" checkbox is changed
        accountingCheckbox.change(function () {
            var isChecked = accountingCheckbox.is(':checked');

            // Update the state of "A/P", "A/R", and "D/C" checkboxes based on the "Accounting Information" checkbox
            apCheckbox.prop('checked', isChecked);
            arCheckbox.prop('checked', isChecked);
            dcCheckbox.prop('checked', isChecked);

            // Enable or disable "A/P", "A/R", and "D/C" checkboxes based on the "Accounting Information" checkbox
            apCheckbox.prop('disabled', !isChecked);
            arCheckbox.prop('disabled', !isChecked);
            dcCheckbox.prop('disabled', !isChecked);
        });

        // When any of "A/P", "A/R", or "D/C" checkboxes are changed
        apCheckbox.change(function () {
            updateAccountingCheckboxState();
        });
        arCheckbox.change(function () {
            updateAccountingCheckboxState();
        });
        dcCheckbox.change(function () {
            updateAccountingCheckboxState();
        });
    });
    // $("#copyForm").submit(function (event) {
    //     // event.preventDefault(); // Prevent default form submission
    //     var id = $('#Id').val();
    //     var isFlightInfo = $('#IsCopyFlightInfo').val();
    //     var copyHawb = $('#CopyHawb').val();
    //     var isCopyCommodity = $('#CopyCommodity').val();
    //     var isAccountingInformation = $('#accountingCheckbox').val();
    //     var apCheckbox = $('#apCheckbox').val();
    //     var arCheckbox = $('#arCheckbox').val();
    //     var dcCheckbox = $('#dcCheckbox').val();
    //     // Serialize form values as a query string
    //     var formData = $(this).serialize();
    //     debugger;
        
    //     // You can now use the formData for your custom actions or AJAX request
    // });
    

    $('#copyForm').on('abp-ajax-success', function (result, rs) {
        if (isIndexPage()) {
            var allHbl;
            var firstHbl;
            var container;
            var invoice;
            if ($('#CopyModel\\.CopyHawbRadioAllHBL')[0].checked) {
                allHbl = 'true';
            } else if ($('#CopyModel\\.CopyHawbRadioFirstHblOnly')[0].checked) {
                allHbl = 'false';
            }
            if ($('#CopyModel_CopyCommodity')[0].checked){
                container = 'container';
            }
            if ($('input[name="CopyModel.CopyAccountingInformation"]')[0].checked) {
                invoice = 'invoices';
            }
            var checkedCheckbox = $('.selectCheckbox:checked');
            var mblId = checkedCheckbox.attr('data-id');
            dolphin.freight.web.controllers.importExport.copyMblDetails(mblId, allHbl, container, invoice).done(function (res)
            { 
                window.location.href = "/OceanExports/EditModal?Id=" + res.newMblId;
            });
        }
        else{
            location.href = 'CreateMawb?Id=' + rs.responseText.Id + '&IsCopyFlightInfo=' + rs.responseText.IsCopyFlightInfo + '&CopyHawb=' + rs.responseText.CopyHawb + '&AccountingInfo=' + rs.responseText.CopyAccountingInformation + '&CopyCommodity=' + rs.responseText.CopyCommodity + '&IsAPCopy=' + rs.responseText.AP + '&IsARCopy=' + rs.responseText.AR + '&IsDCCopy=' + rs.responseText.DC
        }
    });

    function isIndexPage() {
        var pathSegments = window.location.pathname.split('/');
        var lastSegment = pathSegments[pathSegments.length - 1];

        lastSegment = lastSegment.trim();

        return lastSegment.toLowerCase() === "index" || lastSegment.toLowerCase() === "mbllist";
    }
</script>
<form abp-model="CopyModel" id="copyForm" method="post" action="@Url.Page("/AirExports/CopyMawbModal")">
    <abp-modal size="Large">
 
            @*<abp-modal-header title="@L["CopyMawb"]"></abp-modal-header>*@
        <abp-modal-header title="@(Model.ShouldDisplayAlternativeTitle ? @L["CopyMbl"] : @L["CopyMawb"])"></abp-modal-header>
      

        <abp-modal-body>
          
                <abp-input type="hidden" asp-for="@Model.Id" />
          <abp-column size="_12">
                @if (Model.ShouldDisplayAlternativeTitle)
                {
                    <p>Please Select How Would you like to Copy MBL Information?</p>
                } else
                {
                    <p>Please Select How Would you like to Copy MAWB Information?</p>
                }

               </abp-column>
            
                <abp-column size="_12">
                <input suppress-label type="checkbox"  asp-for="@Model.CopyModel.IsCopyFlightInfo" />
            <label class="form-label">@L["Display:Copyflightinfo"]</label>
            </abp-column>
            <abp-column size="_12">

                @if (Model.ShouldDisplayAlternativeTitle)
                {
                    <p>Please select how would you like to copy HBL under this MBL?</p>
                } else
                {
                    <p>Please select how would you like to copy HAWB under this MAWB?</p>
                }
                
        </abp-column>
        <abp-column size="_12">

                @if (Model.ShouldDisplayAlternativeTitle)
                {
                    <abp-radio asp-for="@Model.CopyModel.CopyHawb" asp-items="@Model.HblsOptions" inline="true" />
                } else
                {
                    <abp-radio asp-for="@Model.CopyModel.CopyHawb" asp-items="@Model.HblOptions" inline="true" />
                }
          
           </abp-column>
                 <abp-column size="_12">
                <input type="checkbox" suppress-label asp-for="@Model.CopyModel.CopyCommodity" />
            <label class="form-label">@L["Display:Copycommodity"]</label>
           </abp-column>
           
                <abp-column size="_12">
                <input type="checkbox" suppress-label asp-for="@Model.CopyModel.CopyAccountingInformation" id="accountingCheckbox" />
            <label class="form-label">@L["Display:CopyAccountingInformation"]</label>
           </abp-column>
           
                <abp-column size="_12">
                <input type="checkbox" suppress-label asp-for="@Model.CopyModel.AP" id="apCheckbox" />
            <label class="form-label">@L["Display:A/P"]</label>


                <input type="checkbox" suppress-label asp-for="@Model.CopyModel.AR" id="arCheckbox" />
            <label class="form-label">@L["Display:A/R"]</label>


                <input type="checkbox" suppress-label asp-for="@Model.CopyModel.DC" id="dcCheckbox" />
            <label class="form-label">@L["Display:D/C"]</label>
            </abp-column>
          
        </abp-modal-body>
        <abp-modal-footer buttons="@(AbpModalButtons.Cancel|AbpModalButtons.Save)"></abp-modal-footer>
    </abp-modal>
</form>