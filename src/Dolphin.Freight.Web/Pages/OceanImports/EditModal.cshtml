@page
@using Dolphin.Freight.Localization
@using Dolphin.Freight.Web.Pages.Components
@using Dolphin.Freight.Web.CommonService;
@using Dolphin.Freight.Web.Pages.Shared.Memos;
@using Microsoft.Extensions.Localization;
@using Volo.Abp.Users;
@model Dolphin.Freight.Web.Pages.OceanImports.EditModalModel
@inject IStringLocalizer<FreightResource> L
@inject ICurrentUser CurrentUser
@inject IDropdownService _dropdown
@section styles {
    <style type="text/css">

    </style>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" rel="stylesheet">
}
@section scripts
    {
    <script src="https://cdn.jsdelivr.net/npm/jquery-templates@1.0.0/jquery.tmpl.min.js"></script>
    <abp-script src="/Pages/OceanImports/CreateMbl.js" />
    <abp-script src="/Pages/OceanImports/EditModel.js" />
    <script type="text/javascript">
        var cardIndex = 0;
        var l = abp.localization.getResource('Freight');
        $(document).ready(function () {
            var l = abp.localization.getResource('Freight');
            var showMsg = '@Model.ShowMsg';
            if (showMsg == 'True') abp.message.success(l("Message:SuccessAdd"));
            var isLocked = '@Model.OceanImportMbl.IsLocked';
            if (isLocked == 'True') abp.message.warn(l("Message:LockMessage"));
            //$("#addHBtn").click(function () {
            //    addHBtn();
            //});
            //InitMemoTable('MblMemo');
            //InitMemoTable('HblMemo');

            //var isCancel = '@Model.OceanImportMbl.IsCanceled';
            //if (isCancel == "True") {
            //    $("#OceanImportMbl_IsCanceled").prop("checked", true);

            //    initReasonStatus()
            //}
            //var HIsCanceled = '@Model.OceanImportHbl.IsCanceled';
            //if (HIsCanceled == "True") {
            //    $("#OceanImportHbl_IsCanceled").prop("checked", true);

            //    initHReasonStatus()
            //}
            //var IsReleased = '@Model.OceanImportMbl.IsReleased';
            //if (IsReleased == 'True') $("#OceanImportMbl_IsReleased").prop("checked", true);
            //var HIsReleased = '@Model.OceanImportHbl.IsReleased';
            //if (HIsReleased == 'True') $("#OceanImportHbl_IsReleased").prop("checked", true);
            //var IsHold = '@Model.OceanImportHbl.IsHold'
            //if (IsHold == 'True') $("#OceanImportHbl_IsHold").prop("checked", true);
            //var NewHbl = @Model.NewHbl;
            //var IsShowHbl = '@Model.IsShowHbl';
            //if (IsShowHbl == 'True') $("#hblCard").show();
            //else $("#hblCard").hide();
            //if (NewHbl == 1) {

            //    var divHtml = addCardRight('new_' + cardIndex, 'new HB/L', '@Model.CardClass');
            //    $("#hblCard").show();
            //    $("#hblCardDiv").append(divHtml);
            //    $("#AddHbl").val("1");
            //    $("#hblCardHeader").addClass('hblCrad0');
            //}

            //var IsUsedCareOf = '@Model.OceanImportMbl.IsUsedCareOf';
            //if (IsUsedCareOf == 'True') $("#OceanImportMbl_IsUsedCareOf").prop("checked", true);
            //$('#editForm').on('abp-ajax-success', function (result, rs) {
            //    event.preventDefault();
            //    var l = abp.localization.getResource('Freight');
            //    abp.message.success(l("Message:SuccessEdit"));
            //    location.href = '/OceanImports/EditModal?Id=' + rs.responseText.id + "&Hid=" + rs.responseText.hid
            //});

            //var IsOblReceived = '@Model.OceanImportMbl.IsOblReceived';
            //if (IsOblReceived == 'True') $("#OceanImportMbl_IsOblReceived").prop("checked", true);
            //var IsEcommerce = '@Model.OceanImportMbl.IsEcommerce';
            //if (IsEcommerce == 'True') $("#OceanImportMbl_IsEcommerce").prop("checked", true);

        });
        //function addHBtn() {
        //    var url = "/OceanImports/EditModal?Id=@Model.Id&NewHbl=1";
        //    location.href = url;
        //}
        //function addCardRight(hblNo, soNo, cladClass) {
        //    var cardHtml = "<div class='borad-anchor focus' ><div class='borad-cont' >"
        //    cardHtml = cardHtml + "<a class='link' href='#javascript:void(0)'></a>"
        //    cardHtml = cardHtml + "<span class='label label-HBL'>HB/L</span><span class='MBLnumber'>Add</span>"
        //    cardHtml = cardHtml + "</div></div>"
        //    return cardHtml;
        //}
        //function changeHid(Mid, Hid) {
        //    location.href = '/OceanImports/EditModal?Id=' + Mid + "&Hid=" + Hid
        //}

        $('#addHBtn').on('click', function () {
            debugger;
            if ($('#mblDiv')[0].classList.contains('show')) {
                $('#btnMawbCollapse').click();
            }

            if ($('#btnHawbCardCollapse_0').length) {
                showAlert(alertConfirmation2, 'Store');
            }
            else {

                let hawbcard = createHawbCard();

                let index = $('.hbl_sm_area').find('.card').length;
                hawbcard = setHawbCardValues(hawbcard, '00000000-0000-0000-0000-000000000000', '0', index);

                $('#hblCards').append(hawbcard);

                setTimeout(() => {
                    $('.hblCardTitle')[index].click();
                }, 500);
            }
        })

        $('#editForm').on('abp-ajax-success', function (result, rs) {
            console.log("enter here");
            event.preventDefault();
            abp.message.success('Successfully Saved').then(function () {
                location.href = "/OceanImports/Index";
            });
            //location.href = '/AirImports/EditMawb/' + rs.responseText.id + '/show';
        });

        $('#hblMainCard').append('#mawbCard');

        function onHawbCardClick(e, hawbId) {
            var element = e.currentTarget || e.target || e.srcElement;
            var hblNo = element.id.split('_')[1];

            if ($('#btnHawbCardCollapse_0').length && hblNo != 0) {
                HAWBNO = hblNo;
                showAlert(alertConfirmation, 'Continue');
            }
            else {

                var color = getComputedStyle(element.parentElement.parentElement).backgroundColor;

                if (!$('#btnHawbCardCollapse_' + hblNo).attr('class').includes('collapsed')) {
                    $('.hblCardHawbNo').addClass('d-none');
                    $('#hblCard_' + hblNo).removeClass('d-none');
                }
                else {

                    var ajaxParams = undefined;

                    Swal.fire({
                        title: 'Loading...',
                        didOpen: () => {
                            Swal.showLoading()
                        }
                    })

                    abp.ajax($.extend(true, {
                        url: abp.appPath + 'api/ImportExport/OceanImportBasicHbl?Id=' + hawbId,
                        type: 'GET',
                        dataType: "html",
                    }, ajaxParams)).done(function (partial) {
                        $('#partialContainer').html('');
                        $('#partialContainer').html(partial);
                        $('#hblCard').find('.card-header').attr('style', 'background:' + color + ';color:white');
                        setFilteredDropdown();
                        Swal.clickCancel();
                    })

                    $('.btnHawbCardCollapse').each(function (i, e) {
                        let tempHawbNo = e.id.split('_')[1];
                        if (tempHawbNo == hblNo) {
                            $('#btnHawbCardCollapse_' + hblNo).click();
                        }
                        else {
                            $('#btnHawbCardCollapse_' + tempHawbNo).addClass('collapsed');
                            $('#btnHawbCardCollapse_' + tempHawbNo).attr('aria-expanded', 'false');
                            $('#hawbCard_' + i).removeClass('show');
                        }
                    })

                    //let isExpanded = $('.btnHawbCardCollapse').filter(function(f, e){ return $(e).attr('aria-expanded') == 'true' }).length;

                    //if (isExpanded) {
                    //    $('.btnHawbCardCollapse').click();
                    //}
                    //else{
                    //    $('#btnHawbCardCollapse_'+hawbNo).click();
                    //}
                }
            }
        }

        function createHawbCard() {
            debugger
            let abpCard = '<div class="{{divClass}}"><div class="card-header pointer"><h5 class="card-title hblCardTitle" id="title_{{hblNo}}"' +
                ' onclick="onHawbCardClick(event,{{hblCardId}})">{{hblNo}}</h5>' +
                ' <button type="button" class="btn d-none btn-collapse collapsed btnHawbCardCollapse" data-val="{{index}}" data-bs-toggle="collapse" id="btnHawbCardCollapse_{{hblNo}}" data-bs-target="#{{cardBodyId}}" aria-expanded="false" aria-controls="mawbDiv">' +
                ' <i class="fa fa-caret-down" style="color:#FFFFFF;"></i></button > </div><div class="card-body collapse customForm" id="{{cardBodyId}}" style="min-height:150px !important"></div>';
            return abpCard;
        }

        function setHawbCardValues(abpcard, cardId, hblNo, index) {
            let apbCardClass = 'card board-item hbl-sm-' + index;
            let cardBodyId = 'hawbCard_' + index;
            cardId = "'" + cardId + "'";

            abpcard = abpcard.replaceAll("{{divClass}}", apbCardClass);
            abpcard = abpcard.replaceAll("{{hblNo}}", hblNo);
            abpcard = abpcard.replaceAll("{{hblCardId}}", cardId);
            abpcard = abpcard.replaceAll("{{index}}", index);
            abpcard = abpcard.replaceAll("{{cardBodyId}}", cardBodyId);

            return abpcard;
        }

        function showAlert(funName, buttonName) {
            Swal.fire({
                icon: 'error',
                text: 'The data has not been saved, are you sure you want to ' + buttonName.toLowerCase() + '?',
                showCancelButton: true,
                confirmButtonText: buttonName,
            }).then(funName)
        }

        function alertConfirmation(result) {
            if (result.isConfirmed) {
                let indx = $('.hbl_sm_area').find('.card').length;
                $('#btnHawbCardCollapse_0').parent().parent().remove();
                if (HAWBNO) {
                    $('#title_' + HAWBNO).click()
                }
                else {
                    $('#hawbCard_' + (indx - 2)).parent().find('.card-title').click();
                }
            }
        }

        function alertConfirmation2() {
            $('#saveBtn').click();
        }

        function deleteHbl() {
            abp.message.confirm(l('DeletionConfirmationMessage'))
                .then(function (confirmed) {
                    if (confirmed) {
                        dolphin.freight.importExport.oceanImports.oceanImportHbl
                            .delete($('#OceanImportHBL').val())
                            .then(function () {
                                abp.message.success(l('SuccessfullyDeleted'));
                                $('#hblCard').remove();
                                $('#hblCards').find('.card-body.show').closest('.card.board-item').remove()
                            });
                    }
                });
        }

        function deleteMbl() {
            var url = new URL(window.location.href);
            var mblId = url.searchParams.get('Id');
            abp.message.confirm(l('DeletionConfirmationMessage'))
                .then(function (confirmed) {
                    if (confirmed) {
                        dolphin.freight.importExport.oceanImports.oceanImportMbl
                            .delete(mblId)
                            .then(function () {
                                abp.message.success(l('SuccessfullyDeleted')).done(function () {
                                    location.href = '/OceanImports/Index';
                                });
                            });
                    }
                })
        }
          function getOrderDelivery() {
            var idNo = $('#OceanImportMbl_Id').val();
            myWindow = window.open("@Url.Action("DeliveryOrderOceanImportMawb", "Docs")" + "?id=" + idNo, 'DeliveryOrderOceanImportMawb', 'width=1200,height=800');
            //myWindow = window.open("@Url.Action("PickupDeliveryOrder", "Docs")", 'PickupDeliveryOrder', 'width=1200,height=800');
            myWindow.focus()
        }
        function OpenInTrackTrace() {
            var MblNo = $('#OceanImportMbl_MblNo').val();
            myWindow = window.open('https://www.track-trace.com/bol#' + MblNo, '_blank', 'width=1200,height=1000');
            myWindow.focus();
        }
         function getPreliminaryClaim() {
            var idNo = $('#OceanImportHBL').val();
            myWindow = window.open("@Url.Action("PreliminaryClaimOceanImport", "Docs")" + "?id=" + idNo+"&pageType=2", 'PreliminaryClaimOceanExport', 'width=1200,height=800');
            //myWindow = window.open("@Url.Action("PickupDeliveryOrder", "Docs")", 'PickupDeliveryOrder', 'width=1200,height=800');
            myWindow.focus()
        }
        
    </script>
}
<div class="page-header">
    <div class="breadcrumb-wrapper">
        <abp-breadcrumb>
            <abp-breadcrumb-item title=@L["Menu:OceanImports"] />
            <abp-breadcrumb-item title=@L["Menu:OceanImports.CreateMbl"] href="#" />
        </abp-breadcrumb>
    </div>
    <nav class="submenu">
        <ol>
            <li class="menu-item ">
                <a class="nav-link active" href="javascript:void(0)">@L["Tab:Basic"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link  " href="EditModal2?Id=@Model.Id">@L["Tab:Container"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link  " href="EditModal3?Id=@Model.Id">@L["Tab:Accounting"]</a>
            </li>
            <li class="menu-item ">
                <a class="nav-link  " href="EditModal4?Id=@Model.Id">@L["Tab:Doc"]</a>
            </li>
        </ol>
    </nav>
</div>
<div class="page-content-area">
    <div class="board-wrap">
        <form submit-button="true" data-ajaxForm="true" id="editForm">
        <abp-row>
            <abp-column size-md="_9" id="parentCard">
                <!-- MBL Card-->
                <abp-card class="card board-item" id="mawbCard">
                        <abp-card-header class="card-header active" style="background:#555555;color:#FFFFFF;">
                            <abp-card-title>
                                MB/L
                                <span id="title0">@Model.OceanImportMbl.MblNo </span>
                                @if (@Model.OceanImportMbl.PolName != null)
                                {
                                    <span id="title1" style="font-size:0.8em;">@Model.OceanImportMbl.PolName</span>
                                }
                                @if (@Model.OceanImportMbl.PolEtd != null)
                                {
                                    <span id="title2" style="font-size:0.8em;">@Html.DisplayFor( Model => @Model.OceanImportMbl.PolEtd ) </span>
                                }
                                @if (@Model.OceanImportMbl.PodName != null)
                                {
                                    <i class="fa fa-caret-right"></i> <span id="title3" style="font-size:0.8em;">@Model.OceanImportMbl.PodName</span>
                                }

                                @if (Model.OceanImportMbl.PodEta != null)
                                {
                                    <span id="title4" style="font-size:0.8em;">@Html.DisplayFor( Model =>  Model.OceanImportMbl.PodEta ) </span>
                                }
                                @if (Model.OceanImportMbl.VesselName != null && Model.OceanImportMbl.VesselName != "")
                                {
                                    <span id="title5" style="font-size:0.8em;"><i class="fa fa-anchor"></i> @Model.OceanImportMbl.VesselName </span>

                                }
                                @if (Model.OceanImportMbl.MblCarrierId != null)
                                {
                                    <span class="mbl_note _max-w12per">
                                        <i class="fa fa-ship"></i> @Model.OceanImportMbl.MblCarrierName
                                    </span>
                                }
                            </abp-card-title>

                            <div class="btn-group dropdown">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="ActionDrop" data-bs-toggle="dropdown">
                                    @L["Display:Function"]
                                </button>
                                <div class="dropdown-menu " aria-labelledby="dropdownMenuButton1" id="ActionDrop">
                                    <a class='dropdown-item' href='#'>
                                        <i class="fa fa-lock"></i> @L["Btn:Lock"]
                                    </a>
                                    <a class='dropdown-item' href='#'>
                                        <i class="fa fa-files-o"></i> @L["Btn:Copy"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="deleteMbl()">
                                        <i class="fa fa-trash"></i> @L["Btn:Delete"]
                                    </a>
                                    <a class='dropdown-item' href='#'>
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Batch Printing"]
                                    </a>
                                     
                                    <li class="dropdown-divider"></li>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("ManifestOceanImportMBL", "Docs", new { id = Model.OceanImportMbl.Id, pageType = Dolphin.Freight.Common.FreightPageType.OIMBL })')">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Manifest"]
                                    </a>
                                     <a class='dropdown-item' href='javascript:void(0)' onclick="getOrderDelivery()">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Delivery Order"]
                                    </a>
                                    <a class='dropdown-item' href='#'>
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Arrival Notice (Consolidated by consignee)"]
                                    </a>
                                     <li class="dropdown-divider"></li>
                            <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("OceanImportProfitReportDetailOrSummry", "Docs", new { id = Model.OceanImportMbl.Id, pageType = Dolphin.Freight.Common.FreightPageType.OIMBL, reportType = "Summary" })')">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Profit Report - Summary"]
                                    </a>
                            <a class='dropdown-item' href='javascript:void(0)' onclick="OpenWindow('@Url.Action("OceanImportProfitReportDetailOrSummry", "Docs", new { id = Model.OceanImportMbl.Id, pageType = Dolphin.Freight.Common.FreightPageType.OIMBL, reportType = "Detail" })')">
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Profit Report - Detailed"]
                                    </a>
                                    <li class="dropdown-divider"></li>
                                    <a class='dropdown-item' href='#'>
                                        <i class="fa fa-file-text-o"></i> @L["Btn:Electronic Customs Declaration Status"]
                                    </a>
                                    <a class='dropdown-item' href='javascript:void(0)' onclick="OpenInTrackTrace()">
                                        <i class="fa fa-cube"></i> @L["Btn:Open in Track-Trace"]
                                    </a>
                                </div>
                        </div>

                            @*                            <div class="btn-group dropdown">
                            <button class="btn btn-secondary dropdown-toggle"  type="button" id="ActionDrop" data-bs-toggle="dropdown">
                            @L["Display:Function"]
                            </button>
                            <div class="dropdown-menu " aria-labelledby="dropdownMenuButton1" id="ActionDrop">
                            <a class='dropdown-item' href='#'>
                            <li class="fa fa-lock"></li> @L["Btn:Lock"]
                            </a>
                            <a class='dropdown-item' href='#'>
                            <i class="fa fa-trash"></i> @L["Btn:Delete"]
                            </a>
                            <li class="dropdown-divider"></li>
                            <a class='dropdown-item' href='javascript:void(0)' onclick="showMblPrint('@Model.Id');">
                            <i class="fa fa-file" aria-hidden="true"></i> @L["Btn:PrintMbl"]
                            </a>

                            </div>
                            </div>*@

                            <button class="btn btn-collapse" type="button" data-bs-toggle="collapse" data-bs-target="#mblDiv" aria-expanded="true" aria-controls="mblDiv">
                            </button>

                        </abp-card-header>

                        <abp-card-body class="collapse show customForm" id="mblDiv">
                            <abp-row>
                                <abp-column size-md="_3">
                                    <input type="hidden" name="ShipmentNo" id="ShipmentNo">
                                    <abp-input asp-for="OceanImportMbl.FilingNo" disabled="true" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.MblNo" />
                                    <input type="hidden" name="OceanImportMbl.Id" id="OceanImportMbl_Id" value="@Model.Id" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.OfficeId", AspItems = _dropdown.SubstationLookupList, IsShowLabel = true, FieldName = "OfficeId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.OfficeId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.BlTypeId", AspItems = _dropdown.BlTypeLookupList, IsShowLabel = true, FieldName = "BlTypeId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.BlTypeId) })
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.PostDate" type="text" abp-data-datepicker="false" readonly="true" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.MblOverseaAgentId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblOverseaAgentId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.MblOverseaAgentId) })
                                    <input type="hidden" name="OceanImportMbl.MblOverseaAgentId" id="mMblOverseaAgentId" value="@Model.OceanImportMbl.MblOverseaAgentId" />
                                    <input type="hidden" name="OceanImportMbl.MblOverseaAgentContent" id="mMblOverseaAgentContent" value="@Model.OceanImportMbl.MblOverseaAgentContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.MblCarrierId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblCarrierId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.MblCarrierId) })
                                    <input type="hidden" name="OceanImportMbl.MblCarrierId" id="mMblCarrierId" value="@Model.OceanImportMbl.MblCarrierId" />
                                    <input type="hidden" name="OceanImportMbl.MblCarrierContent" id="mMblCarrierContent" value="@Model.OceanImportMbl.MblCarrierContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.BlAcctCarrierId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "BlAcctCarrierId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.BlAcctCarrierId) })
                                    <input type="hidden" name="OceanImportMbl.BlAcctCarrierId" id="mBlAcctCarrierId" value="@Model.OceanImportMbl.BlAcctCarrierId" />
                                    <input type="hidden" name="OceanImportMbl.BlAcctCarrierContent" id="mBlAcctCarrierContent" value="@Model.OceanImportMbl.BlAcctCarrierContent" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.ForwardingAgentId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "ForwardingAgentId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.ForwardingAgentId) })
                                    <input type="hidden" name="OceanImportMbl.ForwardingAgentId" id="mForwardingAgentId" value="@Model.OceanImportMbl.ForwardingAgentId" />
                                    <input type="hidden" name="OceanImportMbl.ForwardingAgentContent" id="mForwardingAgentContent" value="@Model.OceanImportMbl.ForwardingAgentContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.CoLoaderId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "CoLoaderId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.CoLoaderId) })
                                    <input type="hidden" name="OceanImportMbl.CoLoaderId" id="mCoLoaderId" value="@Model.OceanImportMbl.CoLoaderId" />
                                    <input type="hidden" name="OceanImportMbl.CoLoaderContent" id="mCoLoaderContent" value="@Model.OceanImportMbl.CoLoaderContent" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.AgentRefNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.SubBlNo" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <label>@L["MblOperatorId"]</label>
                                    <select class="form-control ml-15" asp-for="OceanImportMbl.MblOperatorId" disabled="true">
                                        <option value='@CurrentUser.Id' selected> @(CurrentUser.Name + " " + CurrentUser.SurName) </option>
                                    </select>
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.CarrierContractNo" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label for="OceanImportMbl_IsDirect" class="form-label">@L["IsDirect"]<input type="checkbox" name="OceanImportMbl.IsDirect" id="OceanImportMbl_IsDirect" value="true" checked="@Model.OceanImportMbl.IsDirect" /></label>
                                </abp-column>
                                <abp-column size-md="_3">

                                </abp-column>
                            </abp-row>

                            <abp-row class="isDirect">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.CustomerRefNo" />
                                </abp-column>
                                <abp-column size-md="_3">

                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.MblShipperId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblShipperId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.MblShipperId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.MblConsigneeId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblConsigneeId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.MblConsigneeId) })
                                  </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.MblNotifyId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblNotifyId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.MblNotifyId) })
                                  </abp-column>
                            </abp-row>
                            <abp-row class="isDirect">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.MblCustomerId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblCustomerId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.MblCustomerId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.MblBillToId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "MblBillToId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.MblBillToId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.MblSalesTypeId", AspItems = _dropdown.SalesTypeLookupList, IsShowLabel = true, FieldName = "MblBillToId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.MblSalesTypeId) })
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.MblCargoTypeId", AspItems = _dropdown.CargoTypeLookupList, IsShowLabel = true, FieldName = "MblCargoTypeId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.CargoTypeId) })
                                </abp-column>
                            </abp-row>
                            <abp-row class="isDirect">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.MblSaleId", AspItems = _dropdown.CargoTypeLookupList, IsShowLabel = true, FieldName = "MblSaleId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.MblSaleId) })
                                </abp-column>
                            </abp-row>

                            <abp-row>
                                <abp-column>
                                    &nbsp;
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.VesselName" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.Voyage" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.CyLocationId", AspItems = _dropdown.CountryLookupList, IsShowLabel = true, FieldName = "CyLocationId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.CyLocationId) })
            <input type="hidden" name="OceanImportMbl.CyLocationId" id="mCyLocationId" value="@Model.OceanImportMbl.CyLocationId" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.CfsLocationId", AspItems = _dropdown.CountryLookupList, IsShowLabel = true, FieldName = "CfsLocationId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.CfsLocationId) })
            <input type="hidden" name="OceanImportMbl.CfsLocationId" id="mCfsLocationId" value="@Model.OceanImportMbl.CfsLocationId" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.PolId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "PolId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.PolId) })
        </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.PolEtd" type="text" abp-data-datepicker="false" class="checkdate" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.PodId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "PodId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.PodId) })
        </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.PodEta" type="text" abp-data-datepicker="false" class="checkdate" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.DelId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "DelId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.DelId) })
        </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.DelEta" type="text" abp-data-datepicker="false" class="checkdate" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.FdestId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "FdestId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.FdestId) })
        </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.FdestEta" type="text" abp-data-datepicker="false" class="checkdate" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_9">
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.Etb" type="text" abp-data-datepicker="false" class="checkdate" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column>
                                    &nbsp;
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.FreightTermId", AspItems = _dropdown.FreightTermLookupList, IsShowLabel = true, FieldName = "FreightTermId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.FreightTermId) })
        </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.FdestId", AspItems = _dropdown.FreightTermLookupList, IsShowLabel = true, FieldName = "FdestId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.FdestId) })
        </abp-column>


                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.SvcTermFromId", AspItems = _dropdown.SvgTermLookupList, IsShowLabel = true, FieldName = "SvcTermFromId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.SvcTermFromId) })
        </abp-column>
                                <abp-column size-md="_3">
                                    <label for="SvcTermToId" class="form-label">&nbsp;&nbsp;</label>
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.SvcTermToId", AspItems = _dropdown.SvgTermLookupList, IsShowLabel = true, FieldName = "SvcTermToId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.SvcTermToId) })
        </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.DisplayMblContainerSizeQtyInfo" readonly="true" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.OblTypeId", AspItems = _dropdown.OblTypeLookupList, IsShowLabel = true, FieldName = "OblTypeId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.OblTypeId) })
            <input type="hidden" name="OceanImportMbl.OblTypeId" id="mOblTypeId" value="@Model.OceanImportMbl.OblTypeId" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label for="OceanImportMbl_IsOblReceived" class="form-label">@L["IsOblReceived"]<input type="checkbox" name="OceanImportMbl.IsOblReceived" id="OceanImportMbl_IsOblReceived" value="true" /></label>
                                    <abp-input asp-for="OceanImportMbl.OblReceivedDate" class="cdatetime" type="text" abp-data-datetimepicker="false" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <label for="OceanImportMbl_IsReleased" class="form-label">@L["IsReleased"]<input type="checkbox" name="OceanImportMbl.IsReleased" id="OceanImportMbl_IsReleased" value="true" /></label>
                                    <abp-input asp-for="OceanImportMbl.MblReleaseDate" class="cdatetime" type="text" abp-data-datetimepicker="false" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.BusinessReferrerId", AspItems = _dropdown.TradePartnerLookupList, IsShowLabel = true, FieldName = "BusinessReferrerId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.BusinessReferrerId) })
            <input type="hidden" name="OceanImportMbl.BusinessReferrerId" id="mBusinessReferrerId" value="@Model.OceanImportMbl.BusinessReferrerId" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input label="" asp-for="OceanImportMbl.LatestContainerEntryDate" class="cdatetime" type="text" abp-data-datetimepicker="false" />
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column>
                                    &nbsp;
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column size-md="_3">
                                    <button type="button" id="checkHideBtn">
                                        <i class="fa fa-plus" id="showLi"></i>
                                        <i class="fa fa-minus" id="hideLi"></i>
                                    </button>
                                    @L["Title:MoreInfo"]
                                    <input type="hidden" id="isHide" value="@Model.OceanImportMbl.GetHideCheck()" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="hideArea">
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.PorId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "PorId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.PorId) })
        </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.PorEtd" type="text" abp-data-datepicker="false" class="checkdate" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.ReturnLocationId", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "ReturnLocationId", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.ReturnLocationId) })
            <input type="hidden" name="OceanImportMbl.ReturnLocationId" id="mReturnLocationId" value="@Model.OceanImportMbl.ReturnLocationId" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.ItNo" />
                                </abp-column>
                            </abp-row>
                            <abp-row class="hideArea">
                                <abp-column size-md="_3">
                                    <abp-input asp-for="OceanImportMbl.ItDate" type="text" abp-data-datepicker="false" class="checkdate" />
                                </abp-column>
                                <abp-column size-md="_3">
                                    @await Component.InvokeAsync(typeof(DropdownComponent), new ComponentData { Name = "OceanImportMbl.ItLocation", AspItems = _dropdown.PortsManagementLookupList, IsShowLabel = true, FieldName = "ItLocation", SelectType = 1, ShowFiledContentValue = Convert.ToString(Model.OceanImportMbl.ItLocation) })
        </abp-column>
                                <abp-column size-md="_3">
                                    <label for="OceanImportMbl_IsEcommerce" class="form-label">@L["IsEcommerce"]<input type="checkbox" name="OceanImportMbl.IsEcommerce" id="OceanImportMbl_IsEcommerce" value="true" checked="@Model.OceanImportMbl.IsEcommerce" /></label>
                                </abp-column>
                            </abp-row>
                            <abp-row>
                                <abp-column>
                                    <abp-card-header style="background:#cccccc;color:#FFFFFF;">
                                        @L["Title:Memo"]
                                    </abp-card-header>
                                    <abp-card>
                                        <abp-card-body>
                                            <partial name="Memos/_Memo" model="new _MemoModel(Model.OceanImportMbl.Id, Dolphin.Freight.Common.FreightPageType.OIMBL)" />
                                        </abp-card-body>
                                    </abp-card>
                                </abp-column>
                            </abp-row>
                        </abp-card-body>
                    </abp-card>

                    <!-- HBL Card-->
                <div id="partialContainer">
                </div>
            </abp-column>
            <abp-column size-md="_3">

                <div class="card-wrap">
                    <button class="btn btn-block btn-add" type="button" id="addHBtn">
                        <i class="fa-solid fa-plus"></i>Add HAWB
                    </button>
                    <div id="hblCards" class="hbl_sm_area">

                    </div>
                </div>
            </abp-column>
        </abp-row>

        <input type="hidden" name="Id" id="Id" value="@Model.Id" />
        <input type="hidden" name="Hid" id="Hid" value="@Model.OceanImportHbl.Id" />
        <input type="hidden" name="OceanImportMbl.Id" id="OceanImportMbl_Id" value="@Model.Id" />
        <input type="hidden" name="OceanImportHbl.Id" id="OceanImportHbl_Id" value="@Model.OceanImportHbl.Id" />
        <input type="hidden" name="OceanImportHbl.MblId" id="OceanImportHbl_MblId" value="@Model.OceanImportHbl.MblId" />
        <input type="hidden" name="OceanImportMbl.OfficeId" id="mOfficeId" value="@Model.OceanImportMbl.OfficeId" />
        <input type="hidden" name="OceanImportHbl.HblSalesTypeId" id="hHblSalesTypeId" value="@Model.OceanImportHbl.HblSalesTypeId" />
        <input type="hidden" name="OceanImportMbl.PreCarriageVesselNameId" id="mPreCarriageVesselNameId" value="@Model.OceanImportMbl.PreCarriageVesselNameId" />
        <input type="hidden" name="OceanImportMbl.SvcTermFromId" id="mSvcTermFromId" value="@Model.OceanImportMbl.SvcTermFromId" />
        <input type="hidden" name="OceanImportMbl.SvcTermToId" id="mSvcTermToId" value="@Model.OceanImportMbl.SvcTermToId" />
        <input type="hidden" name="OceanImportMbl.ShipModeId" id="mShipModeId" value="@Model.OceanImportMbl.ShipModeId" />
        <input type="hidden" name="OceanImportMbl.FreightTermId" id="mFreightTermId" value="@Model.OceanImportMbl.FreightTermId" />
        <input type="hidden" name="OceanImportMbl.BlTypeId" id="mBlTypeId" value="@Model.OceanImportMbl.BlTypeId" />
        <input type="hidden" name="OceanImportMbl.PorId" id="mPorId" value="@Model.OceanImportMbl.PorId" />
        <input type="hidden" name="OceanImportMbl.PolId" id="mPolId" value="@Model.OceanImportMbl.PolId" />
        <input type="hidden" name="OceanImportMbl.PodId" id="mPodId" value="@Model.OceanImportMbl.PodId" />
        <input type="hidden" name="OceanImportMbl.DelId" id="mDelId" value="@Model.OceanImportMbl.DelId" />
        <input type="hidden" name="OceanImportMbl.FdestId" id="mFdestId" value="@Model.OceanImportMbl.FdestId" />
        <input type="hidden" name="OceanImportMbl.MblCustomerId" id="mMblCustomerId" value="@Model.OceanImportMbl.MblCustomerId" />
        <input type="hidden" name="OceanImportMbl.MblBillToId" id="mMblBillToId" value="@Model.OceanImportMbl.MblBillToId" />
        <input type="hidden" name="OceanImportMbl.MblSalesTypeId" id="mMblSalesTypeId" value="@Model.OceanImportMbl.MblSalesTypeId" />
        <input type="hidden" name="OceanImportMbl.MblShipperId" id="mMblShipperId" value="@Model.OceanImportMbl.MblShipperId" />
        <input type="hidden" name="OceanImportMbl.MblConsigneeId" id="mMblConsigneeId" value="@Model.OceanImportMbl.MblConsigneeId" />
        <input type="hidden" name="OceanImportMbl.MblNotifyId" id="mMblNotifyId" value="@Model.OceanImportMbl.MblNotifyId" />
        <input type="hidden" name="OceanImportMbl.CargoTypeId" id="mCargoTypeId" value="@Model.OceanImportMbl.CargoTypeId" />
        <input type="hidden" name="AddHbl" id="AddHbl" value="0" />
        <input type="hidden" name="OceanImportHbl.CargoTypeId" id="hCargoTypeId" value="@Model.OceanImportHbl.CargoTypeId" />
        <input type="hidden" name="OceanImportHbl.SvcTermFromId" id="hHSvcTermFromId" value="@Model.OceanImportHbl.SvcTermFromId" />
        <input type="hidden" name="OceanImportHbl.SvcTermToId" id="hHSvcTermToId" value="@Model.OceanImportHbl.SvcTermToId" />
        <input type="hidden" name="OceanImportHbl.ShipModeId" id="hHShipModeId" value="@Model.OceanImportHbl.ShipModeId" />
        <input type="hidden" name="OceanImportHbl.FreightTermForBuyerId" id="hFreightTermForBuyerId" value="@Model.OceanImportHbl.FreightTermForBuyerId" />
        <input type="hidden" name="OceanImportHbl.FreightTermForSalerId" id="hFreightTermForSalerId" value="@Model.OceanImportHbl.FreightTermForSalerId" />
        <input type="hidden" name="OceanImportHbl.HblCustomerId" id="hHblCustomerId" value="@Model.OceanImportHbl.HblCustomerId" />
        <input type="hidden" name="OceanImportHbl.HblShipperId" id="hHblShipperId" value="@Model.OceanImportHbl.HblShipperId" />
        <input type="hidden" name="OceanImportHbl.HblBillToId" id="hHblBillToId" value="@Model.OceanImportHbl.HblBillToId" />
        <input type="hidden" name="OceanImportHbl.HblConsigneeId" id="hHblConsigneeId" value="@Model.OceanImportHbl.HblConsigneeId" />
        <input type="hidden" name="OceanImportHbl.HblNotifyId" id="hHblNotifyId" value="@Model.OceanImportHbl.HblNotifyId" />
        <input type="hidden" name="OceanImportHbl.CustomsBrokerId" id="hCustomsBrokerId" value="@Model.OceanImportHbl.CustomsBrokerId" />
        <input type="hidden" name="OceanImportHbl.TruckerId" id="hTruckerId" value="@Model.OceanImportHbl.TruckerId" />
        <input type="hidden" name="OceanImportHbl.AgentId" id="hAgentId" value="@Model.OceanImportHbl.AgentId" />
        <input type="hidden" name="OceanImportHbl.ForwardingAgentId" id="hHblForwardingAgentId" value="@Model.OceanImportHbl.ForwardingAgentId" />
        <input type="hidden" name="OceanImportHbl.ReceivingAgentId" id="hReceivingAgentId" value="@Model.OceanImportHbl.ReceivingAgentId" />
        <input type="hidden" name="OceanImportHbl.FbaFcId" id="hFbaFcId" value="@Model.OceanImportHbl.FbaFcId" />
        <input type="hidden" name="OceanImportHbl.EmptyPickupId" id="hHEmptyPickupId" value="@Model.OceanImportHbl.EmptyPickupId" />
        <input type="hidden" name="OceanImportHbl.DeliveryToId" id="hHDeliveryToId" value="@Model.OceanImportHbl.DeliveryToId" />
        <input type="hidden" name="OceanImportHbl.MblReferralById" id="hHMblReferralById" value="@Model.OceanImportHbl.MblReferralById" />
        <input type="hidden" name="OceanImportHbl.PorId" id="hHPorId" value="@Model.OceanImportHbl.PorId" />
        <input type="hidden" name="OceanImportHbl.PodId" id="hHPodId" value="@Model.OceanImportHbl.PodId" />
        <input type="hidden" name="OceanImportHbl.HDelId" id="hHDelId" value="@Model.OceanImportHbl.DelId" />
        <input type="hidden" name="OceanImportHbl.FdestId" id="hHFdestId" value="@Model.OceanImportHbl.FdestId" />
        <input type="hidden" name="OceanImportHbl.CardColorId" id="hCardColorId" value="@Model.OceanImportHbl.CardColorId" />
        <abp-button class="btn btn-primary me-md-2" type="button" id="saveEditBtn">@L["Save"].Value</abp-button>
    </form>
    </div>
</div>