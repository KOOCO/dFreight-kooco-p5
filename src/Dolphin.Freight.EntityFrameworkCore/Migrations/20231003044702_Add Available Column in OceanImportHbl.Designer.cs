// <auto-generated />
using System;
using Dolphin.Freight.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;

#nullable disable

namespace Dolphin.Freight.Migrations
{
    [DbContext(typeof(FreightDbContext))]
    [Migration("20231003044702_Add Available Column in OceanImportHbl")]
    partial class AddAvailableColumninOceanImportHbl
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Dolphin.Freight.Account.Languages.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppLanguages", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Accounting.Inv.Inv", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("BalanceAmount")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.Property<string>("BlNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("GlCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("InvoiceAmount")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("PaymentAmount")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.Property<decimal?>("PaymentAmountTwd")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PoNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("GlCodeId");

                    b.ToTable("AppInv", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Accounting.InvoiceBills.InvoiceBill", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AmountToAgent")
                        .HasColumnType("float");

                    b.Property<string>("BillType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsNonProfit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("PPOrCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TaxId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("AppInvoiceBills", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Accounting.Invoices.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttentionTo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal?>("BalanceAmount")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.Property<string>("BlNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CcyRateSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FilingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GlCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HawbId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HblId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HblNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IncotermsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("InvoiceAmount")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.Property<Guid?>("InvoiceCompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("InvoiceStatus")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceType")
                        .HasColumnType("int");

                    b.Property<bool>("IsAmountConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsReceiveed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("MawbId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MblId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MblNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Memorandum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("OutstandingAmount")
                        .HasColumnType("float");

                    b.Property<double>("PaidAmount")
                        .HasColumnType("float");

                    b.Property<decimal?>("PaymentAmount")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.Property<decimal?>("PaymentAmountTwd")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PoNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProfitShare")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShipToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VesselScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CcyRateSourceId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("GlCodeId");

                    b.HasIndex("IncotermsId");

                    b.HasIndex("InvoiceCompanyId");

                    b.HasIndex("ShipToId");

                    b.ToTable("AppInvoices", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Accounting.Payment.CustomerPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime?>("Deposit")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("H2T")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Invalid")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("R2T")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReceivablesSources")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("U2T")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.HasIndex("ReceivablesSources");

                    b.ToTable("AppCustomerPayment", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Accounting.Payment.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Clear")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("H2T")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Invalid")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PaidTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("R2T")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ShowPartyOnCheck")
                        .HasColumnType("bit");

                    b.Property<string>("U2T")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.HasIndex("PaidTo");

                    b.ToTable("AppPayment", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.AccountingSettings.BillingCodes.BillingCode", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<Guid?>("CostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("CreditId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsAP")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAR")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAirExportHbl")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAirExportMbl")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAirImportHbl")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAirImportMbl")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDC")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsGA")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMsm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOceanExportHbl")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOceanExportMbl")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOceanImportHbl")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOceanImportMbl")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPayroll")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsTkm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWhs")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LocalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RevenueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CostId");

                    b.HasIndex("CreditId");

                    b.HasIndex("DeitId");

                    b.HasIndex("RevenueId");

                    b.ToTable("AppBillingCodes", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.AccountingSettings.CurrencyTables.CurrencyTable", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Ccy1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Ccy2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<double>("RateInterna2")
                        .HasColumnType("float");

                    b.Property<double>("RateInternal")
                        .HasColumnType("float");

                    b.Property<string>("Remark")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Ccy1Id");

                    b.HasIndex("Ccy2Id");

                    b.ToTable("AppCurrencyTables", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.AccountingSettings.GlCodes.GlCode", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountingGlCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("GlGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GlTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsDeposit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPayment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRevaluation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GlGroupId");

                    b.HasIndex("GlTypeId");

                    b.ToTable("AppGlCodes", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Common.Memos.Memo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("Content")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<int>("FType")
                        .HasColumnType("int");

                    b.Property<bool>("Highlight")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("AppMemos", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.AirExports.AirExportBooking", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActualShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("AwbChargeableWeightAmount")
                        .HasColumnType("float");

                    b.Property<double>("AwbChargeableWeightKg")
                        .HasColumnType("float");

                    b.Property<double>("AwbChargeableWeightLb")
                        .HasColumnType("float");

                    b.Property<double>("AwbGrossWeightAmount")
                        .HasColumnType("float");

                    b.Property<double>("AwbGrossWeightKg")
                        .HasColumnType("float");

                    b.Property<double>("AwbGrossWeightLb")
                        .HasColumnType("float");

                    b.Property<Guid?>("BillToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BookingRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BuyingRate")
                        .HasColumnType("float");

                    b.Property<int>("BuyingRateUnitType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CargoArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CargoPickupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CargoRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CargoTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CarrierBkgNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ChargeableWeightAmount")
                        .HasColumnType("float");

                    b.Property<double>("ChargeableWeightKg")
                        .HasColumnType("float");

                    b.Property<double>("ChargeableWeightLb")
                        .HasColumnType("float");

                    b.Property<Guid?>("CoLoaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<Guid?>("ConsigneeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerRefNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DVCarriage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DVCustomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryInstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeliveryToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DepatureDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisplayUnit")
                        .HasColumnType("int");

                    b.Property<string>("DocNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime>("FinalEta")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ForwardingAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GrossWeightAmount")
                        .HasColumnType("float");

                    b.Property<double>("GrossWeightKg")
                        .HasColumnType("float");

                    b.Property<double>("GrossWeightLb")
                        .HasColumnType("float");

                    b.Property<string>("HandlingInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HblNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("HoldReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HolderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncotermsType")
                        .HasColumnType("int");

                    b.Property<string>("Insurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsHold")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStackable")
                        .HasColumnType("bit");

                    b.Property<string>("ItnNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MawbPackageUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NatureAndQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NotifyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Package")
                        .HasColumnType("float");

                    b.Property<Guid?>("PackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PoNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReferenceType")
                        .HasColumnType("int");

                    b.Property<Guid?>("SaleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalesPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SalesType")
                        .HasColumnType("int");

                    b.Property<double>("SellingRate")
                        .HasColumnType("float");

                    b.Property<int>("SellingRateUnitType")
                        .HasColumnType("int");

                    b.Property<int>("ShipType")
                        .HasColumnType("int");

                    b.Property<Guid?>("ShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SoNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("SoNoDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SubAgentAwb")
                        .HasColumnType("bit");

                    b.Property<int>("SvcTermTypeFrom")
                        .HasColumnType("int");

                    b.Property<int>("SvcTermTypeTo")
                        .HasColumnType("int");

                    b.Property<Guid?>("TruckerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("VolumeWeightCbm")
                        .HasColumnType("float");

                    b.Property<double>("VolumeWeightKg")
                        .HasColumnType("float");

                    b.Property<string>("WtVal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActualShipperId");

                    b.HasIndex("AgentId");

                    b.HasIndex("BillToId");

                    b.HasIndex("CargoPickupId");

                    b.HasIndex("CargoTypeId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("CoLoaderId");

                    b.HasIndex("ConsigneeId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeliveryToId");

                    b.HasIndex("DepatureId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("ForwardingAgentId");

                    b.HasIndex("HolderId");

                    b.HasIndex("NotifyId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("PackageId");

                    b.HasIndex("SaleId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("TruckerId");

                    b.ToTable("AppAirExportBookings", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.AirExports.AirExportHawb", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AWBCancelled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AWBCancelledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActualShippedr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookingRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyingRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyingRateUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CanceledBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CargoPickup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CargoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeableWeightCneeAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeableWeightCneeKG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeableWeightCneeLB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeableWeightShprAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeableWeightShprKG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeableWeightShprLB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("Consignee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ConsigneeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DVCarriage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DVCustoms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DepartureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime>("FinalEta")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrossWeightCneeKG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrossWeightShprAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrossWeightShprKG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrossWeightShprLB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HandlingInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HawbNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITNNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Incoterms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("IssuingCarrier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ManifestNatureAndQuantityOfGoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MawbId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NatureAndQuantityOfGoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OverseaAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Package")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickupInstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("QuotationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReasonForCancel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SalesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellingRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellingRateUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceTermEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceTermStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SubAgentAwb")
                        .HasColumnType("bit");

                    b.Property<string>("Trucker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VolumeWeightCBM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VolumeWeightKG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WTVAL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MawbId");

                    b.HasIndex("OPId");

                    b.HasIndex("SalesId");

                    b.ToTable("AppAirExportHawbs", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.AirExports.AirExportMawb", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AwbAcctCarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AwbCancelledDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AwbCancelledOpId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AwbChargeableWeightAmount")
                        .HasColumnType("float");

                    b.Property<double>("AwbChargeableWeightKg")
                        .HasColumnType("float");

                    b.Property<double>("AwbChargeableWeightLb")
                        .HasColumnType("float");

                    b.Property<DateTime>("AwbDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("AwbGrossWeightAmount")
                        .HasColumnType("float");

                    b.Property<double>("AwbGrossWeightKg")
                        .HasColumnType("float");

                    b.Property<double>("AwbGrossWeightLb")
                        .HasColumnType("float");

                    b.Property<int>("AwbType")
                        .HasColumnType("int");

                    b.Property<Guid?>("BusinessReferredId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BuyingRate")
                        .HasColumnType("float");

                    b.Property<int>("BuyingRateUnitType")
                        .HasColumnType("int");

                    b.Property<string>("CarrierSpotNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<double>("ChargeableWeightAmount")
                        .HasColumnType("float");

                    b.Property<double>("ChargeableWeightKg")
                        .HasColumnType("float");

                    b.Property<double>("ChargeableWeightLb")
                        .HasColumnType("float");

                    b.Property<Guid?>("CoLoaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<Guid?>("ConsigneeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("DVCarriage")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("DVCustomer")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("DeliveryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DepatureDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisplayUnit")
                        .HasColumnType("int");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FilingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<double>("GrossWeightAmount")
                        .HasColumnType("float");

                    b.Property<double>("GrossWeightKg")
                        .HasColumnType("float");

                    b.Property<double>("GrossWeightLb")
                        .HasColumnType("float");

                    b.Property<string>("HandlingInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IncotermsType")
                        .HasColumnType("int");

                    b.Property<string>("Insurance")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<bool>("IsAwbCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsDirectMaster")
                        .HasColumnType("bit");

                    b.Property<bool>("IsECom")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("IssuingCarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItnNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ManifestNatureAndQuantityOfGoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MawbCarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MawbNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MawbOperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MawbPackageUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NatureAndQuantityOfGoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NotifyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Package")
                        .HasColumnType("float");

                    b.Property<Guid?>("PackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReasonForCancel")
                        .HasColumnType("int");

                    b.Property<DateTime>("RouteTrans1ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RouteTrans1CarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RouteTrans1DepatureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RouteTrans1FlightNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("RouteTrans1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RouteTrans2ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RouteTrans2CarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RouteTrans2DepatureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RouteTrans2FlightNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("RouteTrans2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RouteTrans3ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RouteTrans3CarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RouteTrans3DepatureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RouteTrans3FlightNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("RouteTrans3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sci")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<double>("SellingRate")
                        .HasColumnType("float");

                    b.Property<int>("SellingRateUnitType")
                        .HasColumnType("int");

                    b.Property<int>("ServiceTermTypeFrom")
                        .HasColumnType("int");

                    b.Property<int>("ServiceTermTypeTo")
                        .HasColumnType("int");

                    b.Property<Guid?>("ShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShipperLoad")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ShippingInfo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double>("VolumeWeightCbm")
                        .HasColumnType("float");

                    b.Property<double>("VolumeWeightKg")
                        .HasColumnType("float");

                    b.Property<string>("WtVal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AwbAcctCarrierId");

                    b.HasIndex("AwbCancelledOpId");

                    b.HasIndex("BusinessReferredId");

                    b.HasIndex("CoLoaderId");

                    b.HasIndex("ConsigneeId");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("DepatureId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("IssuingCarrierId");

                    b.HasIndex("MawbCarrierId");

                    b.HasIndex("MawbOperatorId");

                    b.HasIndex("NotifyId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("PackageId");

                    b.HasIndex("RouteTrans1CarrierId");

                    b.HasIndex("RouteTrans1Id");

                    b.HasIndex("RouteTrans2CarrierId");

                    b.HasIndex("RouteTrans2Id");

                    b.HasIndex("RouteTrans3CarrierId");

                    b.HasIndex("RouteTrans3Id");

                    b.HasIndex("ShipperId");

                    b.ToTable("AppAirExportMawbs", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.AirExports.Airport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AirportIataCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("AirportName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.HasKey("Id");

                    b.ToTable("AppAirports", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.AirImports.AirImportHawb", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillToId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CargoReleasedto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeableWeightKG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeableWeightLB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassOfEntry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<Guid?>("ConsigneeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomsBroker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DoorDelivered")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FinalDestination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinalETA")
                        .HasColumnType("datetime2");

                    b.Property<string>("Freight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreightLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FrtRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrossWeightKG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrossWeightLB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HawbNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hsn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ITDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ITIssuedLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Incoterms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastFreeDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MawbId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Package")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("QuotationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReleasedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SalesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceTermStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceTermTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StorageStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Trucker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VolumeWeightCBM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VolumeWeightKG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsigneeId");

                    b.HasIndex("OPId");

                    b.HasIndex("SalesId");

                    b.HasIndex("ShipperId");

                    b.ToTable("AppAirImportHawbs", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.AirImports.AirImportMawb", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AwbAcctCarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AwbType")
                        .HasColumnType("int");

                    b.Property<Guid?>("BillToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BusinessReferredId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ChargeableWeightKg")
                        .HasColumnType("float");

                    b.Property<double>("ChargeableWeightLb")
                        .HasColumnType("float");

                    b.Property<Guid?>("CoLoaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<Guid?>("ConsigneeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DepatureDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisplayUnit")
                        .HasColumnType("int");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FPOEDepature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FPOEDestination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FPOETrans1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FPOETrans2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FPOETrans3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("FreightLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FreightType")
                        .HasColumnType("int");

                    b.Property<double>("GrossWeightKg")
                        .HasColumnType("float");

                    b.Property<double>("GrossWeightLb")
                        .HasColumnType("float");

                    b.Property<int>("IncotermsType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsDirectMaster")
                        .HasColumnType("bit");

                    b.Property<bool>("IsECom")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("MawbNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("MawbPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MawbPackageUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NotifyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OverseaAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Package")
                        .HasColumnType("float");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RouteTrans1ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RouteTrans1CarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RouteTrans1DepatureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RouteTrans1FlightNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("RouteTrans1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RouteTrans2ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RouteTrans2CarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RouteTrans2DepatureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RouteTrans2FlightNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("RouteTrans2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RouteTrans3ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RouteTrans3CarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RouteTrans3DepatureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RouteTrans3FlightNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("RouteTrans3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ServiceTermTypeFrom")
                        .HasColumnType("int");

                    b.Property<int>("ServiceTermTypeTo")
                        .HasColumnType("int");

                    b.Property<Guid?>("ShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StorageStartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("VolumeWeightCbm")
                        .HasColumnType("float");

                    b.Property<double>("VolumeWeightKg")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AwbAcctCarrierId");

                    b.HasIndex("BillToId");

                    b.HasIndex("BusinessReferredId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("CoLoaderId");

                    b.HasIndex("ConsigneeId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DepatureId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("FreightLocationId");

                    b.HasIndex("MawbPackageId");

                    b.HasIndex("NotifyId");

                    b.HasIndex("OPId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("OverseaAgentId");

                    b.HasIndex("RouteTrans1CarrierId");

                    b.HasIndex("RouteTrans1Id");

                    b.HasIndex("RouteTrans2CarrierId");

                    b.HasIndex("RouteTrans2Id");

                    b.HasIndex("RouteTrans3CarrierId");

                    b.HasIndex("RouteTrans3Id");

                    b.HasIndex("SalesId");

                    b.HasIndex("ShipperId");

                    b.ToTable("AppAirImportMawbs", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.Attachments.Attachment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("Fid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Ftype")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsMemo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ShowName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("AppAttachments", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.Common.CargoManifest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Detail")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<double>("GrossWeight")
                        .HasColumnType("float");

                    b.Property<string>("HtsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<double>("NetWeight")
                        .HasColumnType("float");

                    b.Property<int>("PackageNum")
                        .HasColumnType("int");

                    b.Property<Guid?>("PackageUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Pcs")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PackageUnitId");

                    b.ToTable("AppCargoManifests", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.Common.ContainerDimension", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<double>("ContainerHeight")
                        .HasColumnType("float");

                    b.Property<Guid>("ContainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ContainerLength")
                        .HasColumnType("float");

                    b.Property<double>("ContainerWidth")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppContainerDimensions", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.Common.WarehouseReceipt", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DimensionUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<string>("LoadPlanRemarks")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<double>("Measure")
                        .HasColumnType("float");

                    b.Property<Guid?>("PackageUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Pcs")
                        .HasColumnType("int");

                    b.Property<string>("ReceiptNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DimensionUnitId");

                    b.HasIndex("PackageUnitId");

                    b.ToTable("AppWarehouseReceipts", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.Configuration.GridPreference", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Preference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferenceSrc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppGridPreference", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.Containers.Container", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApptDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ContainerNo")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid>("ContainerSizeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime>("CutOffDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EmptyReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimateDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime>("FreeDetentionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GateInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GateOutDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HblId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAvailableForPickup")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCTF")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCarrierRelease")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustomsClearance")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDanger")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsPP")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastFreeDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTime>("LoadedOnVesselDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LoadingDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MblId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MblType")
                        .HasColumnType("int");

                    b.Property<double>("PackageMeasure")
                        .HasColumnType("float");

                    b.Property<string>("PackageMeasureUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackageNum")
                        .HasColumnType("int");

                    b.Property<Guid?>("PackageUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("PackageWeight")
                        .HasColumnType("float");

                    b.Property<string>("PackageWeightUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicupNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("SealNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SealNo2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StorageEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StorageStartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.Property<string>("TemperatureUnit")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UvDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("VentilationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VesselId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("YardLocation")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("VentilationId");

                    b.ToTable("AppContainers", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.OceanExports.ExportBooking", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BillToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BookingRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CancelById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CancelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CanceledDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CargoArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CargoPickupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CargoReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CargoRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CargoTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CarrierBkgNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoLoaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<Guid?>("ConsigneeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContainerPickupNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerQtyInputText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerRefNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("DelEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeliveryToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DocCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("EarlyReturnDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EctNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmptyPickupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("FbaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FdestEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FdestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ForwardingAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FreightTermForBuyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FreightTermForSalerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HblAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HblNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("HblReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoldReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HolderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IncotermsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsHold")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReleased")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStackable")
                        .HasColumnType("bit");

                    b.Property<string>("ItnNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblSaleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NotifyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PoNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PodEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PolEtd")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PorEtd")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PortCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrnNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RailCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReferenceType")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReferralById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReleaseById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalespersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShipModeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShippingAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShippingRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("SoNoDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SvcTermFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SvcTermToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Trans1Eta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransPort1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TruckerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VesselName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VesselScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("VgmCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Voyage")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("WhCutOffTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillToId");

                    b.HasIndex("CancelById");

                    b.HasIndex("CargoPickupId");

                    b.HasIndex("CargoTypeId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("CoLoaderId");

                    b.HasIndex("ConsigneeId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DelId");

                    b.HasIndex("DeliveryToId");

                    b.HasIndex("EmptyPickupId");

                    b.HasIndex("FbaId");

                    b.HasIndex("FdestId");

                    b.HasIndex("ForwardingAgentId");

                    b.HasIndex("FreightTermForBuyerId");

                    b.HasIndex("FreightTermForSalerId");

                    b.HasIndex("HblAgentId");

                    b.HasIndex("HolderId");

                    b.HasIndex("IncotermsId");

                    b.HasIndex("MblSaleId");

                    b.HasIndex("NotifyId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("PodId");

                    b.HasIndex("PolId");

                    b.HasIndex("PorId");

                    b.HasIndex("ReferralById");

                    b.HasIndex("ReleaseById");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("SvcTermFromId");

                    b.HasIndex("SvcTermToId");

                    b.HasIndex("TransPort1Id");

                    b.HasIndex("TruckerId");

                    b.HasIndex("VesselScheduleId");

                    b.ToTable("AppExportBookings", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.OceanExports.OceanExportHbl", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("APSurplus")
                        .HasColumnType("float");

                    b.Property<double>("ARSurplus")
                        .HasColumnType("float");

                    b.Property<Guid?>("AgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("B2bNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("CancelById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CancelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CanceledDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CardColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CargoArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CargoPickupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CargoTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ColorRemarkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime?>("CustomClearance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CustomDeclaration")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerRefNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("CustomsBrokerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CyCfsLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DCSurplus")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DelEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeliveryToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayHblContainerSizeQtyInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DomesticInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DoorDeliveryATA")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DoorDeliveryETA")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EarlyReturnDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmptyPickupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("FbaFcId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FdestEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FdestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ForwardingAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FreightTermForBuyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FreightTermForSalerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HblBillToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HblConsigneeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HblCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HblNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("HblNotifyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HblOperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("HblReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HblSaleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HblShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("HblWhCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoldReason")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("HolderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IncotermsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEcommerce")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpress")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHold")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRailwayCode")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReleased")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStackable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubAgentBl")
                        .HasColumnType("bit");

                    b.Property<string>("ItnNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LcIssueBank")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("LcIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LcNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MblReferralById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MblSalesTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NraNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("OnBoardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PoNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PodEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PolEtd")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PorEtd")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QuotationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RailwayCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReceivingAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReleaseById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShipModeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShipTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SoNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("SoNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurplusType")
                        .HasColumnType("int");

                    b.Property<Guid?>("SvcTermFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SvcTermToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TruckerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WoNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("CancelById");

                    b.HasIndex("CardColorId");

                    b.HasIndex("CargoPickupId");

                    b.HasIndex("CargoTypeId");

                    b.HasIndex("ColorRemarkId");

                    b.HasIndex("CustomsBrokerId");

                    b.HasIndex("CyCfsLocationId");

                    b.HasIndex("DelId");

                    b.HasIndex("DeliveryToId");

                    b.HasIndex("EmptyPickupId");

                    b.HasIndex("FbaFcId");

                    b.HasIndex("FdestId");

                    b.HasIndex("ForwardingAgentId");

                    b.HasIndex("FreightTermForBuyerId");

                    b.HasIndex("FreightTermForSalerId");

                    b.HasIndex("HblBillToId");

                    b.HasIndex("HblConsigneeId");

                    b.HasIndex("HblCustomerId");

                    b.HasIndex("HblNotifyId");

                    b.HasIndex("HblOperatorId");

                    b.HasIndex("HblSaleId");

                    b.HasIndex("HblShipperId");

                    b.HasIndex("HolderId");

                    b.HasIndex("IncotermsId");

                    b.HasIndex("MblId");

                    b.HasIndex("MblReferralById");

                    b.HasIndex("MblSalesTypeId");

                    b.HasIndex("PodId");

                    b.HasIndex("PolId");

                    b.HasIndex("PorId");

                    b.HasIndex("RailwayCodeId");

                    b.HasIndex("ReceivingAgentId");

                    b.HasIndex("ReleaseById");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("ShipTypeId");

                    b.HasIndex("SvcTermFromId");

                    b.HasIndex("SvcTermToId");

                    b.HasIndex("TruckerId");

                    b.ToTable("AppOceanExportHbls", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.OceanExports.OceanExportMbl", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AmsNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("BlAcctCarrierContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BlAcctCarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BlTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BookingMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CancelById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CancelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CanceledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CareOfContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CareOfId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CargoTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CarrierContractNo")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("CoLoaderContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CoLoaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ColorRemarkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CustomerRefNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DelEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeliveryToContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeliveryToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayMblContainerSizeQtyInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DocCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DomesticInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EctNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("EmptyPickupContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmptyPickupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime?>("FdestEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FdestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForwardRefNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ForwardingAgentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ForwardingAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FreightTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsBookingAgent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsDirect")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEcommerce")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReleased")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsedCareOf")
                        .HasColumnType("bit");

                    b.Property<string>("ItnNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MblBillToContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblBillToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MblCarrierContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblCarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MblConsigneeContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblConsigneeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MblCustomerContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MblNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("MblNotifyContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblNotifyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MblOperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MblOverseaAgentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblOverseaAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MblReferralByContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblReferralById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MblReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MblSaleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MblSalesTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OblTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OnBoardDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PackageCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PackageMeasureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PackageWeightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PodEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PolEtd")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PorEtd")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PortCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PreCarriageVesselNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrepreCarriageVoyage")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PrnNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("RailCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReleaseById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ServiceContactNo")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<Guid?>("ShipModeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShipmentNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ShippingAgentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShippingAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SoNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("SubBlNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("SvcTermFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SvcTermToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TotalAmountType")
                        .HasColumnType("bit");

                    b.Property<double>("TotalMeasure")
                        .HasColumnType("float");

                    b.Property<int>("TotalPackage")
                        .HasColumnType("int");

                    b.Property<double>("TotalWeight")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Trans1Eta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransPort1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VesselName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VgmCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Voyage")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("BlAcctCarrierId");

                    b.HasIndex("BlTypeId");

                    b.HasIndex("CancelById");

                    b.HasIndex("CareOfId");

                    b.HasIndex("CargoTypeId");

                    b.HasIndex("CoLoaderId");

                    b.HasIndex("ColorRemarkId");

                    b.HasIndex("DelId");

                    b.HasIndex("DeliveryToId");

                    b.HasIndex("EmptyPickupId");

                    b.HasIndex("FdestId");

                    b.HasIndex("ForwardingAgentId");

                    b.HasIndex("FreightTermId");

                    b.HasIndex("MblBillToId");

                    b.HasIndex("MblCarrierId");

                    b.HasIndex("MblConsigneeId");

                    b.HasIndex("MblCustomerId");

                    b.HasIndex("MblNotifyId");

                    b.HasIndex("MblOperatorId");

                    b.HasIndex("MblOverseaAgentId");

                    b.HasIndex("MblReferralById");

                    b.HasIndex("MblSaleId");

                    b.HasIndex("MblSalesTypeId");

                    b.HasIndex("OblTypeId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("PackageCategoryId");

                    b.HasIndex("PackageMeasureId");

                    b.HasIndex("PackageWeightId");

                    b.HasIndex("PodId");

                    b.HasIndex("PolId");

                    b.HasIndex("PorId");

                    b.HasIndex("PreCarriageVesselNameId");

                    b.HasIndex("ReleaseById");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("SvcTermFromId");

                    b.HasIndex("SvcTermToId");

                    b.HasIndex("TransPort1Id");

                    b.ToTable("AppOceanExportMbls", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.OceanExports.VesselSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BlAcctCarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BlTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoLoaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime>("DelEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeliveryToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DocCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmptyPickupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime>("FdestEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FdestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ForwardRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ForwardingAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FreightTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("ItnNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("MblCarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MblNotifyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MblOverseaAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OblTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OnBoardDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PodEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PolEtd")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PorEtd")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PortCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RailCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ServiceContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShipModeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShippingAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SoNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("SubBlNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SvcTermFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SvcTermToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Trans1Eta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransPort1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VesselName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VgmCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Voyage")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("BlAcctCarrierId");

                    b.HasIndex("BlTypeId");

                    b.HasIndex("CoLoaderId");

                    b.HasIndex("DelId");

                    b.HasIndex("DeliveryToId");

                    b.HasIndex("EmptyPickupId");

                    b.HasIndex("FdestId");

                    b.HasIndex("ForwardingAgentId");

                    b.HasIndex("FreightTermId");

                    b.HasIndex("MblCarrierId");

                    b.HasIndex("MblNotifyId");

                    b.HasIndex("MblOverseaAgentId");

                    b.HasIndex("OblTypeId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("PodId");

                    b.HasIndex("PolId");

                    b.HasIndex("PorId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("SvcTermFromId");

                    b.HasIndex("SvcTermToId");

                    b.HasIndex("TransPort1Id");

                    b.ToTable("AppVesselSchedules", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.OceanImports.OceanImportHbl", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("APSurplus")
                        .HasColumnType("float");

                    b.Property<double>("ARSurplus")
                        .HasColumnType("float");

                    b.Property<Guid?>("AgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AmsNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("AnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Available")
                        .HasColumnType("datetime2");

                    b.Property<string>("B2bNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("BusinessReferrerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CClearance")
                        .HasColumnType("bit");

                    b.Property<bool>("CHold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CancelById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CancelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CanceledDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CardColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CargoArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CargoPickupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CargoTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ColorRemarkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime?>("CustomClearance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CustomDeclaration")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerRefNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("CustomsBrokerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomsDeclarationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CustomsDeclarationSendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CyCfsLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DCSurplus")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DelEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeliveredDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeliveryToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Demurrage")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayHblContainerSizeQtyInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DoDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DomesticInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomesticInstructionsDelOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DoorDeliveryATA")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DoorDeliveryETA")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DoorMove")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EarlyReturnDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmptyPickupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EntryDocSent")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntryNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("FbaFcId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FdestEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FdestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ForwardingAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Freight")
                        .HasColumnType("int");

                    b.Property<Guid?>("FreightTermForBuyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FreightTermForSalerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("GoDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupComm")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("HblBillToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HblConsigneeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HblCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HblNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("HblNotifyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HblOperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("HblReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HblSaleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HblSalesTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HblShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("HblWhCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoldReason")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("HolderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IncotermsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsDo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEcommerce")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpress")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHold")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOblReceived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRailwayCode")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReleased")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStackable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubAgentBl")
                        .HasColumnType("bit");

                    b.Property<bool>("IsfByThirdParty")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsfDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IsfMatchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsfNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("ItDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ItIssuedLocation")
                        .HasColumnType("int");

                    b.Property<string>("ItLocation")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ItNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LcIssueBank")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("LcIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LcNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("Lfd")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineCode")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MblReferralById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameAccount")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("NraNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("OblReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OnBoardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PoNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PodEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PolEtd")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PorEtd")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QuotationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RailwayCodeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RaiseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReceivingAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReleaseById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ror")
                        .HasColumnType("bit");

                    b.Property<string>("ScNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("ShipModeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShipTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SoNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("SoNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurplusType")
                        .HasColumnType("int");

                    b.Property<Guid?>("SvcTermFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SvcTermToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TruckerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WoNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("BusinessReferrerId");

                    b.HasIndex("CancelById");

                    b.HasIndex("CardColorId");

                    b.HasIndex("CargoPickupId");

                    b.HasIndex("CargoTypeId");

                    b.HasIndex("ColorRemarkId");

                    b.HasIndex("CustomsBrokerId");

                    b.HasIndex("CyCfsLocationId");

                    b.HasIndex("DelId");

                    b.HasIndex("DeliveryToId");

                    b.HasIndex("EmptyPickupId");

                    b.HasIndex("FbaFcId");

                    b.HasIndex("FdestId");

                    b.HasIndex("ForwardingAgentId");

                    b.HasIndex("FreightTermForBuyerId");

                    b.HasIndex("FreightTermForSalerId");

                    b.HasIndex("HblBillToId");

                    b.HasIndex("HblConsigneeId");

                    b.HasIndex("HblCustomerId");

                    b.HasIndex("HblNotifyId");

                    b.HasIndex("HblOperatorId");

                    b.HasIndex("HblSaleId");

                    b.HasIndex("HblSalesTypeId");

                    b.HasIndex("HblShipperId");

                    b.HasIndex("HolderId");

                    b.HasIndex("IncotermsId");

                    b.HasIndex("MblId");

                    b.HasIndex("MblReferralById");

                    b.HasIndex("PodId");

                    b.HasIndex("PolId");

                    b.HasIndex("PorId");

                    b.HasIndex("ReceivingAgentId");

                    b.HasIndex("ReleaseById");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("ShipTypeId");

                    b.HasIndex("SvcTermFromId");

                    b.HasIndex("SvcTermToId");

                    b.HasIndex("TruckerId");

                    b.ToTable("AppOceanImportHbls", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.OceanImports.OceanImportMbl", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AgentRefNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("AmsNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("BlAcctCarrierContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BlAcctCarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BlTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BookingMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BusinessReferrerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CancelById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CancelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CanceledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CareOfContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CareOfId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CargoTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CarrierContractNo")
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<Guid?>("CfsLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoLoaderContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CoLoaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ColorRemarkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CustomerRefNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("CyLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DelEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeliveryToContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeliveryToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayMblContainerSizeQtyInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DocCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DomesticInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EctNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("EmptyPickupContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmptyPickupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Etb")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime?>("FdestEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FdestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForwardRefNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ForwardingAgentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ForwardingAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FreightTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsBookingAgent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsDirect")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEcommerce")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOblReceived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReleased")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsedCareOf")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ItDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItLocation")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ItNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ItnNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTime?>("LatestContainerEntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MblBillToContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblBillToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MblCarrierContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblCarrierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MblConsigneeContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblConsigneeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MblCustomerContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MblNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("MblNotifyContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblNotifyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MblOperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MblOverseaAgentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblOverseaAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MblReferralByContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MblReferralById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MblReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MblSaleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MblSalesTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MblShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OblReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OblTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OfficeId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OnBoardDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PackageCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PackageMeasureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PackageWeightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PodEta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PolEtd")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PorEtd")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PortCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PreCarriageVesselNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrepreCarriageVoyage")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PrnNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("RailCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReleaseById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReturnLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ServiceContactNo")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<Guid?>("ShipModeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShipmentNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ShippingAgentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShippingAgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SoNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("SubBlNo")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("SvcTermFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SvcTermToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TotalAmountType")
                        .HasColumnType("bit");

                    b.Property<double>("TotalMeasure")
                        .HasColumnType("float");

                    b.Property<int>("TotalPackage")
                        .HasColumnType("int");

                    b.Property<double>("TotalWeight")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Trans1Eta")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransPort1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VesselName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VgmCutOffTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Voyage")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("BlAcctCarrierId");

                    b.HasIndex("BlTypeId");

                    b.HasIndex("BusinessReferrerId");

                    b.HasIndex("CancelById");

                    b.HasIndex("CareOfId");

                    b.HasIndex("CargoTypeId");

                    b.HasIndex("CfsLocationId");

                    b.HasIndex("CoLoaderId");

                    b.HasIndex("ColorRemarkId");

                    b.HasIndex("CyLocationId");

                    b.HasIndex("DelId");

                    b.HasIndex("DeliveryToId");

                    b.HasIndex("EmptyPickupId");

                    b.HasIndex("FdestId");

                    b.HasIndex("ForwardingAgentId");

                    b.HasIndex("FreightTermId");

                    b.HasIndex("MblBillToId");

                    b.HasIndex("MblCarrierId");

                    b.HasIndex("MblConsigneeId");

                    b.HasIndex("MblCustomerId");

                    b.HasIndex("MblNotifyId");

                    b.HasIndex("MblOperatorId");

                    b.HasIndex("MblOverseaAgentId");

                    b.HasIndex("MblReferralById");

                    b.HasIndex("MblSaleId");

                    b.HasIndex("MblSalesTypeId");

                    b.HasIndex("MblShipperId");

                    b.HasIndex("OblTypeId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("PackageCategoryId");

                    b.HasIndex("PackageMeasureId");

                    b.HasIndex("PackageWeightId");

                    b.HasIndex("PodId");

                    b.HasIndex("PolId");

                    b.HasIndex("PorId");

                    b.HasIndex("PreCarriageVesselNameId");

                    b.HasIndex("ReleaseById");

                    b.HasIndex("ReturnLocationId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("SvcTermFromId");

                    b.HasIndex("SvcTermToId");

                    b.HasIndex("TransPort1Id");

                    b.ToTable("AppOceanImportMbls", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.ReportLog.ReportLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppReportLog", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.AirOtherCharge.AirOtherCharge", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("chargeItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("chargeItemSubitem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("chargeRate")
                        .HasColumnType("int");

                    b.Property<string>("chargeRateUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("minPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("showOnHAWB")
                        .HasColumnType("bit");

                    b.Property<bool>("showOnMAWB")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AppAirOtherCharges", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.AwbNoRanges.AwbNoRange", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CurrentNo")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("EndNo")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartNo")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("AppAwbNoRanges", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.ContainerSizes.ContainerSize", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ContainerCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<Guid?>("ContainerGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsUseed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("SizeDescription")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double>("Teu")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContainerGroupId");

                    b.ToTable("AppContainerSizes", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.Countries.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("AppCountries", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.Countries.CountryDisplayName", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AirportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AirportId");

                    b.HasIndex("CountryId");

                    b.HasIndex("OfficeId");

                    b.ToTable("AppCountryDisplayName", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.Currencies.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlphabetCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.HasKey("Id");

                    b.ToTable("AppCurrencies", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.CurrencySetting.CurrencySetting", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CurrencyDepartment")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CustomerShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EndCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ExChangeRate")
                        .HasColumnType("real");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("StartingCurrency")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("AppCurrencySetting", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.DisplaySetting.DisplaySetting", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompleteDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.HasKey("Id");

                    b.ToTable("AppDisplaySettings", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.ItNoRanges.ItNoRange", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CurrentNo")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("EndNo")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartNo")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.ToTable("AppItNoRanges", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.Offices.Office", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OfficeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AppOffices", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.PackageUnits.PackageUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AmsNoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("EManifestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("PackageCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PackageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AmsNoId");

                    b.HasIndex("EManifestId");

                    b.HasIndex("PackageCode")
                        .IsUnique();

                    b.ToTable("AppPackageUnits", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.Ports.Port", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsPort")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Locode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubDiv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("AppPorts", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.PortsManagement.PortsManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsPort")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Locode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubDiv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppPortsManagements", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.Substations.Substation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbbreviationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("SubstationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppSubstations", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.SysCodes.SysCode", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ParentId");

                    b.Property<string>("ShowName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AppSysCodes", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.AccountGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountGroupName")
                        .IsRequired()
                        .HasMaxLength(384)
                        .HasColumnType("nvarchar(384)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.HasKey("Id");

                    b.ToTable("AppAccountGroups", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.ContactPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ContactAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactAge")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ContactBirthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("ContactCityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactConstellation")
                        .HasColumnType("int");

                    b.Property<Guid?>("ContactCountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactDivision")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("ContactDrink")
                        .HasColumnType("int");

                    b.Property<string>("ContactEmailAddress")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ContactFax")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("ContactGarment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactGender")
                        .HasColumnType("int");

                    b.Property<string>("ContactHobby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInterest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactMarriage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ContactMemorialDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("ContactPostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactRemark")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int?>("ContactSmokes")
                        .HasColumnType("int");

                    b.Property<string>("ContactStateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTitle")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEmailNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRep")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("TradePartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppContactPersons", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.ContactPersonChild", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("AppContactPersonChilds", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.Credits.CreditLimitGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<int>("CreditLimit")
                        .HasColumnType("int");

                    b.Property<string>("CreditLimitGroupName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("CreditTermDays")
                        .HasColumnType("int");

                    b.Property<int>("CreditTermType")
                        .HasColumnType("int");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppCreditLimitGroups", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.DefaultFreight.DefaultFreightAP", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AgentAmount")
                        .HasColumnType("float");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("FreightCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FreightDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("PCType")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<bool?>("ShipModeBULK")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShipModeFAK")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShipModeFCL")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShipModeLCL")
                        .HasColumnType("bit");

                    b.Property<Guid>("TradePartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<double>("Vol")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FreightCode");

                    b.HasIndex("TradePartnerId");

                    b.ToTable("AppTradePartnerDefaultFreightAP", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.DefaultFreight.DefaultFreightAR", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AgentAmount")
                        .HasColumnType("float");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("FreightCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FreightDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("PCType")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<bool?>("ShipModeBULK")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShipModeFAK")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShipModeFCL")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShipModeLCL")
                        .HasColumnType("bit");

                    b.Property<Guid>("TradePartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<double>("Vol")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FreightCode");

                    b.HasIndex("TradePartnerId");

                    b.ToTable("AppTradePartnerDefaultFreightAR", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.DefaultFreight.DefaultFreightDC", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AgentAmount")
                        .HasColumnType("float");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("FreightCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FreightDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("PCType")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<bool?>("ShipModeBULK")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShipModeFAK")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShipModeFCL")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShipModeLCL")
                        .HasColumnType("bit");

                    b.Property<Guid>("TradePartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<double>("Vol")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FreightCode");

                    b.HasIndex("TradePartnerId");

                    b.ToTable("AppTradePartnerDefaultFreightDC", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.TradeParties.TradeParty", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("TargetTradePartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TradePartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TradePartyDescription")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("TradePartyType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TradePartnerId");

                    b.ToTable("AppTradeParties", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.TradePartner", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountAddress")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("AccountCurrencyCode")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("AccountCurrencyCode2")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("AccountCurrencyCode3")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("AccountGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasMaxLength(384)
                        .HasColumnType("nvarchar(384)");

                    b.Property<string>("AccountNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("AccountNo2")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("AccountNo3")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("BankName")
                        .HasMaxLength(384)
                        .HasColumnType("nvarchar(384)");

                    b.Property<string>("BankName2")
                        .HasMaxLength(384)
                        .HasColumnType("nvarchar(384)");

                    b.Property<string>("BankName3")
                        .HasMaxLength(384)
                        .HasColumnType("nvarchar(384)");

                    b.Property<bool>("BillToAgentCode")
                        .HasColumnType("bit");

                    b.Property<int>("BussinessStatusType")
                        .HasColumnType("int");

                    b.Property<string>("CbsaCode")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Ceo")
                        .HasMaxLength(384)
                        .HasColumnType("nvarchar(384)");

                    b.Property<string>("CityCode")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Clm")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("CorpNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<int>("CreditLimit")
                        .HasColumnType("int");

                    b.Property<Guid>("CreditLimitGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreditTermDays")
                        .HasColumnType("int");

                    b.Property<int>("CreditTermType")
                        .HasColumnType("int");

                    b.Property<string>("CsCode")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DutyPaymentType")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Fax")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("FirmsCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("IataCode")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("IataPrefix")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("ImporterCodeType")
                        .HasColumnType("int");

                    b.Property<string>("ImporterNo")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("IsfSubmissionName")
                        .HasMaxLength(384)
                        .HasColumnType("nvarchar(384)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("OpenHours")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<string>("PopUpTips")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesCode")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SalesCodeAe")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SalesCodeAi")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SalesCodeCuAe")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SalesCodeCuAi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesCodeCuOe")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SalesCodeCuOi")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SalesCodeOe")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SalesCodeOi")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SalesOfficeCode")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ScacCode")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("StateCode")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("TPAliasName")
                        .HasMaxLength(384)
                        .HasColumnType("nvarchar(384)");

                    b.Property<string>("TPCode")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("TPLocalAddress")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("TPName")
                        .IsRequired()
                        .HasMaxLength(384)
                        .HasColumnType("nvarchar(384)");

                    b.Property<string>("TPNameLocal")
                        .HasMaxLength(384)
                        .HasColumnType("nvarchar(384)");

                    b.Property<string>("TPNamePrint")
                        .IsRequired()
                        .HasMaxLength(384)
                        .HasColumnType("nvarchar(384)");

                    b.Property<string>("TPPrintAddress")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("TPType")
                        .HasColumnType("int");

                    b.Property<string>("TaxId")
                        .HasMaxLength(72)
                        .HasColumnType("nvarchar(72)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("TrackPayment")
                        .HasColumnType("bit");

                    b.Property<string>("Website")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("AppTradePartners", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.TradePartnerAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachmentName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("AttachmentSize")
                        .HasColumnType("float");

                    b.Property<DateTime>("AttachmentUploadTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("TPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppTradePartnerAttachments", (string)null);
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.TradePartnerMemo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("Highlight")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Memo")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("TradePartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TradePartnerId");

                    b.ToTable("AppTradePartnerMemo", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)")
                        .HasColumnName("ApplicationName");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("BrowserInfo");

                    b.Property<string>("ClientId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ClientId");

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ClientIpAddress");

                    b.Property<string>("ClientName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("ClientName");

                    b.Property<string>("Comments")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Comments");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("CorrelationId");

                    b.Property<string>("Exceptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("int")
                        .HasColumnName("ExecutionDuration");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HttpMethod")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("HttpMethod");

                    b.Property<int?>("HttpStatusCode")
                        .HasColumnType("int")
                        .HasColumnName("HttpStatusCode");

                    b.Property<Guid?>("ImpersonatorTenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ImpersonatorTenantId");

                    b.Property<string>("ImpersonatorTenantName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ImpersonatorTenantName");

                    b.Property<Guid?>("ImpersonatorUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ImpersonatorUserId");

                    b.Property<string>("ImpersonatorUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ImpersonatorUserName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("TenantName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("TenantName");

                    b.Property<string>("Url")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Url");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "ExecutionTime");

                    b.HasIndex("TenantId", "UserId", "ExecutionTime");

                    b.ToTable("AbpAuditLogs", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLogAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditLogId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AuditLogId");

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("int")
                        .HasColumnName("ExecutionDuration");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExecutionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("MethodName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("MethodName");

                    b.Property<string>("Parameters")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("Parameters");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ServiceName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AuditLogId");

                    b.HasIndex("TenantId", "ServiceName", "MethodName", "ExecutionTime");

                    b.ToTable("AbpAuditLogActions", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditLogId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AuditLogId");

                    b.Property<DateTime>("ChangeTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ChangeTime");

                    b.Property<byte>("ChangeType")
                        .HasColumnType("tinyint")
                        .HasColumnName("ChangeType");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("EntityId");

                    b.Property<Guid?>("EntityTenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityTypeFullName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("EntityTypeFullName");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AuditLogId");

                    b.HasIndex("TenantId", "EntityTypeFullName", "EntityId");

                    b.ToTable("AbpEntityChanges", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityPropertyChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityChangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NewValue")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("NewValue");

                    b.Property<string>("OriginalValue")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("OriginalValue");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("PropertyName");

                    b.Property<string>("PropertyTypeFullName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("PropertyTypeFullName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeId");

                    b.ToTable("AbpEntityPropertyChanges", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.BackgroundJobs.BackgroundJobRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsAbandoned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("JobArgs")
                        .IsRequired()
                        .HasMaxLength(1048576)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LastTryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NextTryTime")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)15);

                    b.Property<short>("TryCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.HasKey("Id");

                    b.HasIndex("IsAbandoned", "NextTryTime");

                    b.ToTable("AbpBackgroundJobs", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.FeatureManagement.FeatureValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProviderName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "ProviderName", "ProviderKey")
                        .IsUnique()
                        .HasFilter("[ProviderName] IS NOT NULL AND [ProviderKey] IS NOT NULL");

                    b.ToTable("AbpFeatureValues", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityClaimType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Regex")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("RegexDescription")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<int>("ValueType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AbpClaimTypes", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityLinkUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SourceTenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SourceUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TargetTenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TargetUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SourceUserId", "SourceTenantId", "TargetUserId", "TargetTenantId")
                        .IsUnique()
                        .HasFilter("[SourceTenantId] IS NOT NULL AND [TargetTenantId] IS NOT NULL");

                    b.ToTable("AbpLinkUsers", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRole", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublic");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("bit")
                        .HasColumnName("IsStatic");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName");

                    b.ToTable("AbpRoles", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRoleClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AbpRoleClaims", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentitySecurityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)");

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ClientId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Identity")
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("TenantName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Action");

                    b.HasIndex("TenantId", "ApplicationName");

                    b.HasIndex("TenantId", "Identity");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpSecurityLogs", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Email");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("EmailConfirmed");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsExternal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsExternal");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NormalizedEmail");

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NormalizedUserName");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("SecurityStamp");

                    b.Property<string>("Surname")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Surname");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<bool>("TwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("NormalizedEmail");

                    b.HasIndex("NormalizedUserName");

                    b.HasIndex("UserName");

                    b.ToTable("AbpUsers", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AbpUserClaims", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserLogin", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(196)
                        .HasColumnType("nvarchar(196)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("UserId", "LoginProvider");

                    b.HasIndex("LoginProvider", "ProviderKey");

                    b.ToTable("AbpUserLogins", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserOrganizationUnit", b =>
                {
                    b.Property<Guid>("OrganizationUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("OrganizationUnitId", "UserId");

                    b.HasIndex("UserId", "OrganizationUnitId");

                    b.ToTable("AbpUserOrganizationUnits", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId", "UserId");

                    b.ToTable("AbpUserRoles", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AbpUserTokens", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(95)
                        .HasColumnType("nvarchar(95)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("DisplayName");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("ParentId");

                    b.ToTable("AbpOrganizationUnits", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnitRole", b =>
                {
                    b.Property<Guid>("OrganizationUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("OrganizationUnitId", "RoleId");

                    b.HasIndex("RoleId", "OrganizationUnitId");

                    b.ToTable("AbpOrganizationUnitRoles", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiResources.ApiResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AllowedAccessTokenSigningAlgorithms")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("ShowInDiscoveryDocument")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("IdentityServerApiResources", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiResources.ApiResourceClaim", b =>
                {
                    b.Property<Guid>("ApiResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ApiResourceId", "Type");

                    b.ToTable("IdentityServerApiResourceClaims", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiResources.ApiResourceProperty", b =>
                {
                    b.Property<Guid>("ApiResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("ApiResourceId", "Key", "Value");

                    b.ToTable("IdentityServerApiResourceProperties", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiResources.ApiResourceScope", b =>
                {
                    b.Property<Guid>("ApiResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Scope")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ApiResourceId", "Scope");

                    b.ToTable("IdentityServerApiResourceScopes", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiResources.ApiResourceSecret", b =>
                {
                    b.Property<Guid>("ApiResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.HasKey("ApiResourceId", "Type", "Value");

                    b.ToTable("IdentityServerApiResourceSecrets", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiScopes.ApiScope", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Emphasize")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInDiscoveryDocument")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("IdentityServerApiScopes", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiScopes.ApiScopeClaim", b =>
                {
                    b.Property<Guid>("ApiScopeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ApiScopeId", "Type");

                    b.ToTable("IdentityServerApiScopeClaims", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiScopes.ApiScopeProperty", b =>
                {
                    b.Property<Guid>("ApiScopeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("ApiScopeId", "Key", "Value");

                    b.ToTable("IdentityServerApiScopeProperties", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AbsoluteRefreshTokenLifetime")
                        .HasColumnType("int");

                    b.Property<int>("AccessTokenLifetime")
                        .HasColumnType("int");

                    b.Property<int>("AccessTokenType")
                        .HasColumnType("int");

                    b.Property<bool>("AllowAccessTokensViaBrowser")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowOfflineAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPlainTextPkce")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowRememberConsent")
                        .HasColumnType("bit");

                    b.Property<string>("AllowedIdentityTokenSigningAlgorithms")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AlwaysIncludeUserClaimsInIdToken")
                        .HasColumnType("bit");

                    b.Property<bool>("AlwaysSendClientClaims")
                        .HasColumnType("bit");

                    b.Property<int>("AuthorizationCodeLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("BackChannelLogoutSessionRequired")
                        .HasColumnType("bit");

                    b.Property<string>("BackChannelLogoutUri")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ClientClaimsPrefix")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientUri")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<int?>("ConsentLifetime")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("DeviceCodeLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("EnableLocalLogin")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("FrontChannelLogoutSessionRequired")
                        .HasColumnType("bit");

                    b.Property<string>("FrontChannelLogoutUri")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("IdentityTokenLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("IncludeJwtId")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LogoUri")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("PairWiseSubjectSalt")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProtocolType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RefreshTokenExpiration")
                        .HasColumnType("int");

                    b.Property<int>("RefreshTokenUsage")
                        .HasColumnType("int");

                    b.Property<bool>("RequireClientSecret")
                        .HasColumnType("bit");

                    b.Property<bool>("RequireConsent")
                        .HasColumnType("bit");

                    b.Property<bool>("RequirePkce")
                        .HasColumnType("bit");

                    b.Property<bool>("RequireRequestObject")
                        .HasColumnType("bit");

                    b.Property<int>("SlidingRefreshTokenLifetime")
                        .HasColumnType("int");

                    b.Property<bool>("UpdateAccessTokenClaimsOnRefresh")
                        .HasColumnType("bit");

                    b.Property<string>("UserCodeType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserSsoLifetime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("IdentityServerClients", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientClaim", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ClientId", "Type", "Value");

                    b.ToTable("IdentityServerClientClaims", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientCorsOrigin", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Origin")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ClientId", "Origin");

                    b.ToTable("IdentityServerClientCorsOrigins", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientGrantType", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GrantType")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ClientId", "GrantType");

                    b.ToTable("IdentityServerClientGrantTypes", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientIdPRestriction", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Provider")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ClientId", "Provider");

                    b.ToTable("IdentityServerClientIdPRestrictions", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientPostLogoutRedirectUri", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PostLogoutRedirectUri")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("ClientId", "PostLogoutRedirectUri");

                    b.ToTable("IdentityServerClientPostLogoutRedirectUris", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientProperty", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("ClientId", "Key", "Value");

                    b.ToTable("IdentityServerClientProperties", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientRedirectUri", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RedirectUri")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("ClientId", "RedirectUri");

                    b.ToTable("IdentityServerClientRedirectUris", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientScope", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Scope")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ClientId", "Scope");

                    b.ToTable("IdentityServerClientScopes", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientSecret", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.HasKey("ClientId", "Type", "Value");

                    b.ToTable("IdentityServerClientSecrets", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Devices.DeviceFlowCodes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.HasIndex("UserCode");

                    b.ToTable("IdentityServerDeviceFlowCodes", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Grants.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("IdentityServerPersistedGrants", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.IdentityResources.IdentityResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Emphasize")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInDiscoveryDocument")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("IdentityServerIdentityResources", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.IdentityResources.IdentityResourceClaim", b =>
                {
                    b.Property<Guid>("IdentityResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdentityResourceId", "Type");

                    b.ToTable("IdentityServerIdentityResourceClaims", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.IdentityResources.IdentityResourceProperty", b =>
                {
                    b.Property<Guid>("IdentityResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("IdentityResourceId", "Key", "Value");

                    b.ToTable("IdentityServerIdentityResourceProperties", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.PermissionManagement.PermissionGrant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name", "ProviderName", "ProviderKey")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL");

                    b.ToTable("AbpPermissionGrants", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.SettingManagement.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProviderName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "ProviderName", "ProviderKey")
                        .IsUnique()
                        .HasFilter("[ProviderName] IS NOT NULL AND [ProviderKey] IS NOT NULL");

                    b.ToTable("AbpSettings", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("AbpTenants", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.TenantConnectionString", b =>
                {
                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("TenantId", "Name");

                    b.ToTable("AbpTenantConnectionStrings", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Users.UserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserData");
                });

            modelBuilder.Entity("Dolphin.Freight.Accounting.Inv.Inv", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Dolphin.Freight.AccountingSettings.GlCodes.GlCode", "GlCode")
                        .WithMany()
                        .HasForeignKey("GlCodeId");

                    b.Navigation("Customer");

                    b.Navigation("GlCode");
                });

            modelBuilder.Entity("Dolphin.Freight.Accounting.InvoiceBills.InvoiceBill", b =>
                {
                    b.HasOne("Dolphin.Freight.Accounting.Invoices.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Dolphin.Freight.Accounting.Invoices.Invoice", b =>
                {
                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "CcyRateSource")
                        .WithMany()
                        .HasForeignKey("CcyRateSourceId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Dolphin.Freight.AccountingSettings.GlCodes.GlCode", "GlCode")
                        .WithMany()
                        .HasForeignKey("GlCodeId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "Incoterms")
                        .WithMany()
                        .HasForeignKey("IncotermsId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "InvoiceCompany")
                        .WithMany()
                        .HasForeignKey("InvoiceCompanyId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ShipTo")
                        .WithMany()
                        .HasForeignKey("ShipToId");

                    b.Navigation("CcyRateSource");

                    b.Navigation("Customer");

                    b.Navigation("GlCode");

                    b.Navigation("Incoterms");

                    b.Navigation("InvoiceCompany");

                    b.Navigation("ShipTo");
                });

            modelBuilder.Entity("Dolphin.Freight.Accounting.Payment.CustomerPayment", b =>
                {
                    b.HasOne("Dolphin.Freight.Settings.Substations.Substation", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ReceivablesSourcesName")
                        .WithMany()
                        .HasForeignKey("ReceivablesSources");

                    b.Navigation("Office");

                    b.Navigation("ReceivablesSourcesName");
                });

            modelBuilder.Entity("Dolphin.Freight.Accounting.Payment.Payment", b =>
                {
                    b.HasOne("Dolphin.Freight.Settings.Substations.Substation", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "PaidToName")
                        .WithMany()
                        .HasForeignKey("PaidTo");

                    b.Navigation("Office");

                    b.Navigation("PaidToName");
                });

            modelBuilder.Entity("Dolphin.Freight.AccountingSettings.BillingCodes.BillingCode", b =>
                {
                    b.HasOne("Dolphin.Freight.AccountingSettings.GlCodes.GlCode", "Cost")
                        .WithMany()
                        .HasForeignKey("CostId");

                    b.HasOne("Dolphin.Freight.AccountingSettings.GlCodes.GlCode", "Credit")
                        .WithMany()
                        .HasForeignKey("CreditId");

                    b.HasOne("Dolphin.Freight.AccountingSettings.GlCodes.GlCode", "Deit")
                        .WithMany()
                        .HasForeignKey("DeitId");

                    b.HasOne("Dolphin.Freight.AccountingSettings.GlCodes.GlCode", "Revenue")
                        .WithMany()
                        .HasForeignKey("RevenueId");

                    b.Navigation("Cost");

                    b.Navigation("Credit");

                    b.Navigation("Deit");

                    b.Navigation("Revenue");
                });

            modelBuilder.Entity("Dolphin.Freight.AccountingSettings.CurrencyTables.CurrencyTable", b =>
                {
                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "Ccy1")
                        .WithMany()
                        .HasForeignKey("Ccy1Id");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "Ccy2")
                        .WithMany()
                        .HasForeignKey("Ccy2Id");

                    b.Navigation("Ccy1");

                    b.Navigation("Ccy2");
                });

            modelBuilder.Entity("Dolphin.Freight.AccountingSettings.GlCodes.GlCode", b =>
                {
                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "GlGroup")
                        .WithMany()
                        .HasForeignKey("GlGroupId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "GlType")
                        .WithMany()
                        .HasForeignKey("GlTypeId");

                    b.Navigation("GlGroup");

                    b.Navigation("GlType");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.AirExports.AirExportBooking", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ActualShipper")
                        .WithMany()
                        .HasForeignKey("ActualShipperId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "BillTo")
                        .WithMany()
                        .HasForeignKey("BillToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CargoPickup")
                        .WithMany()
                        .HasForeignKey("CargoPickupId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "CargoType")
                        .WithMany()
                        .HasForeignKey("CargoTypeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Carrier")
                        .WithMany()
                        .HasForeignKey("CarrierId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CoLoader")
                        .WithMany()
                        .HasForeignKey("CoLoaderId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Consignee")
                        .WithMany()
                        .HasForeignKey("ConsigneeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "DeliveryTo")
                        .WithMany()
                        .HasForeignKey("DeliveryToId");

                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.Airport", "Depature")
                        .WithMany()
                        .HasForeignKey("DepatureId");

                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.Airport", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ForwardingAgent")
                        .WithMany()
                        .HasForeignKey("ForwardingAgentId");

                    b.HasOne("Volo.Abp.Users.UserData", "Holder")
                        .WithMany()
                        .HasForeignKey("HolderId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Notify")
                        .WithMany()
                        .HasForeignKey("NotifyId");

                    b.HasOne("Dolphin.Freight.Settings.Substations.Substation", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId");

                    b.HasOne("Dolphin.Freight.Settings.PackageUnits.PackageUnit", "MawbPackageUnit")
                        .WithMany()
                        .HasForeignKey("PackageId");

                    b.HasOne("Volo.Abp.Users.UserData", "SalesPerson")
                        .WithMany()
                        .HasForeignKey("SaleId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Truckerr")
                        .WithMany()
                        .HasForeignKey("TruckerId");

                    b.Navigation("ActualShipper");

                    b.Navigation("Agent");

                    b.Navigation("BillTo");

                    b.Navigation("CargoPickup");

                    b.Navigation("CargoType");

                    b.Navigation("Carrier");

                    b.Navigation("CoLoader");

                    b.Navigation("Consignee");

                    b.Navigation("Customer");

                    b.Navigation("DeliveryTo");

                    b.Navigation("Depature");

                    b.Navigation("Destination");

                    b.Navigation("ForwardingAgent");

                    b.Navigation("Holder");

                    b.Navigation("MawbPackageUnit");

                    b.Navigation("Notify");

                    b.Navigation("Office");

                    b.Navigation("SalesPerson");

                    b.Navigation("Shipper");

                    b.Navigation("Truckerr");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.AirExports.AirExportHawb", b =>
                {
                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.AirExportMawb", "Mawb")
                        .WithMany()
                        .HasForeignKey("MawbId");

                    b.HasOne("Volo.Abp.Users.UserData", "OP")
                        .WithMany()
                        .HasForeignKey("OPId");

                    b.HasOne("Volo.Abp.Users.UserData", "Sales")
                        .WithMany()
                        .HasForeignKey("SalesId");

                    b.Navigation("Mawb");

                    b.Navigation("OP");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.AirExports.AirExportMawb", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "AwbAcctCarrier")
                        .WithMany()
                        .HasForeignKey("AwbAcctCarrierId");

                    b.HasOne("Volo.Abp.Users.UserData", "AwbCancelledOp")
                        .WithMany()
                        .HasForeignKey("AwbCancelledOpId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "BusinessReferred")
                        .WithMany()
                        .HasForeignKey("BusinessReferredId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CoLoader")
                        .WithMany()
                        .HasForeignKey("CoLoaderId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Consignee")
                        .WithMany()
                        .HasForeignKey("ConsigneeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Delivery")
                        .WithMany()
                        .HasForeignKey("DeliveryId");

                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.Airport", "Depature")
                        .WithMany()
                        .HasForeignKey("DepatureId");

                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.Airport", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "IssuingCarrier")
                        .WithMany()
                        .HasForeignKey("IssuingCarrierId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MawbCarrier")
                        .WithMany()
                        .HasForeignKey("MawbCarrierId");

                    b.HasOne("Volo.Abp.Users.UserData", "MawbOperator")
                        .WithMany()
                        .HasForeignKey("MawbOperatorId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Notify")
                        .WithMany()
                        .HasForeignKey("NotifyId");

                    b.HasOne("Dolphin.Freight.Settings.Substations.Substation", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dolphin.Freight.Settings.PackageUnits.PackageUnit", "MawbPackageUnit")
                        .WithMany()
                        .HasForeignKey("PackageId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "RouteTrans1Carrier")
                        .WithMany()
                        .HasForeignKey("RouteTrans1CarrierId");

                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.Airport", "RouteTrans1")
                        .WithMany()
                        .HasForeignKey("RouteTrans1Id");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "RouteTrans2Carrier")
                        .WithMany()
                        .HasForeignKey("RouteTrans2CarrierId");

                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.Airport", "RouteTrans2")
                        .WithMany()
                        .HasForeignKey("RouteTrans2Id");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "RouteTrans3Carrier")
                        .WithMany()
                        .HasForeignKey("RouteTrans3CarrierId");

                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.Airport", "RouteTrans3")
                        .WithMany()
                        .HasForeignKey("RouteTrans3Id");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.Navigation("AwbAcctCarrier");

                    b.Navigation("AwbCancelledOp");

                    b.Navigation("BusinessReferred");

                    b.Navigation("CoLoader");

                    b.Navigation("Consignee");

                    b.Navigation("Delivery");

                    b.Navigation("Depature");

                    b.Navigation("Destination");

                    b.Navigation("IssuingCarrier");

                    b.Navigation("MawbCarrier");

                    b.Navigation("MawbOperator");

                    b.Navigation("MawbPackageUnit");

                    b.Navigation("Notify");

                    b.Navigation("Office");

                    b.Navigation("RouteTrans1");

                    b.Navigation("RouteTrans1Carrier");

                    b.Navigation("RouteTrans2");

                    b.Navigation("RouteTrans2Carrier");

                    b.Navigation("RouteTrans3");

                    b.Navigation("RouteTrans3Carrier");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.AirImports.AirImportHawb", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Consignee")
                        .WithMany()
                        .HasForeignKey("ConsigneeId");

                    b.HasOne("Volo.Abp.Users.UserData", "OP")
                        .WithMany()
                        .HasForeignKey("OPId");

                    b.HasOne("Volo.Abp.Users.UserData", "Sales")
                        .WithMany()
                        .HasForeignKey("SalesId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.Navigation("Consignee");

                    b.Navigation("OP");

                    b.Navigation("Sales");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.AirImports.AirImportMawb", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "AwbAcctCarrier")
                        .WithMany()
                        .HasForeignKey("AwbAcctCarrierId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "BillTo")
                        .WithMany()
                        .HasForeignKey("BillToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "BusinessReferred")
                        .WithMany()
                        .HasForeignKey("BusinessReferredId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Carrier")
                        .WithMany()
                        .HasForeignKey("CarrierId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CoLoader")
                        .WithMany()
                        .HasForeignKey("CoLoaderId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Consignee")
                        .WithMany()
                        .HasForeignKey("ConsigneeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.Airport", "Depature")
                        .WithMany()
                        .HasForeignKey("DepatureId");

                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.Airport", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "FreightLocation")
                        .WithMany()
                        .HasForeignKey("FreightLocationId");

                    b.HasOne("Dolphin.Freight.Settings.PackageUnits.PackageUnit", "MawbPackageUnit")
                        .WithMany()
                        .HasForeignKey("MawbPackageId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Notify")
                        .WithMany()
                        .HasForeignKey("NotifyId");

                    b.HasOne("Volo.Abp.Users.UserData", "OP")
                        .WithMany()
                        .HasForeignKey("OPId");

                    b.HasOne("Dolphin.Freight.Settings.Substations.Substation", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "OverseaAgent")
                        .WithMany()
                        .HasForeignKey("OverseaAgentId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "RouteTrans1Carrier")
                        .WithMany()
                        .HasForeignKey("RouteTrans1CarrierId");

                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.Airport", "RouteTrans1")
                        .WithMany()
                        .HasForeignKey("RouteTrans1Id");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "RouteTrans2Carrier")
                        .WithMany()
                        .HasForeignKey("RouteTrans2CarrierId");

                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.Airport", "RouteTrans2")
                        .WithMany()
                        .HasForeignKey("RouteTrans2Id");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "RouteTrans3Carrier")
                        .WithMany()
                        .HasForeignKey("RouteTrans3CarrierId");

                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.Airport", "RouteTrans3")
                        .WithMany()
                        .HasForeignKey("RouteTrans3Id");

                    b.HasOne("Volo.Abp.Users.UserData", "Sales")
                        .WithMany()
                        .HasForeignKey("SalesId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.Navigation("AwbAcctCarrier");

                    b.Navigation("BillTo");

                    b.Navigation("BusinessReferred");

                    b.Navigation("Carrier");

                    b.Navigation("CoLoader");

                    b.Navigation("Consignee");

                    b.Navigation("Customer");

                    b.Navigation("Depature");

                    b.Navigation("Destination");

                    b.Navigation("FreightLocation");

                    b.Navigation("MawbPackageUnit");

                    b.Navigation("Notify");

                    b.Navigation("OP");

                    b.Navigation("Office");

                    b.Navigation("OverseaAgent");

                    b.Navigation("RouteTrans1");

                    b.Navigation("RouteTrans1Carrier");

                    b.Navigation("RouteTrans2");

                    b.Navigation("RouteTrans2Carrier");

                    b.Navigation("RouteTrans3");

                    b.Navigation("RouteTrans3Carrier");

                    b.Navigation("Sales");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.Common.CargoManifest", b =>
                {
                    b.HasOne("Dolphin.Freight.Settings.PackageUnits.PackageUnit", "PackageUnit")
                        .WithMany()
                        .HasForeignKey("PackageUnitId");

                    b.Navigation("PackageUnit");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.Common.WarehouseReceipt", b =>
                {
                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "DimensionUnit")
                        .WithMany()
                        .HasForeignKey("DimensionUnitId");

                    b.HasOne("Dolphin.Freight.Settings.PackageUnits.PackageUnit", "PackageUnit")
                        .WithMany()
                        .HasForeignKey("PackageUnitId");

                    b.Navigation("DimensionUnit");

                    b.Navigation("PackageUnit");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.Containers.Container", b =>
                {
                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "VentilationSize")
                        .WithMany()
                        .HasForeignKey("VentilationId");

                    b.Navigation("VentilationSize");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.OceanExports.ExportBooking", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "BillTo")
                        .WithMany()
                        .HasForeignKey("BillToId");

                    b.HasOne("Volo.Abp.Users.UserData", "CancelBy")
                        .WithMany()
                        .HasForeignKey("CancelById");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CargoPickup")
                        .WithMany()
                        .HasForeignKey("CargoPickupId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "CargoType")
                        .WithMany()
                        .HasForeignKey("CargoTypeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Carrier")
                        .WithMany()
                        .HasForeignKey("CarrierId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CoLoader")
                        .WithMany()
                        .HasForeignKey("CoLoaderId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Consignee")
                        .WithMany()
                        .HasForeignKey("ConsigneeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Del")
                        .WithMany()
                        .HasForeignKey("DelId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "DeliveryTo")
                        .WithMany()
                        .HasForeignKey("DeliveryToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "EmptyPickup")
                        .WithMany()
                        .HasForeignKey("EmptyPickupId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Fba")
                        .WithMany()
                        .HasForeignKey("FbaId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Fdest")
                        .WithMany()
                        .HasForeignKey("FdestId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ForwardingAgent")
                        .WithMany()
                        .HasForeignKey("ForwardingAgentId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "FreightTermForBuyer")
                        .WithMany()
                        .HasForeignKey("FreightTermForBuyerId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "FreightTermForSalerr")
                        .WithMany()
                        .HasForeignKey("FreightTermForSalerId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "HblAgent")
                        .WithMany()
                        .HasForeignKey("HblAgentId");

                    b.HasOne("Volo.Abp.Users.UserData", "Holder")
                        .WithMany()
                        .HasForeignKey("HolderId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "Incoterms")
                        .WithMany()
                        .HasForeignKey("IncotermsId");

                    b.HasOne("Volo.Abp.Users.UserData", "Salesperson")
                        .WithMany()
                        .HasForeignKey("MblSaleId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Notify")
                        .WithMany()
                        .HasForeignKey("NotifyId");

                    b.HasOne("Dolphin.Freight.Settings.Substations.Substation", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Pod")
                        .WithMany()
                        .HasForeignKey("PodId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Pol")
                        .WithMany()
                        .HasForeignKey("PolId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Por")
                        .WithMany()
                        .HasForeignKey("PorId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ReferralBy")
                        .WithMany()
                        .HasForeignKey("ReferralById");

                    b.HasOne("Volo.Abp.Users.UserData", "ReleaseBy")
                        .WithMany()
                        .HasForeignKey("ReleaseById");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "SvcTermFrom")
                        .WithMany()
                        .HasForeignKey("SvcTermFromId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "SvcTermTo")
                        .WithMany()
                        .HasForeignKey("SvcTermToId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "TransPort1")
                        .WithMany()
                        .HasForeignKey("TransPort1Id");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Truckerr")
                        .WithMany()
                        .HasForeignKey("TruckerId");

                    b.HasOne("Dolphin.Freight.ImportExport.OceanExports.VesselSchedule", "VesselSchedule")
                        .WithMany()
                        .HasForeignKey("VesselScheduleId");

                    b.Navigation("BillTo");

                    b.Navigation("CancelBy");

                    b.Navigation("CargoPickup");

                    b.Navigation("CargoType");

                    b.Navigation("Carrier");

                    b.Navigation("CoLoader");

                    b.Navigation("Consignee");

                    b.Navigation("Customer");

                    b.Navigation("Del");

                    b.Navigation("DeliveryTo");

                    b.Navigation("EmptyPickup");

                    b.Navigation("Fba");

                    b.Navigation("Fdest");

                    b.Navigation("ForwardingAgent");

                    b.Navigation("FreightTermForBuyer");

                    b.Navigation("FreightTermForSalerr");

                    b.Navigation("HblAgent");

                    b.Navigation("Holder");

                    b.Navigation("Incoterms");

                    b.Navigation("Notify");

                    b.Navigation("Office");

                    b.Navigation("Pod");

                    b.Navigation("Pol");

                    b.Navigation("Por");

                    b.Navigation("ReferralBy");

                    b.Navigation("ReleaseBy");

                    b.Navigation("Salesperson");

                    b.Navigation("ShipMode");

                    b.Navigation("Shipper");

                    b.Navigation("ShippingAgent");

                    b.Navigation("SvcTermFrom");

                    b.Navigation("SvcTermTo");

                    b.Navigation("TransPort1");

                    b.Navigation("Truckerr");

                    b.Navigation("VesselSchedule");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.OceanExports.OceanExportHbl", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId");

                    b.HasOne("Volo.Abp.Users.UserData", "CancelBy")
                        .WithMany()
                        .HasForeignKey("CancelById");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "CardColor")
                        .WithMany()
                        .HasForeignKey("CardColorId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CargoPickup")
                        .WithMany()
                        .HasForeignKey("CargoPickupId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "CargoType")
                        .WithMany()
                        .HasForeignKey("CargoTypeId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "ColorRemark")
                        .WithMany()
                        .HasForeignKey("ColorRemarkId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CustomsBroker")
                        .WithMany()
                        .HasForeignKey("CustomsBrokerId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CyCfsLocation")
                        .WithMany()
                        .HasForeignKey("CyCfsLocationId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Del")
                        .WithMany()
                        .HasForeignKey("DelId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "DeliveryTo")
                        .WithMany()
                        .HasForeignKey("DeliveryToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "EmptyPickup")
                        .WithMany()
                        .HasForeignKey("EmptyPickupId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "FbaFct")
                        .WithMany()
                        .HasForeignKey("FbaFcId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Fdest")
                        .WithMany()
                        .HasForeignKey("FdestId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ForwardingAgent")
                        .WithMany()
                        .HasForeignKey("ForwardingAgentId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "FreightTermForBuyer")
                        .WithMany()
                        .HasForeignKey("FreightTermForBuyerId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "FreightTermForSalerr")
                        .WithMany()
                        .HasForeignKey("FreightTermForSalerId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "HblBillTo")
                        .WithMany()
                        .HasForeignKey("HblBillToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "HblConsignee")
                        .WithMany()
                        .HasForeignKey("HblConsigneeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "HblCustomer")
                        .WithMany()
                        .HasForeignKey("HblCustomerId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "HblNotify")
                        .WithMany()
                        .HasForeignKey("HblNotifyId");

                    b.HasOne("Volo.Abp.Users.UserData", "HblOperator")
                        .WithMany()
                        .HasForeignKey("HblOperatorId");

                    b.HasOne("Volo.Abp.Users.UserData", "HblSale")
                        .WithMany()
                        .HasForeignKey("HblSaleId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "HblShipper")
                        .WithMany()
                        .HasForeignKey("HblShipperId");

                    b.HasOne("Volo.Abp.Users.UserData", "Holder")
                        .WithMany()
                        .HasForeignKey("HolderId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "Incoterms")
                        .WithMany()
                        .HasForeignKey("IncotermsId");

                    b.HasOne("Dolphin.Freight.ImportExport.OceanExports.OceanExportMbl", "Mbl")
                        .WithMany()
                        .HasForeignKey("MblId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblReferralBy")
                        .WithMany()
                        .HasForeignKey("MblReferralById");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "MblSalesType")
                        .WithMany()
                        .HasForeignKey("MblSalesTypeId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Pod")
                        .WithMany()
                        .HasForeignKey("PodId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Pol")
                        .WithMany()
                        .HasForeignKey("PolId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Por")
                        .WithMany()
                        .HasForeignKey("PorId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "RailwayCode")
                        .WithMany()
                        .HasForeignKey("RailwayCodeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ReceivingAgent")
                        .WithMany()
                        .HasForeignKey("ReceivingAgentId");

                    b.HasOne("Volo.Abp.Users.UserData", "ReleaseBy")
                        .WithMany()
                        .HasForeignKey("ReleaseById");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "ShipType")
                        .WithMany()
                        .HasForeignKey("ShipTypeId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "SvcTermFrom")
                        .WithMany()
                        .HasForeignKey("SvcTermFromId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "SvcTermTo")
                        .WithMany()
                        .HasForeignKey("SvcTermToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Truckerr")
                        .WithMany()
                        .HasForeignKey("TruckerId");

                    b.Navigation("Agent");

                    b.Navigation("CancelBy");

                    b.Navigation("CardColor");

                    b.Navigation("CargoPickup");

                    b.Navigation("CargoType");

                    b.Navigation("ColorRemark");

                    b.Navigation("CustomsBroker");

                    b.Navigation("CyCfsLocation");

                    b.Navigation("Del");

                    b.Navigation("DeliveryTo");

                    b.Navigation("EmptyPickup");

                    b.Navigation("FbaFct");

                    b.Navigation("Fdest");

                    b.Navigation("ForwardingAgent");

                    b.Navigation("FreightTermForBuyer");

                    b.Navigation("FreightTermForSalerr");

                    b.Navigation("HblBillTo");

                    b.Navigation("HblConsignee");

                    b.Navigation("HblCustomer");

                    b.Navigation("HblNotify");

                    b.Navigation("HblOperator");

                    b.Navigation("HblSale");

                    b.Navigation("HblShipper");

                    b.Navigation("Holder");

                    b.Navigation("Incoterms");

                    b.Navigation("Mbl");

                    b.Navigation("MblReferralBy");

                    b.Navigation("MblSalesType");

                    b.Navigation("Pod");

                    b.Navigation("Pol");

                    b.Navigation("Por");

                    b.Navigation("RailwayCode");

                    b.Navigation("ReceivingAgent");

                    b.Navigation("ReleaseBy");

                    b.Navigation("ShipMode");

                    b.Navigation("ShipType");

                    b.Navigation("SvcTermFrom");

                    b.Navigation("SvcTermTo");

                    b.Navigation("Truckerr");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.OceanExports.OceanExportMbl", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "BlAcctCarrier")
                        .WithMany()
                        .HasForeignKey("BlAcctCarrierId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "BlType")
                        .WithMany()
                        .HasForeignKey("BlTypeId");

                    b.HasOne("Volo.Abp.Users.UserData", "CancelBy")
                        .WithMany()
                        .HasForeignKey("CancelById");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CareOf")
                        .WithMany()
                        .HasForeignKey("CareOfId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "CargoType")
                        .WithMany()
                        .HasForeignKey("CargoTypeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CoLoader")
                        .WithMany()
                        .HasForeignKey("CoLoaderId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "ColorRemark")
                        .WithMany()
                        .HasForeignKey("ColorRemarkId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Del")
                        .WithMany()
                        .HasForeignKey("DelId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "DeliveryTo")
                        .WithMany()
                        .HasForeignKey("DeliveryToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "EmptyPickup")
                        .WithMany()
                        .HasForeignKey("EmptyPickupId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Fdest")
                        .WithMany()
                        .HasForeignKey("FdestId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ForwardingAgent")
                        .WithMany()
                        .HasForeignKey("ForwardingAgentId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "FreightTerm")
                        .WithMany()
                        .HasForeignKey("FreightTermId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblBillTo")
                        .WithMany()
                        .HasForeignKey("MblBillToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblCarrier")
                        .WithMany()
                        .HasForeignKey("MblCarrierId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblConsignee")
                        .WithMany()
                        .HasForeignKey("MblConsigneeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblCustomer")
                        .WithMany()
                        .HasForeignKey("MblCustomerId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblNotify")
                        .WithMany()
                        .HasForeignKey("MblNotifyId");

                    b.HasOne("Volo.Abp.Users.UserData", "MblOperator")
                        .WithMany()
                        .HasForeignKey("MblOperatorId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblOverseaAgent")
                        .WithMany()
                        .HasForeignKey("MblOverseaAgentId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblReferralBy")
                        .WithMany()
                        .HasForeignKey("MblReferralById");

                    b.HasOne("Volo.Abp.Users.UserData", "MblSale")
                        .WithMany()
                        .HasForeignKey("MblSaleId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "MblSalesType")
                        .WithMany()
                        .HasForeignKey("MblSalesTypeId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "OblType")
                        .WithMany()
                        .HasForeignKey("OblTypeId");

                    b.HasOne("Dolphin.Freight.Settings.Substations.Substation", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "PackageCategory")
                        .WithMany()
                        .HasForeignKey("PackageCategoryId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "PackageMeasure")
                        .WithMany()
                        .HasForeignKey("PackageMeasureId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "PackageWeight")
                        .WithMany()
                        .HasForeignKey("PackageWeightId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Pod")
                        .WithMany()
                        .HasForeignKey("PodId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Pol")
                        .WithMany()
                        .HasForeignKey("PolId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Por")
                        .WithMany()
                        .HasForeignKey("PorId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "PreCarriageVesselName")
                        .WithMany()
                        .HasForeignKey("PreCarriageVesselNameId");

                    b.HasOne("Volo.Abp.Users.UserData", "ReleaseBy")
                        .WithMany()
                        .HasForeignKey("ReleaseById");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "SvcTermFrom")
                        .WithMany()
                        .HasForeignKey("SvcTermFromId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "SvcTermTo")
                        .WithMany()
                        .HasForeignKey("SvcTermToId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "TransPort1")
                        .WithMany()
                        .HasForeignKey("TransPort1Id");

                    b.Navigation("BlAcctCarrier");

                    b.Navigation("BlType");

                    b.Navigation("CancelBy");

                    b.Navigation("CareOf");

                    b.Navigation("CargoType");

                    b.Navigation("CoLoader");

                    b.Navigation("ColorRemark");

                    b.Navigation("Del");

                    b.Navigation("DeliveryTo");

                    b.Navigation("EmptyPickup");

                    b.Navigation("Fdest");

                    b.Navigation("ForwardingAgent");

                    b.Navigation("FreightTerm");

                    b.Navigation("MblBillTo");

                    b.Navigation("MblCarrier");

                    b.Navigation("MblConsignee");

                    b.Navigation("MblCustomer");

                    b.Navigation("MblNotify");

                    b.Navigation("MblOperator");

                    b.Navigation("MblOverseaAgent");

                    b.Navigation("MblReferralBy");

                    b.Navigation("MblSale");

                    b.Navigation("MblSalesType");

                    b.Navigation("OblType");

                    b.Navigation("Office");

                    b.Navigation("PackageCategory");

                    b.Navigation("PackageMeasure");

                    b.Navigation("PackageWeight");

                    b.Navigation("Pod");

                    b.Navigation("Pol");

                    b.Navigation("Por");

                    b.Navigation("PreCarriageVesselName");

                    b.Navigation("ReleaseBy");

                    b.Navigation("ShipMode");

                    b.Navigation("ShippingAgent");

                    b.Navigation("SvcTermFrom");

                    b.Navigation("SvcTermTo");

                    b.Navigation("TransPort1");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.OceanExports.VesselSchedule", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "BlAcctCarrier")
                        .WithMany()
                        .HasForeignKey("BlAcctCarrierId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "BlType")
                        .WithMany()
                        .HasForeignKey("BlTypeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CoLoader")
                        .WithMany()
                        .HasForeignKey("CoLoaderId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Del")
                        .WithMany()
                        .HasForeignKey("DelId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "DeliveryTo")
                        .WithMany()
                        .HasForeignKey("DeliveryToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "EmptyPickup")
                        .WithMany()
                        .HasForeignKey("EmptyPickupId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Fdest")
                        .WithMany()
                        .HasForeignKey("FdestId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ForwardingAgent")
                        .WithMany()
                        .HasForeignKey("ForwardingAgentId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "FreightTerm")
                        .WithMany()
                        .HasForeignKey("FreightTermId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblCarrier")
                        .WithMany()
                        .HasForeignKey("MblCarrierId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblNotify")
                        .WithMany()
                        .HasForeignKey("MblNotifyId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblOverseaAgent")
                        .WithMany()
                        .HasForeignKey("MblOverseaAgentId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "OblType")
                        .WithMany()
                        .HasForeignKey("OblTypeId");

                    b.HasOne("Dolphin.Freight.Settings.Substations.Substation", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Pod")
                        .WithMany()
                        .HasForeignKey("PodId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Pol")
                        .WithMany()
                        .HasForeignKey("PolId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Por")
                        .WithMany()
                        .HasForeignKey("PorId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "SvcTermFrom")
                        .WithMany()
                        .HasForeignKey("SvcTermFromId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "SvcTermTo")
                        .WithMany()
                        .HasForeignKey("SvcTermToId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "TransPort1")
                        .WithMany()
                        .HasForeignKey("TransPort1Id");

                    b.Navigation("BlAcctCarrier");

                    b.Navigation("BlType");

                    b.Navigation("CoLoader");

                    b.Navigation("Del");

                    b.Navigation("DeliveryTo");

                    b.Navigation("EmptyPickup");

                    b.Navigation("Fdest");

                    b.Navigation("ForwardingAgent");

                    b.Navigation("FreightTerm");

                    b.Navigation("MblCarrier");

                    b.Navigation("MblNotify");

                    b.Navigation("MblOverseaAgent");

                    b.Navigation("OblType");

                    b.Navigation("Office");

                    b.Navigation("Pod");

                    b.Navigation("Pol");

                    b.Navigation("Por");

                    b.Navigation("ShipMode");

                    b.Navigation("ShippingAgent");

                    b.Navigation("SvcTermFrom");

                    b.Navigation("SvcTermTo");

                    b.Navigation("TransPort1");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.OceanImports.OceanImportHbl", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "BusinessReferrer")
                        .WithMany()
                        .HasForeignKey("BusinessReferrerId");

                    b.HasOne("Volo.Abp.Users.UserData", "CancelBy")
                        .WithMany()
                        .HasForeignKey("CancelById");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "CardColor")
                        .WithMany()
                        .HasForeignKey("CardColorId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CargoPickup")
                        .WithMany()
                        .HasForeignKey("CargoPickupId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "CargoType")
                        .WithMany()
                        .HasForeignKey("CargoTypeId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "ColorRemark")
                        .WithMany()
                        .HasForeignKey("ColorRemarkId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CustomsBroker")
                        .WithMany()
                        .HasForeignKey("CustomsBrokerId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CyCfsLocation")
                        .WithMany()
                        .HasForeignKey("CyCfsLocationId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Del")
                        .WithMany()
                        .HasForeignKey("DelId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "DeliveryTo")
                        .WithMany()
                        .HasForeignKey("DeliveryToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "EmptyPickup")
                        .WithMany()
                        .HasForeignKey("EmptyPickupId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "FbaFct")
                        .WithMany()
                        .HasForeignKey("FbaFcId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Fdest")
                        .WithMany()
                        .HasForeignKey("FdestId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ForwardingAgent")
                        .WithMany()
                        .HasForeignKey("ForwardingAgentId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "FreightTermForBuyer")
                        .WithMany()
                        .HasForeignKey("FreightTermForBuyerId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "FreightTermForSalerr")
                        .WithMany()
                        .HasForeignKey("FreightTermForSalerId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "HblBillTo")
                        .WithMany()
                        .HasForeignKey("HblBillToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "HblConsignee")
                        .WithMany()
                        .HasForeignKey("HblConsigneeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "HblCustomer")
                        .WithMany()
                        .HasForeignKey("HblCustomerId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "HblNotify")
                        .WithMany()
                        .HasForeignKey("HblNotifyId");

                    b.HasOne("Volo.Abp.Users.UserData", "HblOperator")
                        .WithMany()
                        .HasForeignKey("HblOperatorId");

                    b.HasOne("Volo.Abp.Users.UserData", "HblSale")
                        .WithMany()
                        .HasForeignKey("HblSaleId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "MblSalesType")
                        .WithMany()
                        .HasForeignKey("HblSalesTypeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "HblShipper")
                        .WithMany()
                        .HasForeignKey("HblShipperId");

                    b.HasOne("Volo.Abp.Users.UserData", "Holder")
                        .WithMany()
                        .HasForeignKey("HolderId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "Incoterms")
                        .WithMany()
                        .HasForeignKey("IncotermsId");

                    b.HasOne("Dolphin.Freight.ImportExport.OceanImports.OceanImportMbl", "Mbl")
                        .WithMany()
                        .HasForeignKey("MblId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblReferralBy")
                        .WithMany()
                        .HasForeignKey("MblReferralById");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Pod")
                        .WithMany()
                        .HasForeignKey("PodId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Pol")
                        .WithMany()
                        .HasForeignKey("PolId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Por")
                        .WithMany()
                        .HasForeignKey("PorId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ReceivingAgent")
                        .WithMany()
                        .HasForeignKey("ReceivingAgentId");

                    b.HasOne("Volo.Abp.Users.UserData", "ReleaseBy")
                        .WithMany()
                        .HasForeignKey("ReleaseById");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "ShipType")
                        .WithMany()
                        .HasForeignKey("ShipTypeId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "SvcTermFrom")
                        .WithMany()
                        .HasForeignKey("SvcTermFromId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "SvcTermTo")
                        .WithMany()
                        .HasForeignKey("SvcTermToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Truckerr")
                        .WithMany()
                        .HasForeignKey("TruckerId");

                    b.Navigation("Agent");

                    b.Navigation("BusinessReferrer");

                    b.Navigation("CancelBy");

                    b.Navigation("CardColor");

                    b.Navigation("CargoPickup");

                    b.Navigation("CargoType");

                    b.Navigation("ColorRemark");

                    b.Navigation("CustomsBroker");

                    b.Navigation("CyCfsLocation");

                    b.Navigation("Del");

                    b.Navigation("DeliveryTo");

                    b.Navigation("EmptyPickup");

                    b.Navigation("FbaFct");

                    b.Navigation("Fdest");

                    b.Navigation("ForwardingAgent");

                    b.Navigation("FreightTermForBuyer");

                    b.Navigation("FreightTermForSalerr");

                    b.Navigation("HblBillTo");

                    b.Navigation("HblConsignee");

                    b.Navigation("HblCustomer");

                    b.Navigation("HblNotify");

                    b.Navigation("HblOperator");

                    b.Navigation("HblSale");

                    b.Navigation("HblShipper");

                    b.Navigation("Holder");

                    b.Navigation("Incoterms");

                    b.Navigation("Mbl");

                    b.Navigation("MblReferralBy");

                    b.Navigation("MblSalesType");

                    b.Navigation("Pod");

                    b.Navigation("Pol");

                    b.Navigation("Por");

                    b.Navigation("ReceivingAgent");

                    b.Navigation("ReleaseBy");

                    b.Navigation("ShipMode");

                    b.Navigation("ShipType");

                    b.Navigation("SvcTermFrom");

                    b.Navigation("SvcTermTo");

                    b.Navigation("Truckerr");
                });

            modelBuilder.Entity("Dolphin.Freight.ImportExport.OceanImports.OceanImportMbl", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "BlAcctCarrier")
                        .WithMany()
                        .HasForeignKey("BlAcctCarrierId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "BlType")
                        .WithMany()
                        .HasForeignKey("BlTypeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "BusinessReferrer")
                        .WithMany()
                        .HasForeignKey("BusinessReferrerId");

                    b.HasOne("Volo.Abp.Users.UserData", "CancelBy")
                        .WithMany()
                        .HasForeignKey("CancelById");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CareOf")
                        .WithMany()
                        .HasForeignKey("CareOfId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "CargoType")
                        .WithMany()
                        .HasForeignKey("CargoTypeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CfsLocation")
                        .WithMany()
                        .HasForeignKey("CfsLocationId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CoLoader")
                        .WithMany()
                        .HasForeignKey("CoLoaderId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "ColorRemark")
                        .WithMany()
                        .HasForeignKey("ColorRemarkId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "CyLocation")
                        .WithMany()
                        .HasForeignKey("CyLocationId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Del")
                        .WithMany()
                        .HasForeignKey("DelId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "DeliveryTo")
                        .WithMany()
                        .HasForeignKey("DeliveryToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "EmptyPickup")
                        .WithMany()
                        .HasForeignKey("EmptyPickupId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Fdest")
                        .WithMany()
                        .HasForeignKey("FdestId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ForwardingAgent")
                        .WithMany()
                        .HasForeignKey("ForwardingAgentId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "FreightTerm")
                        .WithMany()
                        .HasForeignKey("FreightTermId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblBillTo")
                        .WithMany()
                        .HasForeignKey("MblBillToId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblCarrier")
                        .WithMany()
                        .HasForeignKey("MblCarrierId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblConsignee")
                        .WithMany()
                        .HasForeignKey("MblConsigneeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblCustomer")
                        .WithMany()
                        .HasForeignKey("MblCustomerId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblNotify")
                        .WithMany()
                        .HasForeignKey("MblNotifyId");

                    b.HasOne("Volo.Abp.Users.UserData", "MblOperator")
                        .WithMany()
                        .HasForeignKey("MblOperatorId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblOverseaAgent")
                        .WithMany()
                        .HasForeignKey("MblOverseaAgentId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblReferralBy")
                        .WithMany()
                        .HasForeignKey("MblReferralById");

                    b.HasOne("Volo.Abp.Users.UserData", "MblSale")
                        .WithMany()
                        .HasForeignKey("MblSaleId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "MblSalesType")
                        .WithMany()
                        .HasForeignKey("MblSalesTypeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "MblShipper")
                        .WithMany()
                        .HasForeignKey("MblShipperId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "OblType")
                        .WithMany()
                        .HasForeignKey("OblTypeId");

                    b.HasOne("Dolphin.Freight.Settings.Substations.Substation", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "PackageCategory")
                        .WithMany()
                        .HasForeignKey("PackageCategoryId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "PackageMeasure")
                        .WithMany()
                        .HasForeignKey("PackageMeasureId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "PackageWeight")
                        .WithMany()
                        .HasForeignKey("PackageWeightId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Pod")
                        .WithMany()
                        .HasForeignKey("PodId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Pol")
                        .WithMany()
                        .HasForeignKey("PolId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "Por")
                        .WithMany()
                        .HasForeignKey("PorId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "PreCarriageVesselName")
                        .WithMany()
                        .HasForeignKey("PreCarriageVesselNameId");

                    b.HasOne("Volo.Abp.Users.UserData", "ReleaseBy")
                        .WithMany()
                        .HasForeignKey("ReleaseById");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ReturnLocation")
                        .WithMany()
                        .HasForeignKey("ReturnLocationId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "SvcTermFrom")
                        .WithMany()
                        .HasForeignKey("SvcTermFromId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "SvcTermTo")
                        .WithMany()
                        .HasForeignKey("SvcTermToId");

                    b.HasOne("Dolphin.Freight.Settings.Ports.Port", "TransPort1")
                        .WithMany()
                        .HasForeignKey("TransPort1Id");

                    b.Navigation("BlAcctCarrier");

                    b.Navigation("BlType");

                    b.Navigation("BusinessReferrer");

                    b.Navigation("CancelBy");

                    b.Navigation("CareOf");

                    b.Navigation("CargoType");

                    b.Navigation("CfsLocation");

                    b.Navigation("CoLoader");

                    b.Navigation("ColorRemark");

                    b.Navigation("CyLocation");

                    b.Navigation("Del");

                    b.Navigation("DeliveryTo");

                    b.Navigation("EmptyPickup");

                    b.Navigation("Fdest");

                    b.Navigation("ForwardingAgent");

                    b.Navigation("FreightTerm");

                    b.Navigation("MblBillTo");

                    b.Navigation("MblCarrier");

                    b.Navigation("MblConsignee");

                    b.Navigation("MblCustomer");

                    b.Navigation("MblNotify");

                    b.Navigation("MblOperator");

                    b.Navigation("MblOverseaAgent");

                    b.Navigation("MblReferralBy");

                    b.Navigation("MblSale");

                    b.Navigation("MblSalesType");

                    b.Navigation("MblShipper");

                    b.Navigation("OblType");

                    b.Navigation("Office");

                    b.Navigation("PackageCategory");

                    b.Navigation("PackageMeasure");

                    b.Navigation("PackageWeight");

                    b.Navigation("Pod");

                    b.Navigation("Pol");

                    b.Navigation("Por");

                    b.Navigation("PreCarriageVesselName");

                    b.Navigation("ReleaseBy");

                    b.Navigation("ReturnLocation");

                    b.Navigation("ShipMode");

                    b.Navigation("ShippingAgent");

                    b.Navigation("SvcTermFrom");

                    b.Navigation("SvcTermTo");

                    b.Navigation("TransPort1");
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.AwbNoRanges.AwbNoRange", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.ContainerSizes.ContainerSize", b =>
                {
                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "ContainerGroup")
                        .WithMany()
                        .HasForeignKey("ContainerGroupId");

                    b.Navigation("ContainerGroup");
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.Countries.Country", b =>
                {
                    b.HasOne("Dolphin.Freight.Settings.Currencies.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.Countries.CountryDisplayName", b =>
                {
                    b.HasOne("Dolphin.Freight.ImportExport.AirExports.Airport", "Airport")
                        .WithMany()
                        .HasForeignKey("AirportId");

                    b.HasOne("Dolphin.Freight.Settings.Countries.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dolphin.Freight.Settings.Offices.Office", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airport");

                    b.Navigation("Country");

                    b.Navigation("Office");
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.PackageUnits.PackageUnit", b =>
                {
                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "AmsNo")
                        .WithMany()
                        .HasForeignKey("AmsNoId");

                    b.HasOne("Dolphin.Freight.Settings.SysCodes.SysCode", "EManifest")
                        .WithMany()
                        .HasForeignKey("EManifestId");

                    b.Navigation("AmsNo");

                    b.Navigation("EManifest");
                });

            modelBuilder.Entity("Dolphin.Freight.Settings.Ports.Port", b =>
                {
                    b.HasOne("Dolphin.Freight.Settings.Countries.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.ContactPersonChild", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.ContactPerson", "ContactPerson")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactPerson");
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.DefaultFreight.DefaultFreightAP", b =>
                {
                    b.HasOne("Dolphin.Freight.AccountingSettings.BillingCodes.BillingCode", "BillingCode")
                        .WithMany()
                        .HasForeignKey("FreightCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "TradePartner")
                        .WithMany()
                        .HasForeignKey("TradePartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingCode");

                    b.Navigation("TradePartner");
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.DefaultFreight.DefaultFreightAR", b =>
                {
                    b.HasOne("Dolphin.Freight.AccountingSettings.BillingCodes.BillingCode", "BillingCode")
                        .WithMany()
                        .HasForeignKey("FreightCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "TradePartner")
                        .WithMany()
                        .HasForeignKey("TradePartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingCode");

                    b.Navigation("TradePartner");
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.DefaultFreight.DefaultFreightDC", b =>
                {
                    b.HasOne("Dolphin.Freight.AccountingSettings.BillingCodes.BillingCode", "BillingCode")
                        .WithMany()
                        .HasForeignKey("FreightCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "TradePartner")
                        .WithMany()
                        .HasForeignKey("TradePartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingCode");

                    b.Navigation("TradePartner");
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.TradeParties.TradeParty", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "TradePartner")
                        .WithMany()
                        .HasForeignKey("TradePartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TradePartner");
                });

            modelBuilder.Entity("Dolphin.Freight.TradePartners.TradePartnerMemo", b =>
                {
                    b.HasOne("Dolphin.Freight.TradePartners.TradePartner", "TradePartner")
                        .WithMany()
                        .HasForeignKey("TradePartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TradePartner");
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLogAction", b =>
                {
                    b.HasOne("Volo.Abp.AuditLogging.AuditLog", null)
                        .WithMany("Actions")
                        .HasForeignKey("AuditLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityChange", b =>
                {
                    b.HasOne("Volo.Abp.AuditLogging.AuditLog", null)
                        .WithMany("EntityChanges")
                        .HasForeignKey("AuditLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityPropertyChange", b =>
                {
                    b.HasOne("Volo.Abp.AuditLogging.EntityChange", null)
                        .WithMany("PropertyChanges")
                        .HasForeignKey("EntityChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRoleClaim", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityRole", null)
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserClaim", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserLogin", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserOrganizationUnit", b =>
                {
                    b.HasOne("Volo.Abp.Identity.OrganizationUnit", null)
                        .WithMany()
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("OrganizationUnits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserRole", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserToken", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnit", b =>
                {
                    b.HasOne("Volo.Abp.Identity.OrganizationUnit", null)
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnitRole", b =>
                {
                    b.HasOne("Volo.Abp.Identity.OrganizationUnit", null)
                        .WithMany("Roles")
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Volo.Abp.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiResources.ApiResourceClaim", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.ApiResources.ApiResource", null)
                        .WithMany("UserClaims")
                        .HasForeignKey("ApiResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiResources.ApiResourceProperty", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.ApiResources.ApiResource", null)
                        .WithMany("Properties")
                        .HasForeignKey("ApiResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiResources.ApiResourceScope", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.ApiResources.ApiResource", null)
                        .WithMany("Scopes")
                        .HasForeignKey("ApiResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiResources.ApiResourceSecret", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.ApiResources.ApiResource", null)
                        .WithMany("Secrets")
                        .HasForeignKey("ApiResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiScopes.ApiScopeClaim", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.ApiScopes.ApiScope", null)
                        .WithMany("UserClaims")
                        .HasForeignKey("ApiScopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiScopes.ApiScopeProperty", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.ApiScopes.ApiScope", null)
                        .WithMany("Properties")
                        .HasForeignKey("ApiScopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientClaim", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.Clients.Client", null)
                        .WithMany("Claims")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientCorsOrigin", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.Clients.Client", null)
                        .WithMany("AllowedCorsOrigins")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientGrantType", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.Clients.Client", null)
                        .WithMany("AllowedGrantTypes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientIdPRestriction", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.Clients.Client", null)
                        .WithMany("IdentityProviderRestrictions")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientPostLogoutRedirectUri", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.Clients.Client", null)
                        .WithMany("PostLogoutRedirectUris")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientProperty", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.Clients.Client", null)
                        .WithMany("Properties")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientRedirectUri", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.Clients.Client", null)
                        .WithMany("RedirectUris")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientScope", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.Clients.Client", null)
                        .WithMany("AllowedScopes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.ClientSecret", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.Clients.Client", null)
                        .WithMany("ClientSecrets")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.IdentityResources.IdentityResourceClaim", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.IdentityResources.IdentityResource", null)
                        .WithMany("UserClaims")
                        .HasForeignKey("IdentityResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.IdentityResources.IdentityResourceProperty", b =>
                {
                    b.HasOne("Volo.Abp.IdentityServer.IdentityResources.IdentityResource", null)
                        .WithMany("Properties")
                        .HasForeignKey("IdentityResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.TenantConnectionString", b =>
                {
                    b.HasOne("Volo.Abp.TenantManagement.Tenant", null)
                        .WithMany("ConnectionStrings")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLog", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("EntityChanges");
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityChange", b =>
                {
                    b.Navigation("PropertyChanges");
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRole", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUser", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("OrganizationUnits");

                    b.Navigation("Roles");

                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnit", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiResources.ApiResource", b =>
                {
                    b.Navigation("Properties");

                    b.Navigation("Scopes");

                    b.Navigation("Secrets");

                    b.Navigation("UserClaims");
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.ApiScopes.ApiScope", b =>
                {
                    b.Navigation("Properties");

                    b.Navigation("UserClaims");
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.Clients.Client", b =>
                {
                    b.Navigation("AllowedCorsOrigins");

                    b.Navigation("AllowedGrantTypes");

                    b.Navigation("AllowedScopes");

                    b.Navigation("Claims");

                    b.Navigation("ClientSecrets");

                    b.Navigation("IdentityProviderRestrictions");

                    b.Navigation("PostLogoutRedirectUris");

                    b.Navigation("Properties");

                    b.Navigation("RedirectUris");
                });

            modelBuilder.Entity("Volo.Abp.IdentityServer.IdentityResources.IdentityResource", b =>
                {
                    b.Navigation("Properties");

                    b.Navigation("UserClaims");
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.Tenant", b =>
                {
                    b.Navigation("ConnectionStrings");
                });
#pragma warning restore 612, 618
        }
    }
}
